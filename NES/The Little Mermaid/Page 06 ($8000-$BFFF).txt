LOCATION IN RAM: 0x18010

8520
8580



00 85E0 Blank (do nothing)
01 85E1 Thrown enemy/object
02 888F Enemy in bubble
03 8A14 Fish action 1
04 867A
05 8A65 Seahorse movement 
06 8A9B
07 8BDC 
08 8BE2 Spitting fish
09 8CA3
0A 8CBA Octopus
0B 8DC5 Octopus' rock 
0C 9BA7 Stage 1 Boss (Shark) : Sending Fish
0D 9CC4 Stage 1 Boss (Shark) : Dashing
0E 9D37 Fish spawned by Shark
0F A3B3 Cannon 
10 8F89
11 8FC7
12 9046 Fish action 2
13 A5F0
14 A5F0
15 908F Crab (spawned by eel) Same as 25
16 91D9 Small fish - following Ariel 
17 913F
18 913F
19 913F
1A 913F
1B 913F
1C 92A9 Sleeper (w/ small fish)
1D 9229 Small fish - default
1E 9367
1F 9274 Small fish - quad release 
20 940C Shrimp 
21 9460 Poor unfortunate souls
22 9461 Starfish spawner?
23 954F Starfish (shooting upward)
24 9604 Frozen fish in ice 
25 908F Helmet Crab 
26 869D Crab 
27 86C1 Crab (ducking/falling)
28 86F1
29 8715
2A 9D3A Walrus
2B 9EC7 Item drop/slide for Walrus
2C 9F60 Eel 1
2D 9F60 Eel 2
2E A1CF Seahorse Boss
2F A324 Fish (shot from cannon)
30 986D Carried item? (shell?)
31 97D5
32 97D5
33 975D
34 9A36
35 9A36
36 9A11
37 87EE
38 998B Red Orb
39 998B Green Orb 
3A 9A69 
3B 9A69
3C 8DCB Volcano?
3D 878B
3E A63D
3F 888E
40 888E Water splash?
41 8EE3
42 877D Urn
43 8DCB Upside-down volcano 
44 8E8C Volcanic rocks 
45 9654
46 96E1
47 A3D9 Ursula 1
48 A54F Ursula 1 - Enemy Spawn 1 (???)
49 A5F0 Ursula 2 - Enemy Spawn 2 (???)
4A A5F6 Ursula's Orb
4B 8F6E
4C 876B
4D 9AA1 \
4E 9AA1 \
4F 9AA1 \
50 9AA1 \Hidden Items
51 9AA1 /
52 9B0A Flounder
53 9B0A
54 9B0A
55 9B0A
56 9B0A
57 A692 Ursula 2
58 A83E Fish spawn (Ursula 2)
59 A879
5A A0D8 Crab Spawner (Eels) 
5B A324
5C 8821
5D 8872
5E 887F
5F 888E Urchin (shot from cannon) (Seahorse)

================================================================
FUNCTION $8000
Runs the action scripts of every object slot from lowest to highest.
POSSIBLE GLITCH CONDITION: Load a action script value greater than #$5F

06:8000:A5 B1     LDA $00B1   ; Health
06:8002:F0 3A     BEQ $803E   ; Exit if zero 
 
If player has health
	06:8004:A2 01     LDX #$01
	06:8006:86 EF     STX $00EF   ; Current slot #
	 
	For (X=1,X<16,X++) do
		06:8008:A9 06     LDA #$06
		06:800A:85 99     STA $0099   ; ? (Page #?)
		06:800C:BD 00 03  LDA $0300,X 
		06:800F:10 25     BPL $8036   ; Skip ahead if slot is empty
		 
		If slot is occupied
			06:8011:BD A0 04  LDA $04A0,X ; Check if object is stunned
			06:8014:D0 16     BNE $802C   ; Jump ahead if so
			06:8016:BC 10 03  LDY $0310,X
			06:8019:B9 20 85  LDA $8520,Y ; Set pointer address for current action script
			06:801C:85 00     STA $0000
			06:801E:B9 80 85  LDA $8580,Y
			06:8021:85 01     STA $0001
			06:8023:A9 80     LDA #$80    ; Set return address
			06:8025:48        PHA
			06:8026:A9 2B     LDA #$2B
			06:8028:48        PHA
			06:8029:6C 00 00  JMP ($0000)
			06:802C:E0 03     CPX #$03    ; Check if object is a bubble
			06:802E:90 06     BCC $8036   ; Jump ahead if so
			
			If object is not a bubble
				06:8030:20 3F 80  JSR $803F   ; Run action if object is colliding with Ariel
				06:8033:20 FF 80  JSR $80FF   ; Run action if object is colliding with a bubble 
		 
		 06:8036:E6 EF     INC $00EF ; Tick up to next object slot
		 06:8038:A6 EF     LDX $00EF
		 06:803A:E0 10     CPX #$10
		 06:803C:D0 CA     BNE $8008 ; Repeat until all slots checked
 
 06:803E:60        RTS -----------------------------------------
================================================================
FUNCTION $803F
Checks if Ariel is colliding with object X,
& does the appropriate action if so.

06:803F:20 F2 FA  JSR $FAF2   ; Check if Ariel is colliding with object X
06:8042:B0 79     BCS $80BD   ; Exit if not

	If object is colliding with Ariel
	06:8044:BD C0 03  LDA $03C0,X ; Check if item has damage flag
	06:8047:29 40     AND #$40    ;
	06:8049:F0 73     BEQ $80BE   ; Skip to next section if not
	06:804B:A5 3F     LDA $003F
	06:804D:05 2F     ORA $002F
	06:804F:D0 6C     BNE $80BD   ; Exit unless both are zero
	06:8051:A5 BB     LDA $00BB
	06:8053:D0 68     BNE $80BD   ; Exit if not zero
	06:8055:A9 07     LDA #$07
	06:8057:C5 30     CMP $0030
	06:8059:F0 62     BEQ $80BD   ; Exit if Ariel is already in damage animation
	06:805B:C6 B1     DEC $00B1   ; Tick down health
	06:805D:D0 05     BNE $8064   ; Jump ahead if not zero
	06:805F:A0 00     LDY #$00
	06:8061:8C 80 04  STY $0480   ; Clear Parameter 3 (Death flag?)
	06:8064:A4 30     LDY $0030
	06:8066:8C 60 04  STY $0460   ; Preserve Ariel's previous action phase in $460
	06:8069:85 30     STA $0030   ; Set damage animation
	06:806B:A9 1D     LDA #$1D
	06:806D:20 A0 FC  JSR $FCA0
	06:8070:C0 04     CPY #$04
	06:8072:F0 27     BEQ $809B
	06:8074:C0 05     CPY #$05
	06:8076:F0 23     BEQ $809B
	06:8078:A9 08     LDA #$08
	06:807A:8D 30 04  STA $0430
	06:807D:A9 00     LDA #$00
	06:807F:8D 18 04  STA $0418
	06:8082:8D 48 04  STA $0448
	06:8085:8D 60 04  STA $0460
	06:8088:C0 02     CPY #$02
	06:808A:D0 0F     BNE $809B
	06:808C:8C 60 04  STY $0460
	06:808F:AC B0 03  LDY $03B0
	06:8092:30 29     BMI $80BD
	06:8094:8D A0 03  STA $03A0
	06:8097:8D B0 03  STA $03B0
	06:809A:60        RTS -----------------------------------------
	06:809B:A9 00     LDA #$00
	06:809D:85 3A     STA $003A
	06:809F:8D 80 03  STA $0380
	06:80A2:A9 01     LDA #$01
	06:80A4:8D 90 03  STA $0390
	06:80A7:A9 10     LDA #$10
	06:80A9:8D 70 04  STA $0470
	06:80AC:A9 01     LDA #$01
	06:80AE:8D D0 03  STA $03D0
	06:80B1:AD 00 04  LDA $0400
	06:80B4:29 40     AND #$40
	06:80B6:F0 21     BEQ $80D9
	06:80B8:A9 02     LDA #$02
	06:80BA:8D D0 03  STA $03D0
 
06:80BD:60        RTS -----------------------------------------
 
 ARIEL COLLIDES WITH CARRYABLE OBJECT
 
 06:80BE:A5 3A     LDA $003A
 06:80C0:05 30     ORA $0030
 06:80C2:D0 15     BNE $80D9   ; Exit if Ariel is already carrying an object
                                  or if Ariel is in anything but the normal phase
 
 06:80C4:BD 10 03  LDA $0310,X 
 06:80C7:C9 30     CMP #$30    ; Check if object is shell
 06:80C9:F0 0C     BEQ $80D7   ; If so, set as carried object
 06:80CB:C9 02     CMP #$02    ; Check if object is bubble
 06:80CD:D0 0A     BNE $80D9   ; If not, exit
 
 If object is bubble:
	 06:80CF:86 3A     STX $003A   ; Set bubble as carried object
	 06:80D1:A9 00     LDA #$00
	 06:80D3:9D 80 04  STA $0480,X ; Set bubble's parameter 3 as zero
	 06:80D6:60        RTS -----------------------------------------
	 
 If object is shell: 
	 06:80D7:86 3A     STX $003A   ; Set as carried object
	 06:80D9:60        RTS -----------------------------------------
================================================================
FUNCTION $80DA

 06:80DA:86 01     STX $0001   ; Temporary storage of X
 
 06:80DC:A6 00     LDX $0000   ; Object slot #
 06:80DE:A4 3D     LDY $003D   ; Load bubble power 
 06:80E0:A9 00     LDA #$00
 06:80E2:9D 10 03  STA $0310,X ; Set action loop to 0 (do nothing)
 06:80E5:9D C0 03  STA $03C0,X ; Clear flags 
 
 06:80E8:B9 F7 80  LDA $80F7,Y
 06:80EB:9D 00 03  STA $0300,X ; Set flag (0x80 for all bubble types)
 
 06:80EE:B9 FB 80  LDA $80FB,Y
 06:80F1:20 45 FC  JSR $FC45   ; Spawn sprite
 
 06:80F4:A6 01     LDX $0001   ; Restore value of X
 06:80F6:60        RTS -----------------------------------------
================================================================
DATA TABLE $80F7
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
80F0                      80 80 80 80

DATA TABLE $80FB
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
80F0                                  10 10 51 14
================================================================
FUNCTION $80FF
Checks if object X is colliding with a bubble,
& does the appropriate action if so.

 06:80FF:20 A0 FB  JSR $FBA0   ; Check if object X is colliding with a bubble
 06:8102:B0 D5     BCS $80D9   ; Exit if not
 
 06:8104:BD 10 03  LDA $0310,X ; Check action loop of X
 06:8107:C9 06     CMP #$06    
 06:8109:F0 CE     BEQ $80D9   ; Exit if action loop 06
 
 06:810B:84 00     STY $0000   ; Save current Y position

 06:810D:BD 10 03  LDA $0310,X ; Load action loop of X
 06:8110:A8        TAY
 
 06:8111:B9 C0 84  LDA $84C0,Y 
 06:8114:F0 C4     BEQ $80DA   ; Object collision, no bubble graphic 
 06:8116:B9 60 84  LDA $8460,Y
 06:8119:F0 1F     BEQ $813A
 
 06:811B:A9 00     LDA #$00
 06:811D:85 01     STA $0001
 06:811F:A5 3D     LDA $003D    ; Bubble Power
 06:8121:D0 39     BNE $815C
 
 Bubble Power 0
 
 06:8123:BD 10 03  LDA $0310,X 
 06:8126:C9 1C     CMP #$1C     ; Sleeper fish
 06:8128:F0 10     BEQ $813A
 06:812A:C9 1E     CMP #$1E     ; ???
 06:812C:F0 0C     BEQ $813A
 06:812E:C9 0A     CMP #$0A     ; Octopus 
 06:8130:F0 08     BEQ $813A    ; Stun these enemies but do not spawn a bubble graphic,
                                  & skip bubbling function
 
 06:8132:BD A0 04  LDA $04A0,X ; Check stun timer
 06:8135:D0 25     BNE $815C   ; If not zero, then fully bubble the enemy
 06:8137:20 32 88  JSR $8832   ; Stun enemy
 06:813A:BD 10 03  LDA $0310,X
 06:813D:C9 0C     CMP #$0C    ; Shark 1
 06:813F:F0 76     BEQ $81B7
 06:8141:C9 0D     CMP #$0D    ; Shark 2
 06:8143:F0 72     BEQ $81B7
 06:8145:C9 2A     CMP #$2A    ; Walrus
 06:8147:F0 6E     BEQ $81B7
 06:8149:C9 2C     CMP #$2C    ; Eel 1
 06:814B:F0 6A     BEQ $81B7
 06:814D:C9 2D     CMP #$2D    ; Eel 2
 06:814F:F0 66     BEQ $81B7
 06:8151:C9 2E     CMP #$2E    ; Seahorse 
 06:8153:F0 62     BEQ $81B7   ; Do not set a stun timer if it's a boss
 
 06:8155:A9 78     LDA #$78
 06:8157:9D A0 04  STA $04A0,X ; Set stun timer to #$78 (120 frames/2 seconds)
 06:815A:D0 5B     BNE $81B7
 
 06:815C:BD C0 03  LDA $03C0,X
 06:815F:29 20     AND #$20
 06:8161:F0 60     BEQ $81C3
 06:8163:A5 3D     LDA $003D
 06:8165:C9 01     CMP #$01
 06:8167:D0 0F     BNE $8178
 06:8169:BD 10 03  LDA $0310,X
 06:816C:C9 1C     CMP #$1C
 06:816E:F0 CA     BEQ $813A
 06:8170:C9 1E     CMP #$1E
 06:8172:F0 C6     BEQ $813A
 06:8174:C9 0A     CMP #$0A
 06:8176:F0 C2     BEQ $813A
 06:8178:A5 3D     LDA $003D
 06:817A:C9 03     CMP #$03
 06:817C:D0 04     BNE $8182
 06:817E:A9 0C     LDA #$0C
 06:8180:85 01     STA $0001
 06:8182:B9 60 84  LDA $8460,Y 
 06:8185:38        SEC
 06:8186:E5 01     SBC $0001
 06:8188:9D 30 04  STA $0430,X ; Animation loop
 
 06:818B:B9 C0 84  LDA $84C0,Y 
 06:818E:9D 90 04  STA $0490,X ; Death animation
 
 06:8191:A9 02     LDA #$02
 06:8193:9D 10 03  STA $0310   ; Action Loop 2 - Enemy in bubble 
 06:8196:A9 80     LDA #$80
 06:8198:9D 00 03  STA $0300,X ; Flag into existence
>06:819B:BD C0 03  LDA $03C0,X
 06:819E:29 1F     AND #$1F
 06:81A0:9D C0 03  STA $03C0,X ; Clear flags, retain same hitbox
 06:81A3:A9 00     LDA #$00
 06:81A5:9D 18 04  STA $0418,X ; Position in animation loop
 06:81A8:9D 48 04  STA $0448,X 
 06:81AB:9D 60 04  STA $0460,X ; Counter 1
 06:81AE:9D 70 04  STA $0470,X ; Counter 2
 06:81B1:9D 80 04  STA $0480,X ; Counter 3
 06:81B4:9D A0 04  STA $04A0,X ; Existence timer?
 06:81B7:A9 00     LDA #$00
 06:81B9:A4 00     LDY $0000
 06:81BB:99 00 03  STA $0300,Y ; Erase colliding object
 06:81BE:A9 13     LDA #$13
 06:81C0:20 A0 FC  JSR $FCA0
 06:81C3:60        RTS -----------------------------------------
================================================================
FUNCTION $81C4

 06:81C4:86 04     STX $0004
 06:81C6:BD 00 04  LDA $0400,X
 06:81C9:30 03     BMI $81CE
 06:81CB:4C 84 82  JMP $8284
 06:81CE:A9 00     LDA #$00
 06:81D0:85 07     STA $0007
 06:81D2:BD C0 03  LDA $03C0,X
 06:81D5:29 1F     AND #$1F
 06:81D7:C9 02     CMP #$02
 06:81D9:F0 04     BEQ $81DF
 06:81DB:C9 03     CMP #$03
 06:81DD:D0 04     BNE $81E3
 06:81DF:A9 08     LDA #$08
 06:81E1:85 07     STA $0007
 06:81E3:A0 0F     LDY #$0F
 06:81E5:BD 60 03  LDA $0360,X
 06:81E8:38        SEC
 06:81E9:E5 FA     SBC $00FA
 06:81EB:B0 03     BCS $81F0
 06:81ED:E9 0F     SBC #$0F
 06:81EF:18        CLC
 06:81F0:85 05     STA $0005
 06:81F2:BD 70 03  LDA $0370,X
 06:81F5:E5 FB     SBC $00FB
 06:81F7:29 01     AND #$01
 06:81F9:F0 03     BEQ $81FE
 06:81FB:4C 84 82  JMP $8284
 06:81FE:C4 04     CPY $0004
 06:8200:F0 7A     BEQ $827C
 06:8202:B9 00 03  LDA $0300,Y
 06:8205:10 75     BPL $827C
 06:8207:B9 00 04  LDA $0400,Y
 06:820A:10 70     BPL $827C
 06:820C:29 04     AND #$04
 06:820E:D0 6C     BNE $827C
 06:8210:B9 C0 03  LDA $03C0,Y
 06:8213:29 40     AND #$40
 06:8215:F0 65     BEQ $827C
 06:8217:BE 10 03  LDX $0310,Y
 06:821A:BD C0 84  LDA $84C0,X
 06:821D:F0 5D     BEQ $827C
 06:821F:B9 A0 04  LDA $04A0,Y
 06:8222:D0 58     BNE $827C
 06:8224:B9 C0 03  LDA $03C0,Y
 06:8227:29 1F     AND #$1F
 06:8229:AA        TAX
 06:822A:BD 80 FB  LDA $FB80,X
 06:822D:18        CLC
 06:822E:65 07     ADC $0007
 06:8230:85 02     STA $0002
 06:8232:C6 02     DEC $0002
 06:8234:BD 60 FB  LDA $FB60,X
 06:8237:18        CLC
 06:8238:65 07     ADC $0007
 06:823A:85 03     STA $0003
 06:823C:A6 04     LDX $0004
 06:823E:B9 30 03  LDA $0330,Y
 06:8241:38        SEC
 06:8242:FD 30 03  SBC $0330,X
 06:8245:48        PHA
 06:8246:B9 40 03  LDA $0340,Y
 06:8249:FD 40 03  SBC $0340,X
 06:824C:68        PLA
 06:824D:B0 04     BCS $8253
 06:824F:49 FF     EOR #$FF
 06:8251:69 01     ADC #$01
 06:8253:C5 02     CMP $0002
 06:8255:B0 25     BCS $827C
 06:8257:B9 60 03  LDA $0360,Y
 06:825A:38        SEC
 06:825B:E5 FA     SBC $00FA
 06:825D:B0 03     BCS $8262
 06:825F:E9 0F     SBC #$0F
 06:8261:18        CLC
 06:8262:85 1F     STA $001F
 06:8264:B9 70 03  LDA $0370,Y
 06:8267:E5 FB     SBC $00FB
 06:8269:29 01     AND #$01
 06:826B:D0 0F     BNE $827C
 06:826D:A5 1F     LDA $001F
 06:826F:38        SEC
 06:8270:E5 05     SBC $0005
 06:8272:B0 04     BCS $8278
 06:8274:49 FF     EOR #$FF
 06:8276:69 01     ADC #$01
 06:8278:C5 03     CMP $0003
 06:827A:90 12     BCC $828E
 06:827C:88        DEY
 06:827D:C0 02     CPY #$02
 06:827F:F0 03     BEQ $8284
 06:8281:4C FE 81  JMP $81FE
 06:8284:A6 04     LDX $0004
 06:8286:38        SEC
 06:8287:60        RTS -----------------------------------------
================================================================
TABLE $8460
Stores ??? for Action Loop X
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8460 00 00 00 7B 00 7D 00 00 00 00 82 00 00 00 7B 00
8470 00 00 7B 00 00 7C 7E 7E 7E 7E 7E 7E 7F 7E 80 7E
8480 81 00 00 00 7B 00 00 00 00 00 00 00 00 00 00 7B
8490 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
84A0 00 00 00 00 00 00 00 00 00 00 00 7E 00 00 00 00
84B0 00 00 00 00 00 00 00 00 7B 00 00 00 00 00 00 00

Animation loop when bubbled?

TABLE $84C0
Stores ??? for Action Loop X
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
84C0 00 00 00 60 00 66 00 00 6A 00 63 00 5C 5C 60 00
84D0 61 61 60 61 67 62 68 68 68 68 68 68 69 68 6B 68
84E0 65 00 67 67 60 6D 00 00 00 00 57 00 5B 5B 55 60
84F0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
8500 00 00 00 00 00 6C 00 7A 00 00 00 68 00 00 00 00
8510 00 00 00 00 00 00 00 81 60 00 00 61 00 00 00 00

03 Fish 1     7B 60
05            7D 66
08               6A
0A Octopus    82 63
0C Shark 1       5C
0D Shark 2       5C
0E Shark fish 7B 60
10               61
11               61
12 Fish 2     7B 60
13               61
14               67
15 Eel Crab   7C 62
16            7E 68
17            7E 68
18            7E 68
19            7E 68
1A            7E 68
1B            7E 68
1C            7F 69
1D            7E 68
1E            80 6B
1F            7E 68
20            81 65
22               67
23               67
24            7B 60
25 Crab?         6D
2A Walrus        57
2C Eel 1         5B
2D Eel 2         5B
2E Seahorse      55
2F Cannon fish7B 60
45               6C
47 Ursula 1      7A
4B            7E 68
57 Ursula 2      81
58 Ursula2Fish7B 60
5B               61

================================================================

================================================================
FUNCTION $85E0
ACTION LOOP $00
Blank (do nothing) (Used for Ariel)

 06:85E0:60        RTS -----------------------------------------
================================================================
FUNCTION $85E1
ACTION LOOP $01
Thrown enemy/object

06:85E1:20 C4 81  JSR $81C4 
06:85E4:B0 0A     BCS $85F0 

If ?
	06:85E6:BD 30 04  LDA $0430,X ; Animation loop
	06:85E9:C9 40     CMP #$40    ; Check if shell
	06:85EB:D0 F3     BNE $85E0   ; Exit if not
	06:85ED:4C 47 86  JMP $8647   ; Function that handles thrown shell
 
 06:85F0:20 35 D5  JSR $D535
 06:85F3:B0 06     BCS $85FB
 06:85F5:A9 00     LDA #$00
 06:85F7:9D 00 03  STA $0300,X ; Set Action timer to zero
 06:85FA:60        RTS -----------------------------------------
 06:85FB:BD 30 04  LDA $0430,X
 06:85FE:C9 40     CMP #$40
 06:8600:F0 1D     BEQ $861F
 06:8602:A0 08     LDY #$08
 06:8604:20 B9 FC  JSR $FCB9
 06:8607:B0 0E     BCS $8617
 06:8609:A0 06     LDY #$06
 06:860B:20 CC FC  JSR $FCCC
 06:860E:A5 10     LDA $0010
 06:8610:F0 05     BEQ $8617
 06:8612:B0 03     BCS $8617
 06:8614:4C 4E 98  JMP $984E
 06:8617:20 71 83  JSR $8371
 06:861A:A9 1B     LDA #$1B
 06:861C:4C A0 FC  JMP $FCA0
 06:861F:A0 08     LDY #$08
 06:8621:20 B9 FC  JSR $FCB9
 06:8624:20 4E 98  JSR $984E
 06:8627:90 13     BCC $863C
 06:8629:A5 BE     LDA $00BE
 06:862B:C9 30     CMP #$30
 06:862D:D0 18     BNE $8647
 06:862F:A5 1A     LDA $001A
 06:8631:D0 46     BNE $8679
 06:8633:20 BA E7  JSR $E7BA
 06:8636:20 64 FE  JSR $FE64
 06:8639:4C 47 86  JMP $8647
 06:863C:A0 06     LDY #$06
 06:863E:20 CC FC  JSR $FCCC
 06:8641:A5 10     LDA $0010
 06:8643:F0 02     BEQ $8647
 06:8645:90 32     BCC $8679
 06:8647:BD D0 03  LDA $03D0,X
 06:864A:29 08     AND #$08
 06:864C:F0 14     BEQ $8662
 06:864E:BD 60 03  LDA $0360,X
 06:8651:38        SEC
 06:8652:E5 FA     SBC $00FA
 06:8654:B0 02     BCS $8658
 06:8656:E9 0F     SBC #$0F
 06:8658:C9 04     CMP #$04
 06:865A:B0 06     BCS $8662
 06:865C:A9 00     LDA #$00
 06:865E:9D 00 03  STA $0300,X
 06:8661:60        RTS -----------------------------------------
 06:8662:A9 04     LDA #$04
 06:8664:9D D0 03  STA $03D0,X ; Set movement to down
 06:8667:A9 00     LDA #$00
 06:8669:9D A0 03  STA $03A0,X ;
 06:866C:9D B0 03  STA $03B0,X ; Set initial downward velocity to zero
 06:866F:A9 81     LDA #$81
 06:8671:9D 00 03  STA $0300,X ; Set action timer to #$81
 06:8674:A9 30     LDA #$30
 06:8676:9D 10 03  STA $0310,X ; Set action loop to #$30
 06:8679:60        RTS -----------------------------------------
================================================================
FUNCTION $86C1
Action Loop #$27
Crab (ducking)

 06:86C1:A0 0C     LDY #$0C
 06:86C3:20 B9 FC  JSR $FCB9
 06:86C6:B0 0D     BCS $86D5
 06:86C8:BD 00 04  LDA $0400,X
 06:86CB:29 BF     AND #$BF
 06:86CD:9D 00 04  STA $0400,X
 06:86D0:DE 60 04  DEC $0460,X ; Tick down timer
 06:86D3:D0 0F     BNE $86E4
 06:86D5:A9 10     LDA #$10
 06:86D7:20 45 FC  JSR $FC45   ; Spawn bubble
 06:86DA:A9 00     LDA #$00
 06:86DC:9D 10 03  STA $0310,X
 06:86DF:A9 14     LDA #$14
 06:86E1:4C A0 FC  JMP $FCA0
 06:86E4:BD 18 04  LDA $0418,X
 06:86E7:C9 02     CMP #$02
 06:86E9:D0 05     BNE $86F0
 06:86EB:A9 00     LDA #$00
 06:86ED:9D 48 04  STA $0448,X
 06:86F0:60        RTS -----------------------------------------
================================================================
FUNCTION $8821
Low-powered bubble stunning enemy

 06:8821:A9 00     LDA #$00
 06:8823:9D 48 04  STA $0448,X
 06:8826:BC 60 04  LDY $0460,X ; Check which enemy is being stunned
 06:8829:B9 A0 04  LDA $04A0,Y ; Load stun timer from that enemy
 06:882C:D0 F2     BNE $8820   ;
 06:882E:9D 00 03  STA $0300,X ; If enemy's stun timer has run out, despawn this bubble
 06:8831:60        RTS -----------------------------------------
================================================================
FUNCTION $8832
Stuns enemy with lowest-powered bubble attack
X = slot # of existing object

 06:8832:84 02     STY $0002   ; Temp storage for Y value
 06:8834:20 54 FE  JSR $FE54   ; Locate next unoccupied slot
 06:8837:B0 36     BCS $886F   ; Exit if none found
 06:8839:A9 12     LDA #$12
 06:883B:20 51 FC  JSR $FC51   ; Spawn bubble on top of enemy
 06:883E:A9 01     LDA #$01
 06:8840:99 18 04  STA $0418,Y ; Start bubble animation loop from beginning
 06:8843:BD 30 03  LDA $0330,X ; Assign bubble the same 
 06:8846:99 30 03  STA $0330,Y
 06:8849:BD 40 03  LDA $0340,X
 06:884C:99 40 03  STA $0340,Y
 06:884F:BD 60 03  LDA $0360,X
 06:8852:99 60 03  STA $0360,Y
 06:8855:BD 70 03  LDA $0370,X
 06:8858:99 70 03  STA $0370,Y
 06:885B:A9 5C     LDA #$5C
 06:885D:99 10 03  STA $0310,Y ; Set action loop as #$5C
 06:8860:A9 00     LDA #$00
 06:8862:99 C0 03  STA $03C0,Y
 06:8865:99 A0 04  STA $04A0,Y
 06:8868:99 F0 03  STA $03F0,Y
 06:886B:8A        TXA
 06:886C:99 60 04  STA $0460,Y ; Stores identity of spawning object
 06:886F:A4 02     LDY $0002 ; Restore previous Y value
 06:8871:60        RTS -----------------------------------------
================================================================
FUNCTION $8A14
Fish Action 1

 06:8A14:BD 00 03  LDA $0300,X @ $030F = #$80
 06:8A17:29 0F     AND #$0F
 06:8A19:D0 1A     BNE $8A35
 06:8A1B:FE 00 03  INC $0300,X @ $030F = #$80
 06:8A1E:A9 40     LDA #$40
 06:8A20:9D A0 03  STA $03A0,X @ $03AF = #$C0
 06:8A23:A9 00     LDA #$00
 06:8A25:9D B0 03  STA $03B0,X @ $03BF = #$FF
 06:8A28:BD D0 03  LDA $03D0,X @ $03DF = #$00
 06:8A2B:09 04     ORA #$04
 06:8A2D:9D D0 03  STA $03D0,X @ $03DF = #$00
 06:8A30:A9 1F     LDA #$1F
 06:8A32:9D 70 04  STA $0470,X @ $047F = #$00
 06:8A35:AD 60 03  LDA $0360 = #$AD
 06:8A38:DD 60 03  CMP $0360,X @ $036F = #$BC
 06:8A3B:D0 10     BNE $8A4D
 06:8A3D:A9 00     LDA #$00
 06:8A3F:9D A0 03  STA $03A0,X @ $03AF = #$C0
 06:8A42:9D B0 03  STA $03B0,X @ $03BF = #$FF
 06:8A45:9D 80 03  STA $0380,X @ $038F = #$00
 06:8A48:A9 01     LDA #$01
 06:8A4A:9D 90 03  STA $0390,X @ $039F = #$00
 06:8A4D:20 00 FD  JSR $FD00
 06:8A50:DE 70 04  DEC $0470,X @ $047F = #$00
 06:8A53:10 0D     BPL $8A62
 06:8A55:A9 1F     LDA #$1F
 06:8A57:9D 70 04  STA $0470,X @ $047F = #$00
 06:8A5A:BD D0 03  LDA $03D0,X @ $03DF = #$00
 06:8A5D:49 0C     EOR #$0C
 06:8A5F:9D D0 03  STA $03D0,X @ $03DF = #$00
 06:8A62:4C DF FC  JMP $FCDF
 06:8A65:BD 00 03  LDA $0300,X @ $030F = #$80
 06:8A68:29 0F     AND #$0F
 06:8A6A:D0 1A     BNE $8A86
 06:8A6C:20 33 FD  JSR $FD33
 06:8A6F:C9 60     CMP #$60
 06:8A71:B0 12     BCS $8A85
 06:8A73:FE 00 03  INC $0300,X
 06:8A76:A9 20     LDA #$20
 06:8A78:9D 60 04  STA $0460,X
 06:8A7B:A9 00     LDA #$00
 06:8A7D:9D A0 03  STA $03A0,X
 06:8A80:A9 01     LDA #$01
 06:8A82:9D B0 03  STA $03B0,X
 06:8A85:60        RTS -----------------------------------------
 06:8A86:C9 02     CMP #$02
 06:8A88:D0 03     BNE $8A8D
 06:8A8A:4C 35 8A  JMP $8A35
 06:8A8D:20 EB F8  JSR $F8EB
 06:8A90:DE 60 04  DEC $0460,X
 06:8A93:10 F0     BPL $8A85
 06:8A95:FE 00 03  INC $0300,X
 06:8A98:4C 1E 8A  JMP $8A1E
 06:8A9B:20 A0 FB  JSR $FBA0   ; Check if object X is colliding with a bubble
 06:8A9E:B0 03     BCS $8AA3   ; Jump ahead if not
 06:8AA0:4C 2C 8B  JMP $8B2C
 06:8AA3:A0 0F     LDY #$0F
 06:8AA5:BD 60 03  LDA $0360,X
 06:8AA8:38        SEC
 06:8AA9:E5 FA     SBC $00FA
 06:8AAB:85 00     STA $0000 = #$44
 06:8AAD:B0 04     BCS $8AB3
 06:8AAF:69 0F     ADC #$0F
 06:8AB1:85 00     STA $0000 = #$44
 06:8AB3:B9 00 03  LDA $0300,Y @ $0300 = #$C0
 06:8AB6:10 5B     BPL $8B13
 06:8AB8:B9 00 04  LDA $0400,Y @ $0400 = #$D0
 06:8ABB:10 56     BPL $8B13
 06:8ABD:B9 30 04  LDA $0430,Y @ $0430 = #$01
 06:8AC0:C9 40     CMP #$40
 06:8AC2:F0 0B     BEQ $8ACF
 06:8AC4:B9 10 03  LDA $0310,Y @ $0310 = #$00
 06:8AC7:C9 02     CMP #$02
 06:8AC9:F0 04     BEQ $8ACF
 06:8ACB:C9 01     CMP #$01
 06:8ACD:D0 44     BNE $8B13
 06:8ACF:BD 30 03  LDA $0330,X
 06:8AD2:38        SEC
 06:8AD3:F9 30 03  SBC $0330,Y
 06:8AD6:48        PHA
 06:8AD7:BD 40 03  LDA $0340,X
 06:8ADA:F9 40 03  SBC $0340,Y
 06:8ADD:68        PLA
 06:8ADE:B0 04     BCS $8AE4
 06:8AE0:49 FF     EOR #$FF
 06:8AE2:69 01     ADC #$01
 06:8AE4:C9 14     CMP #$14
 06:8AE6:B0 2B     BCS $8B13
 06:8AE8:B9 60 03  LDA $0360,Y
 06:8AEB:38        SEC
 06:8AEC:E5 FA     SBC $00FA
 06:8AEE:B0 03     BCS $8AF3
 06:8AF0:69 0F     ADC #$0F
 06:8AF2:38        SEC
 06:8AF3:E5 00     SBC $0000
 06:8AF5:B0 04     BCS $8AFB
 06:8AF7:49 FF     EOR #$FF
 06:8AF9:69 01     ADC #$01
 06:8AFB:C9 14     CMP #$14
 06:8AFD:B0 14     BCS $8B13
 06:8AFF:B9 30 04  LDA $0430,Y @ $0430 = #$01
 06:8B02:C9 40     CMP #$40
 06:8B04:D0 15     BNE $8B1B
 06:8B06:B9 00 03  LDA $0300,Y @ $0300 = #$C0
 06:8B09:29 0F     AND #$0F
 06:8B0B:F0 06     BEQ $8B13
 06:8B0D:20 62 86  JSR $8662
 06:8B10:4C 31 8B  JMP $8B31
 06:8B13:88        DEY
 06:8B14:C0 02     CPY #$02
 06:8B16:D0 9B     BNE $8AB3
 06:8B18:4C B8 8B  JMP $8BB8
 06:8B1B:86 00     STX $0000 = #$44
 06:8B1D:B9 90 04  LDA $0490,Y @ $0490 = #$00
 06:8B20:F0 05     BEQ $8B27
 06:8B22:98        TYA
 06:8B23:AA        TAX
 06:8B24:20 71 83  JSR $8371
 06:8B27:A6 00     LDX $0000 = #$44
 06:8B29:4C 31 8B  JMP $8B31
 06:8B2C:A9 00     LDA #$00
 06:8B2E:99 00 03  STA $0300,Y
 06:8B31:A9 20     LDA #$20
 06:8B33:20 45 FC  JSR $FC45
 06:8B36:A9 03     LDA #$03
 06:8B38:9D 10 03  STA $0310,X @ $031F = #$30
 06:8B3B:A9 60     LDA #$60
 06:8B3D:9D C0 03  STA $03C0,X @ $03CF = #$00
 06:8B40:A9 81     LDA #$81
 06:8B42:9D 00 03  STA $0300,X @ $030F = #$80
 06:8B45:20 6F FC  JSR $FC6F
 06:8B48:BD D0 03  LDA $03D0,X @ $03DF = #$00
 06:8B4B:09 08     ORA #$08
 06:8B4D:9D D0 03  STA $03D0,X @ $03DF = #$00
 06:8B50:A9 80     LDA #$80
 06:8B52:9D A0 03  STA $03A0,X @ $03AF = #$C0
 06:8B55:A9 00     LDA #$00
 06:8B57:9D B0 03  STA $03B0,X @ $03BF = #$FF
 06:8B5A:A9 1F     LDA #$1F
 06:8B5C:9D 70 04  STA $0470,X @ $047F = #$00
 06:8B5F:20 54 FE  JSR $FE54
 06:8B62:B0 53     BCS $8BB7
 06:8B64:86 0F     STX $000F = #$F0
 06:8B66:A9 3F     LDA #$3F
 06:8B68:20 51 FC  JSR $FC51
 06:8B6B:A9 07     LDA #$07
 06:8B6D:99 10 03  STA $0310,Y
 06:8B70:BD 30 03  LDA $0330,X
 06:8B73:99 30 03  STA $0330,Y
 06:8B76:BD 40 03  LDA $0340,X @ $034F = #$01
 06:8B79:99 40 03  STA $0340,Y @ $0340 = #$00
 06:8B7C:BD 60 03  LDA $0360,X @ $036F = #$BC
 06:8B7F:99 60 03  STA $0360,Y @ $0360 = #$AD
 06:8B82:BD 70 03  LDA $0370,X @ $037F = #$00
 06:8B85:99 70 03  STA $0370,Y @ $0370 = #$00
 06:8B88:A9 F3     LDA #$F3
 06:8B8A:99 A0 03  STA $03A0,Y @ $03A0 = #$00
 06:8B8D:A9 00     LDA #$00
 06:8B8F:99 B0 03  STA $03B0,Y @ $03B0 = #$00
 06:8B92:A9 01     LDA #$01
 06:8B94:99 90 03  STA $0390,Y @ $0390 = #$02
 06:8B97:A9 6F     LDA #$6F
 06:8B99:99 80 03  STA $0380,Y @ $0380 = #$00
 06:8B9C:A9 45     LDA #$45
 06:8B9E:99 C0 03  STA $03C0,Y @ $03C0 = #$00
 06:8BA1:A9 01     LDA #$01
 06:8BA3:99 F0 03  STA $03F0,Y @ $03F0 = #$00
 06:8BA6:BD D0 03  LDA $03D0,X @ $03DF = #$00
 06:8BA9:49 03     EOR #$03
 06:8BAB:09 04     ORA #$04
 06:8BAD:99 D0 03  STA $03D0,Y @ $03D0 = #$00
 06:8BB0:98        TYA
 06:8BB1:AA        TAX
 06:8BB2:20 89 FC  JSR $FC89
 06:8BB5:A6 0F     LDX $000F = #$F0
 06:8BB7:60        RTS -----------------------------------------
 06:8BB8:BD 00 03  LDA $0300,X @ $030F = #$80
 06:8BBB:29 0F     AND #$0F
 06:8BBD:D0 1A     BNE $8BD9
 06:8BBF:A9 80     LDA #$80
 06:8BC1:9D A0 03  STA $03A0,X @ $03AF = #$C0
 06:8BC4:A9 00     LDA #$00
 06:8BC6:9D B0 03  STA $03B0,X @ $03BF = #$FF
 06:8BC9:BD D0 03  LDA $03D0,X @ $03DF = #$00
 06:8BCC:09 04     ORA #$04
 06:8BCE:9D D0 03  STA $03D0,X @ $03DF = #$00
 06:8BD1:A9 1F     LDA #$1F
 06:8BD3:9D 70 04  STA $0470,X @ $047F = #$00
 06:8BD6:FE 00 03  INC $0300,X @ $030F = #$80
 06:8BD9:4C 4D 8A  JMP $8A4D
 
================================================================
FUNCTION $8BDC
ACTION LOOP $07

 06:8BDC:20 C3 F8  JSR $F8C3
 06:8BDF:4C DF FC  JMP $FCDF    ; Move horizontally
================================================================
FUNCTION $8BE2

ACTION LOOP $08
Spitting fish in Stage 3

 06:8BE2:20 6F FC  JSR $FC6F   ; Turn towards Ariel (x-position)
 06:8BE5:20 89 FC  JSR $FC89   ; Set to proper orientation
 
 06:8BE8:BD 00 03  LDA $0300,X 
 06:8BEB:29 0F     AND #$0F    ; Check if already spitting
 06:8BED:D0 20     BNE $8C0F
 06:8BEF:20 33 FD  JSR $FD33   ; Check x-position difference with Ariel
 06:8BF2:C9 40     CMP #$40    ; Check if 40 (or less?)
 06:8BF4:B0 42     BCS $8C38
 06:8BF6:BD 60 03  LDA $0360,X
 06:8BF9:CD 60 03  CMP $0360   ; Check if Ariel is higher
 06:8BFC:90 3A     BCC $8C38   ; Exit 
 
 06:8BFE:FE 00 03  INC $0300,X ; Tick up timer
 06:8C01:A0 40     LDY #$40
 06:8C03:A5 E7     LDA $00E7   ; Load RNG
 06:8C05:29 01     AND #$01
 06:8C07:D0 02     BNE $8C0B
 06:8C09:A0 20     LDY #$20
 06:8C0B:98        TYA
 06:8C0C:9D 60 04  STA $0460,X ; Timer 2 50/50 chance of #$20/#$40
 06:8C0F:BD 30 04  LDA $0430,X
 
 06:8C12:C9 38     CMP #$38    ; Check if in spitting animation
 06:8C14:F0 0A     BEQ $8C20
 06:8C16:DE 60 04  DEC $0460,X
 06:8C19:D0 1D     BNE $8C38
 06:8C1B:A9 38     LDA #$38
 06:8C1D:4C 45 FC  JMP $FC45   ; Set to spitting animation
 
 06:8C20:BD 18 04  LDA $0418,X @ $0427 = #$01
 06:8C23:F0 13     BEQ $8C38
 06:8C25:BD 48 04  LDA $0448,X @ $0457 = #$00
 06:8C28:F0 0F     BEQ $8C39
 06:8C2A:C9 10     CMP #$10
 06:8C2C:D0 0A     BNE $8C38
 06:8C2E:A9 80     LDA #$80
 06:8C30:9D 00 03  STA $0300,X
 06:8C33:A9 37     LDA #$37
 06:8C35:20 45 FC  JSR $FC45    ; Set to regular animation
 06:8C38:60        RTS -----------------------------------------
 06:8C39:20 54 FE  JSR $FE54    ; Check for unused entity slot
 06:8C3C:B0 FA     BCS $8C38    ; End if none available
 06:8C3E:86 0F     STX $000F = #$0F
 06:8C40:A9 6A     LDA #$6A
 06:8C42:99 80 03  STA $0380,Y ;
 06:8C45:99 A0 03  STA $03A0,Y ; Set diagonal velocity 
 06:8C48:A9 01     LDA #$01
 06:8C4A:99 90 03  STA $0390,Y ;
 06:8C4D:99 B0 03  STA $03B0,Y ;
 06:8C50:A9 41     LDA #$41
 06:8C52:99 C0 03  STA $03C0,Y @ $03EA = #$FF
 06:8C55:A9 01     LDA #$01
 06:8C57:99 F0 03  STA $03F0,Y ; Set HP to 1
 06:8C5A:A9 39     LDA #$39
 06:8C5C:20 51 FC  JSR $FC51   ; Produce spit shot
 
 06:8C5F:A9 09     LDA #$09
 06:8C61:99 10 03  STA $0310,Y @ $033A = #$00
 06:8C64:BD 60 03  LDA $0360,X @ $036F = #$40
 06:8C67:38        SEC
 06:8C68:E9 10     SBC #$10
 06:8C6A:99 60 03  STA $0360,Y @ $038A = #$80
 06:8C6D:BD 70 03  LDA $0370,X @ $037F = #$02
 06:8C70:38        SEC
 06:8C71:99 70 03  STA $0370,Y @ $039A = #$00
 06:8C74:BD 30 03  LDA $0330,X @ $033F = #$E4
 06:8C77:99 30 03  STA $0330,Y @ $035A = #$84
 06:8C7A:BD 40 03  LDA $0340,X @ $034F = #$0F
 06:8C7D:99 40 03  STA $0340,Y @ $036A = #$AC
 06:8C80:BD D0 03  LDA $03D0,X @ $03DF = #$02
 06:8C83:99 D0 03  STA $03D0,Y @ $03FA = #$01
 06:8C86:29 02     AND #$02
 06:8C88:AA        TAX
 06:8C89:B9 30 03  LDA $0330,Y @ $035A = #$84
 06:8C8C:18        CLC
 06:8C8D:7D 9F 8C  ADC $8C9F,X @ $8CAE = #$F7
 06:8C90:99 30 03  STA $0330,Y @ $035A = #$84
 06:8C93:B9 40 03  LDA $0340,Y @ $036A = #$AC
 06:8C96:7D A0 8C  ADC $8CA0,X @ $8CAF = #$B0
 06:8C99:99 40 03  STA $0340,Y @ $036A = #$AC
 06:8C9C:A6 0F     LDX $000F = #$0F
 06:8C9E:60        RTS -----------------------------------------
================================================================
FUNCTION $8CBA 
ACTION LOOP $0A
Octopus

 06:8CBA:BD 00 03  LDA $0300,X @ $030D = #$81
 06:8CBD:29 0F     AND #$0F
 06:8CBF:D0 15     BNE $8CD6
 06:8CC1:FE 00 03  INC $0300,X @ $030D = #$81
 06:8CC4:9D A0 03  STA $03A0,X @ $03AD = #$C0
 06:8CC7:A9 01     LDA #$01
 06:8CC9:9D B0 03  STA $03B0,X @ $03BD = #$FF
 06:8CCC:A9 30     LDA #$30
 06:8CCE:9D 60 04  STA $0460,X @ $046D = #$00
 06:8CD1:A9 08     LDA #$08
 06:8CD3:9D D0 03  STA $03D0,X @ $03DD = #$02
 06:8CD6:BD D0 03  LDA $03D0,X @ $03DD = #$02
 06:8CD9:48        PHA
 06:8CDA:20 6F FC  JSR $FC6F
 06:8CDD:20 89 FC  JSR $FC89
 06:8CE0:68        PLA
 06:8CE1:29 0C     AND #$0C
 06:8CE3:1D D0 03  ORA $03D0,X @ $03DD = #$02
 06:8CE6:9D D0 03  STA $03D0,X @ $03DD = #$02
 06:8CE9:20 00 FD  JSR $FD00
 06:8CEC:BD D0 03  LDA $03D0,X @ $03DD = #$02
 06:8CEF:29 08     AND #$08
 06:8CF1:D0 06     BNE $8CF9
 06:8CF3:9D 48 04  STA $0448,X @ $0455 = #$00
 06:8CF6:9D 18 04  STA $0418,X @ $0425 = #$00
 06:8CF9:DE 60 04  DEC $0460,X @ $046D = #$00
 06:8CFC:D0 2C     BNE $8D2A
 06:8CFE:BD D0 03  LDA $03D0,X @ $03DD = #$02
 06:8D01:49 0C     EOR #$0C
 06:8D03:9D D0 03  STA $03D0,X @ $03DD = #$02
 06:8D06:29 08     AND #$08
 06:8D08:D0 11     BNE $8D1B
 06:8D0A:A9 80     LDA #$80
 06:8D0C:9D A0 03  STA $03A0,X @ $03AD = #$C0
 06:8D0F:A9 00     LDA #$00
 06:8D11:9D B0 03  STA $03B0,X @ $03BD = #$FF
 06:8D14:A9 60     LDA #$60
 06:8D16:9D 60 04  STA $0460,X @ $046D = #$00
 06:8D19:D0 0F     BNE $8D2A
 06:8D1B:A9 00     LDA #$00
 06:8D1D:9D A0 03  STA $03A0,X @ $03AD = #$C0
 06:8D20:A9 01     LDA #$01
 06:8D22:9D B0 03  STA $03B0,X @ $03BD = #$FF
 06:8D25:A9 30     LDA #$30
 06:8D27:9D 60 04  STA $0460,X @ $046D = #$00
 06:8D2A:BD 48 04  LDA $0448,X @ $0455 = #$00
 06:8D2D:D0 07     BNE $8D36
 06:8D2F:BD 18 04  LDA $0418,X @ $0425 = #$00
 06:8D32:C9 01     CMP #$01
 06:8D34:F0 01     BEQ $8D37
 06:8D36:60        RTS -----------------------------------------
 06:8D37:BD 00 04  LDA $0400,X
 06:8D3A:10 FA     BPL $8D36
 06:8D3C:20 54 FE  JSR $FE54   ; Look for next unoccupied item slot
 06:8D3F:B0 F5     BCS $8D36   ; Exit if none
 06:8D41:A9 87     LDA #$87
 06:8D43:20 51 FC  JSR $FC51   ; Spawn rock at that slot
 06:8D46:BD 30 03  LDA $0330,X ; Assign rock the same x/y values as the octopus
 06:8D49:99 30 03  STA $0330,Y
 06:8D4C:BD 40 03  LDA $0340,X
 06:8D4F:99 40 03  STA $0340,Y
 06:8D52:BD 60 03  LDA $0360,X
 06:8D55:99 60 03  STA $0360,Y
 06:8D58:BD 70 03  LDA $0370,X
 06:8D5B:99 70 03  STA $0370,Y
 06:8D5E:A9 41     LDA #$41
 06:8D60:99 C0 03  STA $03C0,Y ; Set damage flag (+ #$01 flag?)
 06:8D63:A9 01     LDA #$01
 06:8D65:99 F0 03  STA $03F0,Y ; Set HP to 1
 06:8D68:A9 0B     LDA #$0B
 06:8D6A:99 10 03  STA $0310,Y ; Set action loop to #$0B
 06:8D6D:BD D0 03  LDA $03D0,X ; Set left/right movement to same as octopus
 06:8D70:29 03     AND #$03
 06:8D72:99 D0 03  STA $03D0,Y
 06:8D75:86 00     STX $0000 = #$D8
 06:8D77:BD 80 04  LDA $0480,X @ $048D = #$00
 06:8D7A:AA        TAX
 06:8D7B:BD B7 8D  LDA $8DB7,X @ $8DC4 = #$00
 06:8D7E:99 80 03  STA $0380,Y @ $03DA = #$00
 06:8D81:BD B9 8D  LDA $8DB9,X @ $8DC6 = #$11
 06:8D84:99 90 03  STA $0390,Y @ $03EA = #$FF
 06:8D87:BD BB 8D  LDA $8DBB,X @ $8DC8 = #$4C
 06:8D8A:99 A0 03  STA $03A0,Y @ $03FA = #$00
 06:8D8D:BD BD 8D  LDA $8DBD,X @ $8DCA = #$FC
 06:8D90:99 B0 03  STA $03B0,Y @ $040A = #$90
 06:8D93:B9 D0 03  LDA $03D0,Y @ $042A = #$00
 06:8D96:29 01     AND #$01
 06:8D98:AA        TAX
 06:8D99:B9 30 03  LDA $0330,Y @ $038A = #$DD
 06:8D9C:18        CLC
 06:8D9D:7D C1 8D  ADC $8DC1,X @ $8DCE = #$00
 06:8DA0:99 30 03  STA $0330,Y @ $038A = #$DD
 06:8DA3:B9 40 03  LDA $0340,Y @ $039A = #$00
 06:8DA6:7D C3 8D  ADC $8DC3,X @ $8DD0 = #$0F
 06:8DA9:99 40 03  STA $0340,Y @ $039A = #$00
 06:8DAC:A6 00     LDX $0000 = #$D8
 06:8DAE:BD 80 04  LDA $0480,X @ $048D = #$00
 06:8DB1:49 01     EOR #$01
 06:8DB3:9D 80 04  STA $0480,X @ $048D = #$00
 06:8DB6:60        RTS -----------------------------------------
================================================================
 8DB7/8DB8
 8DB9/8DBA
 8DBB/8DBC
 8DBD/8DBE
 
================================================================
FUNCTION $9046
ACTION LOOP $12
Rush towards Ariel

 06:9046:BD 00 03  LDA $0300,X
 06:9049:29 0F     AND #$0F
 06:904B:C9 01     CMP #$01
 06:904D:F0 2F     BEQ $907E   ; Phase 1
 06:904F:C9 02     CMP #$02
 06:9051:F0 36     BEQ $9089   ; Phase 2
 06:9053:FE 60 04  INC $0460,X ; Tick up Bound 1
 06:9056:BD 60 04  LDA $0460,X
 06:9059:C9 80     CMP #$80    
 06:905B:D0 0D     BNE $906A
 06:905D:A9 00     LDA #$00
 06:905F:9D 60 04  STA $0460,X
 06:9062:BD D0 03  LDA $03D0,X
 06:9065:49 03     EOR #$03
 06:9067:9D D0 03  STA $03D0,X
 06:906A:20 DF FC  JSR $FCDF
 06:906D:20 33 FD  JSR $FD33
 06:9070:C9 40     CMP #$40
 06:9072:B0 CF     BCS $9043   ; Exit 
 06:9072:B0 CF     BCS $9043   ; Exit 
 06:9074:20 12 FD  JSR $FD12
 06:9077:C9 40     CMP #$40
 06:9079:B0 C8     BCS $9043
 06:907B:FE 00 03  INC $0300,X ; Advance to next phase
 06:907E:20 4A FD  JSR $FD4A
 06:9081:A0 10     LDY #$10
 06:9083:20 E5 FD  JSR $FDE5
 06:9086:FE 00 03  INC $0300,X ; Advance to next phase
 06:9089:20 DF FC  JSR $FCDF
 06:908C:4C 00 FD  JMP $FD00
 
=====================================================
FUNCTION $908F
ACTION LOOP $15 (Eel crab) / $25 (Normal crab)

 06:908F:A0 00     LDY #$00
 06:9091:20 2F F8  JSR $F82F   ; Check if falling
 06:9094:B0 15     BCS $90AB   ; Jump ahead if not
 06:9096:BD C0 03  LDA $03C0,X
 06:9099:29 DF     AND #$DF
 06:909B:9D C0 03  STA $03C0,X ; Clear #$20 flag (can't be bubbled)
 06:909E:A9 00     LDA #$00    
 06:90A0:9D D0 03  STA $03D0,X ; Set to no movement
 06:90A3:BD 30 04  LDA $0430,X ; Animation loop
 06:90A6:09 01     ORA #$01    
 06:90A8:4C 45 FC  JMP $FC45   ; Switch to falling animation (26->27)
 
 06:90AB:BD 30 04  LDA $0430,X ; Animation loop 
 06:90AE:29 01     AND #$01    ; Check if still in falling animation
 06:90B0:D0 1E     BNE $90D0   ; Jump ahead if not 
 06:90B2:BD 10 03  LDA $0310,X ; Load action loop
 06:90B5:C9 15     CMP #$15    ; Check if #$15 (Eel boss crabs)
 06:90B7:D0 17     BNE $90D0   ; Jump ahead if not 
 06:90B9:A5 42     LDA $0042   
 06:90BB:C9 90     CMP #$90
 06:90BD:D0 11     BNE $90D0   ; Jump ahead if not equal
 06:90BF:A5 43     LDA $0043   
 06:90C1:C9 90     CMP #$90    
 06:90C3:D0 0B     BNE $90D0   ; Jump ahead if not equal
 06:90C5:A9 14     LDA #$14
 06:90C7:20 45 FC  JSR $FC45   ; Change animation to smoke
 
 06:90CA:A9 00     LDA #$00
 06:90CC:9D 10 03  STA $0310,X ; Set action loop to zero
 06:90CF:60        RTS -----------------------------------------
 06:90D0:BD D0 03  LDA $03D0,X ; Direction of movement
 06:90D3:29 03     AND #$03    ; Isolate left/right
 06:90D5:D0 03     BNE $90DA   ; Skip ahead if neither
 06:90D7:20 6F FC  JSR $FC6F   ; Turn towards Ariel
 06:90DA:BD 60 04  LDA $0460,X ; Load counter 1
 06:90DD:D0 17     BNE $90F6   ; Jump ahead if not zero
 06:90DF:A5 E4     LDA $00E4
 06:90E1:65 E5     ADC $00E5
 06:90E3:29 01     AND #$01
 06:90E5:85 00     STA $0000   ; RNG #$01-#$02
 06:90E7:BD 30 04  LDA $0430,X ; Animation loop
 06:90EA:29 01     AND #$01    ; Check if 26 (walking) or 27 (ducking)
 06:90EC:0A        ASL
 06:90ED:05 00     ORA $0000 = #$46
 06:90EF:A8        TAY
 06:90F0:B9 3B 91  LDA $913B,Y
 06:90F3:9D 60 04  STA $0460,X ; Set Bound 1 (60,80,40,80)
 
 06:90F6:BD 30 04  LDA $0430,X ; Animation Loop
 06:90F9:29 01     AND #$01
 06:90FB:D0 0F     BNE $910C
 06:90FD:A0 00     LDY #$00
 06:90FF:20 B9 FC  JSR $FCB9
 06:9102:90 08     BCC $910C
 06:9104:BD D0 03  LDA $03D0,X 
 06:9107:49 03     EOR #$03   
 06:9109:9D D0 03  STA $03D0,X ; Swap direction of movement
 06:910C:DE 60 04  DEC $0460,X ; Tick down Bound 1
 06:910F:D0 29     BNE $913A
 06:9111:BD 30 04  LDA $0430,X ; Animation loop
 06:9114:49 01     EOR #$01
 06:9116:20 45 FC  JSR $FC45
 06:9119:20 6F FC  JSR $FC6F
 06:911C:BD C0 03  LDA $03C0,X
 06:911F:29 DF     AND #$DF
 06:9121:9D C0 03  STA $03C0,X
 06:9124:BD 10 03  LDA $0310,X
 06:9127:C9 15     CMP #$15
 06:9129:D0 0F     BNE $913A
 06:912B:BD 30 04  LDA $0430,X
 06:912E:29 01     AND #$01
 06:9130:D0 08     BNE $913A
 06:9132:BD C0 03  LDA $03C0,X
 06:9135:09 20     ORA #$20
 06:9137:9D C0 03  STA $03C0,X
 06:913A:60        RTS -----------------------------------------
================================================================
DATA TABLE $913B
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9130                                  60 80 40 80
================================================================
FUNCTION $913F
ACTION LOOPS $17-$1B

 06:913F:BD 00 03  LDA $0300,X @ $030E = #$80
 06:9142:29 0F     AND #$0F
 06:9144:D0 2A     BNE $9170
 06:9146:FE 00 03  INC $0300,X @ $030E = #$80
 06:9149:BD 10 03  LDA $0310,X @ $031E = #$03
 06:914C:A8        TAY
 06:914D:B9 79 92  LDA $9279,Y @ $927C = #$B0
 06:9150:9D D0 03  STA $03D0,X @ $03DE = #$02
 06:9153:B9 7E 92  LDA $927E,Y @ $9281 = #$C9
 06:9156:9D 80 03  STA $0380,X @ $038E = #$80
 06:9159:B9 83 92  LDA $9283,Y @ $9286 = #$00
 06:915C:9D 90 03  STA $0390,X @ $039E = #$00
 06:915F:B9 88 92  LDA $9288,Y @ $928B = #$10
 06:9162:9D A0 03  STA $03A0,X @ $03AE = #$C0
 06:9165:B9 8D 92  LDA $928D,Y @ $9290 = #$0A
 06:9168:9D B0 03  STA $03B0,X @ $03BE = #$FF
 06:916B:A9 20     LDA #$20
 06:916D:9D 60 04  STA $0460,X @ $046E = #$00
 06:9170:BD 60 04  LDA $0460,X @ $046E = #$00
 06:9173:D0 44     BNE $91B9
 06:9175:20 33 FD  JSR $FD33
 06:9178:C9 20     CMP #$20
 06:917A:B0 0F     BCS $918B
 06:917C:20 12 FD  JSR $FD12
 06:917F:C9 20     CMP #$20
 06:9181:B0 08     BCS $918B
 06:9183:BD D0 03  LDA $03D0,X @ $03DE = #$02
 06:9186:29 04     AND #$04
 06:9188:D0 2A     BNE $91B4
 06:918A:60        RTS -----------------------------------------
 06:918B:BD D0 03  LDA $03D0,X @ $03DE = #$02
 06:918E:29 08     AND #$08
 06:9190:D0 22     BNE $91B4
 06:9192:BD 70 04  LDA $0470,X @ $047E = #$00
 06:9195:D0 17     BNE $91AE
 06:9197:BD 00 04  LDA $0400,X @ $040E = #$90
 06:919A:49 40     EOR #$40
 06:919C:9D 00 04  STA $0400,X @ $040E = #$90
 06:919F:A5 E4     LDA $00E4 = #$7B
 06:91A1:65 E6     ADC $00E6 = #$10
 06:91A3:85 E6     STA $00E6 = #$10
 06:91A5:29 01     AND #$01
 06:91A7:A8        TAY
 06:91A8:B9 8E 92  LDA $928E,Y @ $9291 = #$0A
 06:91AB:9D 70 04  STA $0470,X @ $047E = #$00
 06:91AE:DE 70 04  DEC $0470,X @ $047E = #$00
 06:91B1:4C D8 91  JMP $91D8
 06:91B4:A9 20     LDA #$20
 06:91B6:9D 60 04  STA $0460,X @ $046E = #$00
 06:91B9:20 DF FC  JSR $FCDF
 06:91BC:20 00 FD  JSR $FD00
 06:91BF:DE 60 04  DEC $0460,X @ $046E = #$00
 06:91C2:D0 14     BNE $91D8
 06:91C4:BD D0 03  LDA $03D0,X @ $03DE = #$02
 06:91C7:49 0C     EOR #$0C
 06:91C9:9D D0 03  STA $03D0,X @ $03DE = #$02
 06:91CC:29 03     AND #$03
 06:91CE:F0 08     BEQ $91D8
 06:91D0:BD D0 03  LDA $03D0,X @ $03DE = #$02
 06:91D3:49 03     EOR #$03
 06:91D5:9D D0 03  STA $03D0,X @ $03DE = #$02
 06:91D8:60        RTS -----------------------------------------
================================================================
FUNCTION $91D9
Action Loop #16

================================================================

FUNCTION $9274
ACTION LOOP $19
================================================================

TABLE $928E
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9280                                           41 82


================================================================
FUNCTION $940C
ACTION LOOP $20

 06:940C:A9 00     LDA #$00
 06:940E:9D 48 04  STA $0448,X ; 
 06:9411:BD 60 04  LDA $0460,X ; Check timer 2
 06:9414:D0 38     BNE $944E   
 06:9416:BD 18 04  LDA $0418,X ; Position in animation loop
 06:9419:F0 23     BEQ $943E
 06:941B:DE 18 04  DEC $0418,X ; Tick down
 06:941E:A5 E4     LDA $00E4   
 06:9420:65 E5     ADC $00E5
 06:9422:85 E5     STA $00E5
 06:9424:29 03     AND #$03    ; RNG #$00-#$03 (Modulo 4)
 06:9426:A8        TAY
 06:9427:B9 5C 94  LDA $945C,Y
 06:942A:9D 60 04  STA $0460,X ; Timer 2 = 00 (25%) 40 (50%) or 80 (25%)
 06:942D:A9 80     LDA #$80
 06:942F:9D A0 03  STA $03A0,X ; y-velocity
 06:9432:A9 00     LDA #$00
 06:9434:9D B0 03  STA $03B0,X ; y-velocity
 06:9437:A9 04     LDA #$04
 06:9439:9D D0 03  STA $03D0,X ; Turn right 
 06:943C:D0 10     BNE $944E
 06:943E:20 4A FD  JSR $FD4A
 06:9441:A0 00     LDY #$00
 06:9443:20 E5 FD  JSR $FDE5
 06:9446:A9 20     LDA #$20
 06:9448:9D 60 04  STA $0460,X ; Set timer 2 to 20
 06:944B:FE 18 04  INC $0418,X
 06:944E:BD 18 04  LDA $0418,X
 06:9451:F0 03     BEQ $9456
 06:9453:20 DF FC  JSR $FCDF   ; Move horizontally
 06:9456:DE 60 04  DEC $0460,X
 06:9459:4C 00 FD  JMP $FD00   ; Move vertically
 
DATA TABLE $945C
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9450                                     00 40 40 80
00 00
01 40
02 40
03 80
================================================================
FUNCTION $9460
ACTION LOOP 21
Poor Unfortunate Souls
================================================================
Function $9461 -> Action Loop 22 (Starfish Spawner)

 06:9461:BD 00 03  LDA $0300,X
 06:9464:29 0F     AND #$0F
 06:9466:F0 21     BEQ $9489 ; Jump ahead if phase zero
 06:9468:A9 00     LDA #$00
 06:946A:85 00     STA $0000
 06:946C:A0 0E     LDY #$0E
 06:946E:B9 01 03  LDA $0301,Y ; Check if exists
 06:9471:10 09     BPL $947C
 06:9473:B9 31 04  LDA $0431,Y 
 06:9476:C9 32     CMP #$32    ; Check if Starfish
 06:9478:D0 02     BNE $947C
 06:947A:E6 00     INC $0000   ; Tally number of starfish on screen
 06:947C:88        DEY
 06:947D:D0 EF     BNE $946E
 06:947F:A5 00     LDA $0000
 06:9481:D0 05     BNE $9488   ; End if any starfish are on screen
 06:9483:A9 80     LDA #$80
 06:9485:9D 00 03  STA $0300,X ; Set to phase zero
 06:9488:60        RTS -----------------------------------------
 06:9489:BD 60 04  LDA $0460,X ; Load timer
 06:948C:F0 04     BEQ $9492   ; Jump ahead if zero
 06:948E:DE 60 04  DEC $0460,X ; Else tick down timer
 06:9491:60        RTS -----------------------------------------
 06:9492:BD 60 04  LDA $0460,X ; Load timer
 06:9495:D0 22     BNE $94B9   ; Skip ahead if not zero
 06:9497:A5 E4     LDA $00E4
 06:9499:65 E6     ADC $00E6
 06:949B:85 E5     STA $00E5
 06:949D:29 07     AND #$07
 06:949F:85 00     STA $0000
 06:94A1:0A        ASL
 06:94A2:0A        ASL
 06:94A3:65 00     ADC $0000
 06:94A5:9D 80 04  STA $0480,X ; Bound 3 = 5n (n is 0-7)
 
 06:94A8:A5 E4     LDA $00E4
 06:94AA:65 E5     ADC $00E5
 06:94AC:85 E6     STA $00E6
 06:94AE:29 07     AND #$07
 06:94B0:85 00     STA $0000
 06:94B2:0A        ASL
 06:94B3:0A        ASL
 06:94B4:65 00     ADC $0000   
 06:94B6:9D 90 04  STA $0490,X ; Bound 4 = 5n (n is 0-7)
 
 06:94B9:20 54 FE  JSR $FE54   ; Store next empty spot to y
 06:94BC:B0 D3     BCS $9491   ; Exit if none
 06:94BE:A9 23     LDA #$23
 06:94C0:99 10 03  STA $0310,Y ; Set action to #$23
 06:94C3:A9 32     LDA #$32
 06:94C5:20 51 FC  JSR $FC51   ; Set animation to #$32
 06:94C8:A9 40     LDA #$40
 06:94CA:99 C0 03  STA $03C0,Y ; Activate hitbox
 06:94CD:A9 01     LDA #$01
 06:94CF:99 F0 03  STA $03F0,Y ; Set HP to 1
 06:94D2:A9 00     LDA #$00
 06:94D4:BD 30 03  LDA $0330,X ; Give starfish the same
 06:94D7:99 30 03  STA $0330,Y ;  starting position as
 06:94DA:BD 40 03  LDA $0340,X ;   the starfish spawner
 06:94DD:99 40 03  STA $0340,Y  
 06:94E0:BD 60 03  LDA $0360,X  
 06:94E3:99 60 03  STA $0360,Y  
 06:94E6:BD 70 03  LDA $0370,X  
 06:94E9:99 70 03  STA $0370,Y 
 06:94EC:A9 08     LDA #$08
 06:94EE:99 D0 03  STA $03D0,Y ; Set movement to up
 06:94F1:A9 02     LDA #$02
 06:94F3:99 B0 03  STA $03B0,Y ; Set y-speed to #$0200 (2 pxl/frame)
 06:94F6:A9 00     LDA #$00
 06:94F8:99 A0 03  STA $03A0,Y 
 06:94FB:99 60 04  STA $0460,Y ; Reset counter 1
 06:94FE:99 70 04  STA $0470,Y ; Reset counter 2
 06:9501:99 80 04  STA $0480,Y ; Reset counter 3
 06:9504:99 90 04  STA $0490,Y ; Reset counter 4
 
 06:9507:86 00     STX $0000   ; Store spawner address
 06:9509:BD 70 04  LDA $0470,X ; Load spawner Bound 2 (originally zero?)
 06:950C:18        CLC
 06:950D:7D 80 04  ADC $0480,X ; RNG 5n (n=0 to 7)
 06:9510:AA        TAX
 06:9511:BD 9C 95  LDA $959C,X @ $95AA = #$02
 06:9514:AA        TAX
 06:9515:BD EC 95  LDA $95EC,X @ $95FA = #$FF
 06:9518:99 60 04  STA $0460,Y @ $0482 = #$00
 06:951B:A6 00     LDX $0000 = #$61
 06:951D:BD 70 04  LDA $0470,X @ $047E = #$00
 06:9520:18        CLC
 06:9521:7D 90 04  ADC $0490,X @ $049E = #$00
 06:9524:AA        TAX
 06:9525:BD C4 95  LDA $95C4,X @ $95D2 = #$01
 06:9528:AA        TAX
 06:9529:BD F1 95  LDA $95F1,X @ $95FF = #$48
 06:952C:99 70 04  STA $0470,Y @ $0492 = #$00
 06:952F:BD F8 95  LDA $95F8,X @ $9606 = #$03
 06:9532:99 80 04  STA $0480,Y @ $04A2 = #$00
 06:9535:A6 00     LDX $0000 = #$61
 06:9537:A9 0C     LDA #$0C
 06:9539:9D 60 04  STA $0460,X @ $046E = #$00
 06:953C:FE 70 04  INC $0470,X @ $047E = #$00
 06:953F:BD 70 04  LDA $0470,X @ $047E = #$00
 06:9542:C9 05     CMP #$05
 06:9544:D0 08     BNE $954E
 06:9546:A9 00     LDA #$00
 06:9548:9D 70 04  STA $0470,X @ $047E = #$00
 06:954B:FE 00 03  INC $0300,X @ $030E = #$80
 06:954E:60        RTS -----------------------------------------
================================================================
FUNCTION $954F
ACTION LOOP 23
Starfish (shooting upward)

 06:954F:BD D0 03  LDA $03D0,X
 06:9552:29 08     AND #$08
 06:9554:F0 43     BEQ $9599
 06:9556:A9 00     LDA #$00
 06:9558:9D 48 04  STA $0448,X @ $0456 = #$00
 06:955B:BD 60 03  LDA $0360,X @ $036E = #$E8
 06:955E:C9 08     CMP #$08
 06:9560:D0 37     BNE $9599
 06:9562:BD 00 04  LDA $0400,X @ $040E = #$94
 06:9565:09 04     ORA #$04
 06:9567:9D 00 04  STA $0400,X @ $040E = #$94
 06:956A:DE 60 04  DEC $0460,X @ $046E = #$00
 06:956D:D0 DF     BNE $954E
 06:956F:BD 00 04  LDA $0400,X @ $040E = #$94
 06:9572:29 FB     AND #$FB
 06:9574:9D 00 04  STA $0400,X @ $040E = #$94
 06:9577:BD 30 03  LDA $0330,X @ $033E = #$E8
 06:957A:18        CLC
 06:957B:7D 70 04  ADC $0470,X @ $047E = #$00
 06:957E:9D 30 03  STA $0330,X @ $033E = #$E8
 06:9581:BD 40 03  LDA $0340,X @ $034E = #$09
 06:9584:7D 80 04  ADC $0480,X @ $048E = #$00
 06:9587:9D 40 03  STA $0340,X @ $034E = #$09
 06:958A:A9 04     LDA #$04
 06:958C:9D D0 03  STA $03D0,X @ $03DE = #$02
 06:958F:A9 C0     LDA #$C0
 06:9591:9D A0 03  STA $03A0,X @ $03AE = #$C0
 06:9594:A9 00     LDA #$00
 06:9596:9D B0 03  STA $03B0,X @ $03BE = #$FF
 06:9599:4C 00 FD  JMP $FD00
================================================================
FUNCTION $9604
ACTION LOOP #$24
 06:9604:BD 00 03  LDA $0300,X
 06:9607:29 0F     AND #$0F    ; Check phase
 06:9609:D0 21     BNE $962C   ; Jump ahead if zero
 06:960B:20 33 FD  JSR $FD33   ; Calculate x-distance to Ariel
 06:960E:C9 60     CMP #$60    ; Compare against #$60 (96 pixels)
 06:9610:B0 3D     BCS $964F   ; Exit
 06:9612:BD 00 04  LDA $0400,X
 06:9615:29 FB     AND #$FB    ; Wipe #$04 flag
 06:9617:9D 00 04  STA $0400,X
 06:961A:FE 00 03  INC $0300,X ; Tick up to phase 2
 06:961D:A5 E4     LDA $00E4  
 06:961F:65 E7     ADC $00E7
 06:9621:85 E7     STA $00E7
 06:9623:29 03     AND #$03
 06:9625:A8        TAY
 06:9626:B9 50 96  LDA $9650,Y @ $9672 = #$CD
 06:9629:9D 60 04  STA $0460,X @ $046E = #$00
 
 06:962C:A0 00     LDY #$00
 06:962E:20 2F F8  JSR $F82F
 06:9631:90 1C     BCC $964F
 06:9633:DE 60 04  DEC $0460,X @ $046E = #$00
 06:9636:D0 17     BNE $964F
 06:9638:A9 80     LDA #$80
 06:963A:9D 00 03  STA $0300,X @ $030E = #$80
 06:963D:A9 03     LDA #$03
 06:963F:9D 10 03  STA $0310,X @ $031E = #$22
 06:9642:A9 60     LDA #$60
 06:9644:9D C0 03  STA $03C0,X @ $03CE = #$40
 06:9647:A9 20     LDA #$20
 06:9649:20 45 FC  JSR $FC45
 06:964C:20 6F FC  JSR $FC6F
 06:964F:60        RTS -----------------------------------------
================================================================
DATA TABLE $9650
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9650 20 40 80 20

FUNCTION $986D
ACTION LOOP $30
Falling shell

 06:986D:A0 05     LDY #$05
 06:986F:20 7F E2  JSR $E27F
 06:9872:A5 10     LDA $0010 = #$FF
 06:9874:D0 04     BNE $987A
 06:9876:A9 40     LDA #$40
 06:9878:85 99     STA $0099 = #$06
 06:987A:E4 3A     CPX $003A = #$00
 06:987C:D0 0B     BNE $9889
 06:987E:BD 00 03  LDA $0300,X @ $030F = #$83
 06:9881:09 01     ORA #$01
 06:9883:9D 00 03  STA $0300,X @ $030F = #$83
 06:9886:4C 53 89  JMP $8953
 06:9889:A5 99     LDA $0099 = #$06
 06:988B:C9 40     CMP #$40
 06:988D:F0 18     BEQ $98A7
 06:988F:BD 60 04  LDA $0460,X @ $046F = #$4D
 06:9892:F0 13     BEQ $98A7
 06:9894:BD B0 03  LDA $03B0,X @ $03BF = #$FF
 06:9897:10 0E     BPL $98A7
 06:9899:A9 00     LDA #$00
 06:989B:9D A0 03  STA $03A0,X @ $03AF = #$C0
 06:989E:9D B0 03  STA $03B0,X @ $03BF = #$FF
 06:98A1:9D 60 04  STA $0460,X @ $046F = #$4D
 06:98A4:9D D0 03  STA $03D0,X @ $03DF = #$02
 06:98A7:A0 06     LDY #$06
 06:98A9:20 2F F8  JSR $F82F
 06:98AC:08        PHP
 06:98AD:BD 00 03  LDA $0300,X @ $030F = #$83
 06:98B0:29 F0     AND #$F0
 06:98B2:9D 00 03  STA $0300,X @ $030F = #$83
 06:98B5:B0 08     BCS $98BF
 06:98B7:BD 00 03  LDA $0300,X @ $030F = #$83
 06:98BA:09 01     ORA #$01
 06:98BC:9D 00 03  STA $0300,X @ $030F = #$83
 06:98BF:A5 BE     LDA $00BE = #$00
 06:98C1:C9 30     CMP #$30
 06:98C3:D0 07     BNE $98CC
 06:98C5:A5 1A     LDA $001A = #$00
 06:98C7:D0 03     BNE $98CC
 06:98C9:20 BA E7  JSR $E7BA
 06:98CC:A0 08     LDY #$08
 06:98CE:20 B9 FC  JSR $FCB9
 06:98D1:20 4E 98  JSR $984E
 06:98D4:90 0D     BCC $98E3
 06:98D6:A5 BE     LDA $00BE = #$00
 06:98D8:C9 30     CMP #$30
 06:98DA:D0 07     BNE $98E3
 06:98DC:A5 1A     LDA $001A = #$00
 06:98DE:D0 03     BNE $98E3
 06:98E0:20 BA E7  JSR $E7BA
 06:98E3:28        PLP
 06:98E4:90 05     BCC $98EB
 06:98E6:A9 00     LDA #$00
 06:98E8:9D D0 03  STA $03D0,X @ $03DF = #$02
 06:98EB:A5 30     LDA $0030 = #$00
 06:98ED:C9 04     CMP #$04
 06:98EF:F0 17     BEQ $9908
 06:98F1:C9 05     CMP #$05
 06:98F3:F0 13     BEQ $9908
 06:98F5:20 A0 FB  JSR $FBA0
 06:98F8:B0 63     BCS $995D
 06:98FA:A9 00     LDA #$00
 06:98FC:99 00 03  STA $0300,Y @ $030D = #$00
 06:98FF:B9 D0 03  LDA $03D0,Y @ $03DD = #$02
 06:9902:9D D0 03  STA $03D0,X @ $03DF = #$02
 06:9905:4C 23 99  JMP $9923
 06:9908:BD D0 03  LDA $03D0,X @ $03DF = #$02
 06:990B:D0 50     BNE $995D
 06:990D:20 F2 FA  JSR $FAF2
 06:9910:B0 4B     BCS $995D
 06:9912:A9 01     LDA #$01
 06:9914:9D D0 03  STA $03D0,X @ $03DF = #$02
 06:9917:AD 00 04  LDA $0400 = #$D0
 06:991A:29 40     AND #$40
 06:991C:D0 05     BNE $9923
 06:991E:A9 02     LDA #$02
 06:9920:9D D0 03  STA $03D0,X @ $03DF = #$02
 06:9923:A9 00     LDA #$00
 06:9925:9D 60 04  STA $0460,X @ $046F = #$4D
 06:9928:A5 99     LDA $0099 = #$06
 06:992A:C9 40     CMP #$40
 06:992C:F0 16     BEQ $9944
 06:992E:A9 3C     LDA #$3C
 06:9930:9D A0 03  STA $03A0,X @ $03AF = #$C0
 06:9933:A9 01     LDA #$01
 06:9935:9D B0 03  STA $03B0,X @ $03BF = #$FF
 06:9938:A9 60     LDA #$60
 06:993A:9D 80 03  STA $0380,X @ $038F = #$00
 06:993D:A9 00     LDA #$00
 06:993F:9D 90 03  STA $0390,X @ $039F = #$02
 06:9942:F0 19     BEQ $995D
 06:9944:A9 FF     LDA #$FF
 06:9946:9D 60 04  STA $0460,X @ $046F = #$4D
 06:9949:A9 00     LDA #$00
 06:994B:9D A0 03  STA $03A0,X @ $03AF = #$C0
 06:994E:A9 04     LDA #$04
 06:9950:9D B0 03  STA $03B0,X @ $03BF = #$FF
 06:9953:A9 00     LDA #$00
 06:9955:9D 80 03  STA $0380,X @ $038F = #$00
 06:9958:A9 01     LDA #$01
 06:995A:9D 90 03  STA $0390,X @ $039F = #$02
 06:995D:BD 00 03  LDA $0300,X @ $030F = #$83
 06:9960:29 0F     AND #$0F
 06:9962:F0 26     BEQ $998A
 06:9964:20 C4 81  JSR $81C4
 06:9967:B0 14     BCS $997D
 06:9969:B9 10 03  LDA $0310,Y @ $031D = #$42
 06:996C:C9 2A     CMP #$2A
 06:996E:D0 1A     BNE $998A
 06:9970:A9 00     LDA #$00
 06:9972:9D 10 03  STA $0310,X @ $031F = #$0D
 06:9975:A9 10     LDA #$10
 06:9977:20 45 FC  JSR $FC45
 06:997A:4C 64 FE  JMP $FE64
 
 06:997D:20 35 D5  JSR $D535
 06:9980:B0 08     BCS $998A   ; Exit
 06:9982:A9 00     LDA #$00
 06:9984:9D 00 03  STA $0300,X ; Set action timer to zero
 06:9987:20 64 FE  JSR $FE64
 06:998A:60        RTS -----------------------------------------
================================================================
FUNCTION $9AA1
Hidden item
 06:9AA1:BD 00 04  LDA $0400,X 
 06:9AA4:29 04     AND #$04    ; Check if invisible flag is set
 06:9AA6:D0 61     BNE $9B09   ; Exit if not
 
 06:9AA8:BD 70 04  LDA $0470,X ; Load counter 2
 06:9AAB:D0 46     BNE $9AF3   ; Jump ahead if not zero
 
 06:9AAD:A9 10     LDA #$10
 06:9AAF:DD 30 04  CMP $0430,X ; Check animation loop
 06:9AB2:F0 03     BEQ $9AB7   ; Skip if 10
 06:9AB4:20 45 FC  JSR $FC45   ; Set to 10
 
 06:9AB7:BD 18 04  LDA $0418,X ; Check position in animation loop
 06:9ABA:C9 05     CMP #$05
 06:9ABC:D0 4B     BNE $9B09   ; Exit if not 05
 
 06:9ABE:A5 E4     LDA $00E4
 06:9AC0:65 E5     ADC $00E5 
 06:9AC2:85 E6     STA $00E6
 06:9AC4:29 01     AND #$01
 06:9AC6:48        PHA
 06:9AC7:18        CLC
 06:9AC8:69 46     ADC #$46
 06:9ACA:20 45 FC  JSR $FC45  ; Set animation to Heart or Tiny Heart
 06:9ACD:68        PLA
 06:9ACE:18        CLC
 06:9ACF:69 34     ADC #$34
 06:9AD1:9D 60 04  STA $0460,X ; Set counter 1 to #$34 or #$35
 
 06:9AD4:A9 10     LDA #$10
 06:9AD6:9D 70 04  STA $0470,X ; Set counter 2 to #$10
 06:9AD9:BD 10 03  LDA $0310,X ; Load 
 06:9ADC:A8        TAY
 06:9ADD:B9 26 9B  LDA $9B26,Y @ $9B74 = #$01
 06:9AE0:9D D0 03  STA $03D0,X @ $03DE = #$01
 06:9AE3:A9 00     LDA #$00
 06:9AE5:9D 80 03  STA $0380,X @ $038E = #$00
 06:9AE8:9D A0 03  STA $03A0,X @ $03AE = #$C0
 06:9AEB:A9 01     LDA #$01
 06:9AED:9D 90 03  STA $0390,X @ $039E = #$00
 06:9AF0:9D B0 03  STA $03B0,X @ $03BE = #$FF
 06:9AF3:20 DF FC  JSR $FCDF
 06:9AF6:20 00 FD  JSR $FD00
 06:9AF9:DE 70 04  DEC $0470,X @ $047E = #$00
 06:9AFC:D0 0B     BNE $9B09
 06:9AFE:BD 60 04  LDA $0460,X @ $046E = #$00
 06:9B01:9D 10 03  STA $0310,X @ $031E = #$4E
 06:9B04:A9 0F     LDA #$0F
 06:9B06:9D 60 04  STA $0460,X @ $046E = #$00
 06:9B09:60        RTS -----------------------------------------
================================================================
FUNCTION $9B0A
Spawn Fork/Pipe
 06:9B0A:BD 00 04  LDA $0400,X @ $040E = #$94
 06:9B0D:29 04     AND #$04
 06:9B0F:D0 61     BNE $9B72
 06:9B11:BD 70 04  LDA $0470,X @ $047E = #$00
 06:9B14:D0 46     BNE $9B5C
 06:9B16:A9 10     LDA #$10
 06:9B18:DD 30 04  CMP $0430,X @ $043E = #$46
 06:9B1B:F0 03     BEQ $9B20
 06:9B1D:20 45 FC  JSR $FC45
 06:9B20:BD 18 04  LDA $0418,X @ $0426 = #$00
 06:9B23:C9 05     CMP #$05
 06:9B25:D0 4B     BNE $9B72
 06:9B27:A5 E4     LDA $00E4 = #$9A
 06:9B29:65 E6     ADC $00E6 = #$2B
 06:9B2B:85 E5     STA $00E5 = #$1F
 06:9B2D:29 01     AND #$01
 06:9B2F:48        PHA
 06:9B30:18        CLC
 06:9B31:69 4C     ADC #$4C
 06:9B33:20 45 FC  JSR $FC45
 06:9B36:68        PLA
 06:9B37:18        CLC
 06:9B38:69 3A     ADC #$3A
 06:9B3A:9D 60 04  STA $0460,X @ $046E = #$00
 06:9B3D:A9 10     LDA #$10
 06:9B3F:9D 70 04  STA $0470,X @ $047E = #$00
 06:9B42:BD 10 03  LDA $0310,X @ $031E = #$4E
 06:9B45:A8        TAY
 06:9B46:B9 21 9B  LDA $9B21,Y @ $9B6F = #$9D
 06:9B49:9D D0 03  STA $03D0,X @ $03DE = #$01
 06:9B4C:A9 00     LDA #$00
 06:9B4E:9D 80 03  STA $0380,X @ $038E = #$00
 06:9B51:9D A0 03  STA $03A0,X @ $03AE = #$C0
 06:9B54:A9 01     LDA #$01
 06:9B56:9D 90 03  STA $0390,X @ $039E = #$00
 06:9B59:9D B0 03  STA $03B0,X @ $03BE = #$FF
 06:9B5C:20 DF FC  JSR $FCDF
 06:9B5F:20 00 FD  JSR $FD00
 06:9B62:DE 70 04  DEC $0470,X @ $047E = #$00
 06:9B65:D0 0B     BNE $9B72
 06:9B67:BD 60 04  LDA $0460,X @ $046E = #$00
 06:9B6A:9D 10 03  STA $0310,X @ $031E = #$4E
 06:9B6D:A9 0F     LDA #$0F
 06:9B6F:9D 60 04  STA $0460,X @ $046E = #$00
 06:9B72:60        RTS -----------------------------------------
================================================================
FUNCTION $9BA7
ACTION LOOP $0C
Stage 1 Boss (Shark) : Phase 1 - Sending Fish

 06:9BA7:BD 00 03  LDA $0300,X ; 
 06:9BAA:29 0F     AND #$0F    ; Identify phase # of boss fight
 06:9BAC:D0 1D     BNE $9BCB   ;
 
 PHASE 0 - Intro
 06:9BAE:20 09 A6  JSR $A609   ; Freeze Ariel for boss intro
 06:9BB1:90 3C     BCC $9BEF   ; End
 06:9BB3:20 DF FC  JSR $FCDF   ; Move horizontally
 06:9BB6:FE 70 04  INC $0470,X ; 
 06:9BB9:BD 70 04  LDA $0470,X ; 
 06:9BBC:C9 40     CMP #$40    ; Move for 
 06:9BBE:D0 2F     BNE $9BEF   ; 
 06:9BC0:FE 00 03  INC $0300,X ; Tick up to phase 1
 06:9BC3:A9 00     LDA #$00    ; 
 06:9BC5:9D 60 04  STA $0460,X ; 
 06:9BC8:9D 70 04  STA $0470,X ; 
 
 PHASE 1 - 
 06:9BCB:BD 70 04  LDA $0470,X ; If timer 2 is zero, jump ahead
 06:9BCE:F0 20     BEQ $9BF0   ; Else tick down
 06:9BD0:DE 70 04  DEC $0470,X ; 
 06:9BD3:D0 1A     BNE $9BEF   ; Exit
 
 Once timer ticks down
 06:9BD5:A9 02     LDA #$02    ; 
 06:9BD7:9D 90 03  STA $0390,X ; 
 06:9BDA:A9 00     LDA #$00    ; 
 06:9BDC:9D 80 03  STA $0380,X ; 
 06:9BDF:9D 60 04  STA $0460,X ; 
 06:9BE2:9D 90 04  STA $0490,X ; 
 06:9BE5:A9 0D     LDA #$0D    ; 
 06:9BE7:9D 10 03  STA $0310,X ; 
 06:9BEA:A9 5D     LDA #$5D    ; 
 06:9BEC:20 45 FC  JSR $FC45   ; Switch to Phase 2
 06:9BEF:60        RTS -----------------------------------------
 06:9BF0:BD 00 03  LDA $0300,X 
 06:9BF3:29 0F     AND #$0F
 06:9BF5:C9 03     CMP #$03
 06:9BF7:F0 48     BEQ $9C41
 06:9BF9:20 12 FD  JSR $FD12   ; Check distance on y-axis between Ariel and Shark
 06:9BFC:C9 20     CMP #$20
 06:9BFE:B0 1C     BCS $9C1C   ; Jump ahead if 20 or more 
 06:9C00:BD 90 04  LDA $0490,X
 06:9C03:D0 0A     BNE $9C0F
 06:9C05:A5 E4     LDA $00E4
 06:9C07:65 E5     ADC $00E5
 06:9C09:85 E5     STA $00E5
 06:9C0B:29 01     AND #$01    ; RNG #$00-#$01
 06:9C0D:D0 06     BNE $9C15   ; Spawn fish (50/50 chance)
 06:9C0F:A9 A0     LDA #$A0
 06:9C11:9D 70 04  STA $0470,X ; Set timer between spawning fish and advancing to Phase 2
 06:9C14:60        RTS -----------------------------------------
 06:9C15:A9 83     LDA #$83
 06:9C17:9D 00 03  STA $0300,X ; (???)
 06:9C1A:D0 0C     BNE $9C28   
 06:9C1C:BD 00 03  LDA $0300,X 
 06:9C1F:29 0F     AND #$0F
 06:9C21:C9 01     CMP #$01    ; Check if smallest bit is flagged
 06:9C23:D0 1C     BNE $9C41   
 06:9C25:FE 00 03  INC $0300,X 
 06:9C28:A9 20     LDA #$20
 06:9C2A:9D 60 04  STA $0460,X ; Set to Action Loop 20?
 06:9C2D:A9 00     LDA #$00
 06:9C2F:9D 90 04  STA $0490,X ; (???)
 06:9C32:A8        TAY
 06:9C33:AD 60 03  LDA $0360 = #$78
 06:9C36:DD 60 03  CMP $0360,X @ $036F = #$30
 06:9C39:90 02     BCC $9C3D
 06:9C3B:A0 03     LDY #$03
 06:9C3D:98        TYA
 06:9C3E:9D 80 04  STA $0480,X @ $048F = #$06
 06:9C41:DE 60 04  DEC $0460,X @ $046F = #$00
 06:9C44:D0 75     BNE $9CBB
 06:9C46:20 54 FE  JSR $FE54
 06:9C49:B0 70     BCS $9CBB
 
 06:9C4B:86 0F     STX $000F   ; Entity # of shark
 06:9C4D:A9 20     LDA #$20
 06:9C4F:20 51 FC  JSR $FC51   ; Spawn fish (relative to shark)
 06:9C52:BD 60 03  LDA $0360,X 
 06:9C55:99 60 03  STA $0360,Y ; Set (???) to same as shark
 06:9C58:BD 70 03  LDA $0370,X
 06:9C5B:99 70 03  STA $0370,Y ; Set (???) to same as shark
 06:9C5E:BD 40 03  LDA $0340,X
 06:9C61:99 40 03  STA $0340,Y ; Set initial y-position to same as shark
 06:9C64:BD D0 03  LDA $03D0,X ;
 06:9C67:99 D0 03  STA $03D0,Y ; Set orientation of fish to same as shark
 06:9C6A:29 01     AND #$01    ; Check if facing left or right
 06:9C6C:AA        TAX
 06:9C6D:BD BC 9C  LDA $9CBC,X =    
 06:9C70:99 30 03  STA $0330,Y ; Set velocity to 4 (in correct direction)

 06:9C73:A6 0F     LDX $000F
 06:9C75:BD 80 04  LDA $0480,X
 06:9C78:AA        TAX
 06:9C79:B9 60 03  LDA $0360,Y
 06:9C7C:18        CLC
 06:9C7D:7D BE 9C  ADC $9CBE,X @ $9CCD = #$ED
 06:9C80:99 60 03  STA $0360,Y @ $036D = #$70
 06:9C83:A6 0F     LDX $000F = #$0F
 06:9C85:C9 08     CMP #$08
 06:9C87:90 86     BCC $9C0F
 06:9C89:C9 E8     CMP #$E8
 06:9C8B:B0 82     BCS $9C0F
 06:9C8D:A9 00     LDA #$00
 06:9C8F:99 80 03  STA $0380,Y @ $038D = #$00
 06:9C92:A9 01     LDA #$01
 06:9C94:99 90 03  STA $0390,Y @ $039D = #$01
 06:9C97:A9 60     LDA #$60
 06:9C99:99 C0 03  STA $03C0,Y @ $03CD = #$60
 06:9C9C:A9 01     LDA #$01
 06:9C9E:99 F0 03  STA $03F0,Y @ $03FD = #$01
 06:9CA1:A9 0E     LDA #$0E
 06:9CA3:99 10 03  STA $0310,Y @ $031D = #$0E
 06:9CA6:A9 40     LDA #$40
 06:9CA8:9D 60 04  STA $0460,X @ $046F = #$00
 06:9CAB:FE 80 04  INC $0480,X @ $048F = #$06
 06:9CAE:FE 90 04  INC $0490,X @ $049F = #$00
 06:9CB1:BD 90 04  LDA $0490,X @ $049F = #$00
 06:9CB4:C9 03     CMP #$03
 06:9CB6:90 03     BCC $9CBB
 06:9CB8:4C 0F 9C  JMP $9C0F
 06:9CBB:60        RTS -----------------------------------------
================================================================
DATA TABLE $9CBC + $9CBE
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 
9CB0                                     FC 04

Direction of spawned fish

00 = -4 (clear #$04 flag)
01 = +4 (  set #$04 flag)

DATA TABLE $9CBE
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 
9CB0                                           E0 C0
9CC0 A0 20 40 60

Starting X-position of spawned fish 

00 = -32 (32 left)
01 = -64 (64 left)
02 = -96 (96 left)
03 = +32 (32 right)
04 = +64 (64 right)
05 = +96 (96 right)

================================================================
FUNCTION $9CC4
ACTION LOOP $0D
Stage 2 Boss (Shark) : Phase 2 - Dashing
 06:9CC4:BD 60 04  LDA $0460,X
 06:9CC7:F0 41     BEQ $9D0A
 06:9CC9:DE 60 04  DEC $0460,X
 06:9CCC:D0 ED     BNE $9CBB
 06:9CCE:A9 5C     LDA #$5C
 06:9CD0:20 45 FC  JSR $FC45
 06:9CD3:BD 00 04  LDA $0400,X
 06:9CD6:29 FB     AND #$FB
 06:9CD8:9D 00 04  STA $0400,X
 06:9CDB:A9 80     LDA #$80
 06:9CDD:9D 80 03  STA $0380,X
 06:9CE0:A9 00     LDA #$00
 06:9CE2:9D 90 03  STA $0390,X
 06:9CE5:A9 80     LDA #$80
 06:9CE7:9D 00 03  STA $0300,X
 06:9CEA:A9 0C     LDA #$0C
 06:9CEC:9D 10 03  STA $0310,X
 06:9CEF:AD 60 03  LDA $0360   ; Check Ariel's y-position
 06:9CF2:C9 70     CMP #$70    ; Check if #$70 (112) or higher
 06:9CF4:B0 0A     BCS $9D00
 06:9CF6:AD 60 03  LDA $0360   ; Ariel's y-position
 06:9CF9:18        CLC
 06:9CFA:69 48     ADC #$48
 06:9CFC:9D 60 03  STA $0360,X ; Respawn #$48 (72) pixels higher
 06:9CFF:60        RTS -----------------------------------------
 06:9D00:AD 60 03  LDA $0360   ; Ariel's y-position 
 06:9D03:38        SEC
 06:9D04:E9 48     SBC #$48
 06:9D06:9D 60 03  STA $0360,X ; Respawn #$48 (72) pixels lower
 06:9D09:60        RTS -----------------------------------------
 06:9D0A:20 DF FC  JSR $FCDF
 06:9D0D:BD D0 03  LDA $03D0,X
 06:9D10:29 01     AND #$01    ; Check if facing left or right
 06:9D12:F0 08     BEQ $9D1C   ; Do appropriate location check
 06:9D14:A9 FC     LDA #$FC
 06:9D16:DD 30 03  CMP $0330,X ; Check if exited right of screen
 06:9D19:90 09     BCC $9D24
 06:9D1B:60        RTS -----------------------------------------
 06:9D1C:A9 04     LDA #$04
 06:9D1E:DD 30 03  CMP $0330,X ; Check if exited left of screen 
 06:9D21:B0 01     BCS $9D24
 06:9D23:60        RTS -----------------------------------------
 06:9D24:9D 30 03  STA $0330,X ; Set x-position
 06:9D27:BD 00 04  LDA $0400,X ; Orientation
 06:9D2A:09 04     ORA #$04    ; Set #$04 flag
 06:9D2C:9D 00 04  STA $0400,X ; 
 06:9D2F:A9 60     LDA #$60
 06:9D31:9D 60 04  STA $0460,X ; Set Bound 1 to #$60 (96 frames?)
 06:9D34:4C 5A 9E  JMP $9E5A   ; Reverse direction
================================================================
FUNCTION $9D37
ACTION LOOP $0E 
 06:9D37:4C DF FC  JMP $FCDF
================================================================
FUNCTION $9D3A
Walrus
 06:9D3A:BD 00 03  LDA $0300,X
 06:9D3D:29 0F     AND #$0F
 06:9D3F:D0 48     BNE $9D89
 06:9D41:85 BC     STA $00BC
 06:9D43:20 09 A6  JSR $A609   ; Freeze Ariel for boss intro
 06:9D46:90 40     BCC $9D88
 06:9D48:20 DF FC  JSR $FCDF
 06:9D4B:FE 70 04  INC $0470,X @ $047E = #$0C
 06:9D4E:BD 70 04  LDA $0470,X @ $047E = #$0C
 06:9D51:C9 60     CMP #$60
 06:9D53:90 33     BCC $9D88
 06:9D55:FE 00 03  INC $0300,X @ $030E = #$81
 06:9D58:A5 E4     LDA $00E4 = #$AD
 06:9D5A:29 01     AND #$01
 06:9D5C:A8        TAY
 06:9D5D:B9 B1 9E  LDA $9EB1,Y ; # of items in cycle
 06:9D60:9D 70 04  STA $0470,X @ $047E = #$0C
 06:9D63:85 00     STA $0000 = #$60
 06:9D65:A5 E5     LDA $00E5 = #$44
 06:9D67:65 E7     ADC $00E7 = #$96
 06:9D69:85 E7     STA $00E7 = #$96
 06:9D6B:29 07     AND #$07
 06:9D6D:A4 00     LDY $0000 = #$60
 06:9D6F:C0 06     CPY #$06
 06:9D71:F0 02     BEQ $9D75
 06:9D73:29 03     AND #$03
 06:9D75:0A        ASL
 06:9D76:A8        TAY
 06:9D77:B9 B3 9E  LDA $9EB3,Y @ $9EE0 = #$03
 06:9D7A:9D 80 04  STA $0480,X @ $048E = #$00
 06:9D7D:B9 B4 9E  LDA $9EB4,Y @ $9EE1 = #$A9
 06:9D80:9D 90 04  STA $0490,X @ $049E = #$00
 06:9D83:A9 70     LDA #$70
 06:9D85:9D 60 04  STA $0460,X @ $046E = #$00
 06:9D88:60        RTS -----------------------------------------
 06:9D89:C9 01     CMP #$01
 06:9D8B:F0 03     BEQ $9D90
 06:9D8D:4C 6B 9E  JMP $9E6B   
 06:9D90:BD 30 04  LDA $0430,X ; Load animation loop
 06:9D93:C9 58     CMP #$58    ; Check if kicking item
 06:9D95:D0 08     BNE $9D9F
 
 06:9D97:BD 18 04  LDA $0418,X 
 06:9D9A:F0 03     BEQ $9D9F   ; Skip if still performing animation
 06:9D9C:DE 30 04  DEC $0430,X ; Go back to regular animation loop
 
 06:9D9F:DE 60 04  DEC $0460,X ; Tick down Timer 1
 06:9DA2:F0 14     BEQ $9DB8
 06:9DA4:A4 BC     LDY $00BC 
 06:9DA6:F0 E0     BEQ $9D88
 06:9DA8:B9 00 03  LDA $0300,Y 
 06:9DAB:29 0F     AND #$0F
 06:9DAD:F0 D9     BEQ $9D88   ; End
 06:9DAF:A9 00     LDA #$00
 06:9DB1:85 BC     STA $00BC
 06:9DB3:A9 58     LDA #$58
 06:9DB5:4C 45 FC  JMP $FC45   ; Set to kicking animation
 
 06:9DB8:DE 70 04  DEC $0470,X ; Tick down Timer 2
 06:9DBB:D0 08     BNE $9DC5
 06:9DBD:A9 57     LDA #$57
 06:9DBF:20 45 FC  JSR $FC45   ; Set to regular animation
 06:9DC2:4C 52 9E  JMP $9E52   ; Set timer 1 and reverse direction
 
 06:9DC5:A9 C0     LDA #$C0
 06:9DC7:9D 60 04  STA $0460,X ; Set action timer 1
 06:9DCA:A9 00     LDA #$00
 06:9DCC:85 00     STA $0000   ; Shell counter 
 06:9DCE:A0 0F     LDY #$0F
 
 06:9DD0:B9 00 03  LDA $0300,Y @ $032A = #$92
 06:9DD3:10 09     BPL $9DDE
 06:9DD5:B9 30 04  LDA $0430,Y ; Animation loop
 06:9DD8:C9 40     CMP #$40    ; Check if shell
 06:9DDA:D0 02     BNE $9DDE
 06:9DDC:E6 00     INC $0000   ; Tick up number of shells spawned
 06:9DDE:88        DEY
 06:9DDF:C0 02     CPY #$02
 06:9DE1:D0 ED     BNE $9DD0   ; Tally number of shells already on screen
 06:9DE3:A0 00     LDY #$00
 06:9DE5:A5 00     LDA $0000
 06:9DE7:C9 02     CMP #$02    ; Check if there are already 2 shells on screen
 06:9DE9:B0 0F     BCS $9DFA
 
 06:9DEB:BD 70 04  LDA $0470,X 
 06:9DEE:DD 80 04  CMP $0480,X 
 06:9DF1:F0 05     BEQ $9DF8
 06:9DF3:DD 90 04  CMP $0490,X
 06:9DF6:D0 02     BNE $9DFA
 06:9DF8:A0 01     LDY #$01
 06:9DFA:84 0E     STY $000E   ; 0 if 2 shells, 1 if not 2 shells
 06:9DFC:86 0F     STX $000F   ; Walrus slot address
 
 06:9DFE:20 54 FE  JSR $FE54   ; Find next empty slot 
 06:9E01:B0 85     BCS $9D88   ; Exit if none
 06:9E03:84 BC     STY $00BC   ; Store Entity address to $BC
 
 06:9E05:A6 0E     LDX $000E
 06:9E07:BD C5 9E  LDA $9EC5,X
 06:9E0A:99 C0 03  STA $03C0,Y
 06:9E0D:BD C3 9E  LDA $9EC3,X ; Frozen fish or shell 
 06:9E10:A6 0F     LDX $000F = #$0F
 06:9E12:20 51 FC  JSR $FC51
 06:9E15:A9 08     LDA #$08
 06:9E17:99 60 03  STA $0360,Y @ $038A = #$80
 06:9E1A:BD 70 03  LDA $0370,X @ $037F = #$02
 06:9E1D:99 70 03  STA $0370,Y @ $039A = #$00
 06:9E20:BD 40 03  LDA $0340,X @ $034F = #$0F
 06:9E23:99 40 03  STA $0340,Y @ $036A = #$AC
 06:9E26:BD D0 03  LDA $03D0,X @ $03DF = #$02
 06:9E29:99 D0 03  STA $03D0,Y @ $03FA = #$01
 06:9E2C:29 01     AND #$01
 06:9E2E:AA        TAX
 06:9E2F:BD AD 9E  LDA $9EAD,X @ $9EBC = #$03
 06:9E32:99 30 03  STA $0330,Y @ $035A = #$22
 06:9E35:A9 80     LDA #$80
 06:9E37:99 80 03  STA $0380,Y @ $03AA = #$40
 06:9E3A:A9 01     LDA #$01
 06:9E3C:99 90 03  STA $0390,Y @ $03BA = #$00
 06:9E3F:A9 00     LDA #$00
 06:9E41:99 A0 03  STA $03A0,Y @ $03CA = #$60
 06:9E44:99 B0 03  STA $03B0,Y @ $03DA = #$06
 06:9E47:A9 01     LDA #$01
 06:9E49:99 F0 03  STA $03F0,Y @ $041A = #$00
 06:9E4C:A9 2B     LDA #$2B
 06:9E4E:99 10 03  STA $0310,Y ; Sliding item action 
 06:9E51:60        RTS -----------------------------------------
 06:9E52:FE 00 03  INC $0300,X
 06:9E55:A9 60     LDA #$60
 06:9E57:9D 60 04  STA $0460,X ; Set action timer 1
 06:9E5A:BD 00 04  LDA $0400,X 
 06:9E5D:49 40     EOR #$40    
 06:9E5F:9D 00 04  STA $0400,X ; Reverse direction 
 06:9E62:BD D0 03  LDA $03D0,X 
 06:9E65:49 03     EOR #$03
 06:9E67:9D D0 03  STA $03D0,X ; Reverse direction 
 06:9E6A:60        RTS ----------------------------------------- 
 06:9E6B:BD 70 04  LDA $0470,X @ $047E = #$00
 06:9E6E:F0 27     BEQ $9E97
 06:9E70:DE 70 04  DEC $0470,X @ $047E = #$00
 06:9E73:D0 37     BNE $9EAC
 06:9E75:BD D0 03  LDA $03D0,X @ $03DE = #$01
 06:9E78:29 01     AND #$01
 06:9E7A:A8        TAY
 06:9E7B:B9 AF 9E  LDA $9EAF,Y @ $9EFD = #$04
 06:9E7E:9D 30 03  STA $0330,X @ $033E = #$18
 06:9E81:BD 00 04  LDA $0400,X @ $040E = #$94
 06:9E84:29 FB     AND #$FB
 06:9E86:9D 00 04  STA $0400,X @ $040E = #$94
 06:9E89:A9 80     LDA #$80
 06:9E8B:9D 00 03  STA $0300,X @ $030E = #$80
 06:9E8E:A9 00     LDA #$00
 06:9E90:9D 60 04  STA $0460,X @ $046E = #$00
 06:9E93:9D 70 04  STA $0470,X @ $047E = #$00
 06:9E96:60        RTS -----------------------------------------
 06:9E97:20 DF FC  JSR $FCDF
 06:9E9A:DE 60 04  DEC $0460,X @ $046E = #$00
 06:9E9D:D0 0D     BNE $9EAC
 06:9E9F:BD 00 04  LDA $0400,X @ $040E = #$94
 06:9EA2:09 04     ORA #$04
 06:9EA4:9D 00 04  STA $0400,X @ $040E = #$94
 06:9EA7:A9 20     LDA #$20
 06:9EA9:9D 70 04  STA $0470,X @ $047E = #$00
 06:9EAC:60        RTS -----------------------------------------
 
================================================================
TABLE $9EAD
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 
9EA0                                        D0 30 

X-position of Y

TABLE $9EAF
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 
9EA0                                              FC
9EB0 04 

X-position of X

TABLE $9EB1
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 
9EB0    04 06 

Counter 2

TABLE $9EB3 
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 
9EB0          03 02 03 01 02 01 04 03 05 03 05 02 04
9EC0 02 05 01

00 03 02
01 03 01
02 02 01
03 04 03

04 05 03
05 05 02
06 04 02
07 05 01

TABLE $9EC3
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 
9EC0          22 40 

TABLE $9EC5
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 
9EC0                40 00

================================================================
FUNCTION $9EC7
ACTION LOOP $2B
Items falling/sliding for Walrus

 06:9EC7:BD 00 03  LDA $0300,X
 06:9ECA:29 0F     AND #$0F
 06:9ECC:D0 28     BNE $9EF6
 06:9ECE:A0 00     LDY #$00
 06:9ED0:BD 30 04  LDA $0430,X
 06:9ED3:C9 40     CMP #$40
 06:9ED5:D0 02     BNE $9ED9
 06:9ED7:A0 06     LDY #$06
 06:9ED9:20 2F F8  JSR $F82F
 06:9EDC:90 08     BCC $9EE6
 06:9EDE:FE 00 03  INC $0300,X
 06:9EE1:A9 02     LDA #$02
 06:9EE3:9D 70 04  STA $0470,X
 06:9EE6:BD 30 04  LDA $0430,X
 06:9EE9:C9 40     CMP #$40
 06:9EEB:D0 72     BNE $9F5F
 06:9EED:BD 00 04  LDA $0400,X
 06:9EF0:29 BF     AND #$BF
 06:9EF2:9D 00 04  STA $0400,X
 06:9EF5:60        RTS -----------------------------------------
 06:9EF6:20 DF FC  JSR $FCDF
 06:9EF9:A0 00     LDY #$00
 06:9EFB:BD 30 04  LDA $0430,X
 06:9EFE:C9 40     CMP #$40
 06:9F00:D0 02     BNE $9F04
 06:9F02:A0 06     LDY #$06
 06:9F04:BD 70 04  LDA $0470,X
 06:9F07:F0 09     BEQ $9F12
 06:9F09:DE 70 04  DEC $0470,X
 06:9F0C:D0 04     BNE $9F12
 06:9F0E:A9 00     LDA #$00
 06:9F10:85 BC     STA $00BC
 06:9F12:20 2F F8  JSR $F82F
 06:9F15:B0 CF     BCS $9EE6
 06:9F17:BD 30 04  LDA $0430,X
 06:9F1A:C9 22     CMP #$22
 06:9F1C:D0 24     BNE $9F42
 06:9F1E:A9 24     LDA #$24
 06:9F20:9D 10 03  STA $0310,X
 06:9F23:A9 81     LDA #$81
 06:9F25:9D 00 03  STA $0300,X
 06:9F28:A5 E4     LDA $00E4 = #$DE
 06:9F2A:65 E7     ADC $00E7 = #$CE
 06:9F2C:85 E7     STA $00E7 = #$CE
 06:9F2E:29 03     AND #$03
 06:9F30:A8        TAY
 06:9F31:B9 50 96  LDA $9650,Y @ $96AA = #$E9
 06:9F34:9D 60 04  STA $0460,X @ $046D = #$00
 06:9F37:A9 80     LDA #$80
 06:9F39:9D 80 03  STA $0380,X @ $038D = #$00
 06:9F3C:A9 00     LDA #$00
 06:9F3E:9D 90 03  STA $0390,X @ $039D = #$00
 06:9F41:60        RTS -----------------------------------------
 06:9F42:A9 30     LDA #$30
 06:9F44:9D 10 03  STA $0310,X @ $031D = #$5A
 06:9F47:A9 81     LDA #$81
 06:9F49:9D 00 03  STA $0300,X @ $030D = #$81
 06:9F4C:A9 00     LDA #$00
 06:9F4E:9D 80 03  STA $0380,X @ $038D = #$00
 06:9F51:9D 90 03  STA $0390,X @ $039D = #$00
 06:9F54:9D A0 03  STA $03A0,X @ $03AD = #$C0
 06:9F57:9D B0 03  STA $03B0,X @ $03BD = #$FF
 06:9F5A:A9 FF     LDA #$FF
 06:9F5C:9D 60 04  STA $0460,X @ $046D = #$00
 06:9F5F:60        RTS -----------------------------------------
================================================================

FUNCTION $9F60
ACTION LOOP $2C/$2D
Eel Bosses
PHASE 0
PHASE 1 
PHASE 2 

 06:9F60:BD 00 03  LDA $0300,X
 06:9F63:29 0F     AND #$0F    ; Check phase #
 06:9F65:D0 22     BNE $9F89   ; Jump ahead if boss fight has already started
 
 06:9F67:20 09 A6  JSR $A609   ; Freeze Ariel for boss intro
 06:9F6A:90 1C     BCC $9F88   ; Advance once 
 06:9F6C:BD 10 03  LDA $0310,X ; Action loop 
 06:9F6F:C9 2C     CMP #$2C    ; Check if #$2C (Eel 1)
 06:9F71:F0 12     BEQ $9F85
 06:9F73:FE 70 04  INC $0470,X ; Bound 2
 06:9F76:BD 70 04  LDA $0470,X ; Bound 2
 06:9F79:C9 0C     CMP #$0C
 06:9F7B:D0 0B     BNE $9F88   ; Exit 
 06:9F7D:BD 00 04  LDA $0400,X ; Orientation 
 06:9F80:29 FB     AND #$FB    ; 1111 1011  Make sure right-side up?
 06:9F82:9D 00 04  STA $0400,X 
 06:9F85:FE 00 03  INC $0300,X ; Tick up phase #
 06:9F88:60        RTS -----------------------------------------
 06:9F89:BD 00 03  LDA $0300,X
 06:9F8C:29 0F     AND #$0F
 06:9F8E:C9 01     CMP #$01    ; Check if phase 1
 06:9F90:F0 03     BEQ $9F95
 06:9F92:4C 2B A0  JMP $A02B   ; If not 
 06:9F95:BD 60 04  LDA $0460,X ; Bound 1
 06:9F98:F0 22     BEQ $9FBC
 06:9F9A:DE 60 04  DEC $0460,X ; Tick down bound 1
 06:9F9D:D0 E9     BNE $9F88   ; Exit 
 06:9F9F:A5 E5     LDA $00E5
 06:9FA1:65 E6     ADC $00E6
 06:9FA3:85 E6     STA $00E6
 06:9FA5:29 03     AND #$03    ; RNG #$00-#$03
 06:9FA7:D0 67     BNE $A010   ; 75% chance
 06:9FA9:A9 5B     LDA #$5B
 06:9FAB:20 45 FC  JSR $FC45   ; Exit hole completely
 06:9FAE:FE 00 03  INC $0300,X ; Tick up phase #
 06:9FB1:A9 00     LDA #$00 
 06:9FB3:9D 70 04  STA $0470,X ; Set bound 2 to zero 
 06:9FB6:A9 46     LDA #$46
 06:9FB8:9D C0 03  STA $03C0,X 
 06:9FBB:60        RTS -----------------------------------------
 06:9FBC:BD 30 04  LDA $0430,X ; Animation loop 
 06:9FBF:C9 59     CMP #$59    ; Check if eyes
 06:9FC1:D0 30     BNE $9FF3
 06:9FC3:A9 08     LDA #$08    
 06:9FC5:DD 18 04  CMP $0418,X
 06:9FC8:D0 BE     BNE $9F88
 06:9FCA:DD 48 04  CMP $0448,X
 06:9FCD:D0 B9     BNE $9F88
 06:9FCF:A9 5A     LDA #$5A
 06:9FD1:20 45 FC  JSR $FC45   ; Set graphic to halfway in hole
 06:9FD4:A9 42     LDA #$42
 06:9FD6:9D C0 03  STA $03C0,X @ $03CA = #$60
 06:9FD9:BD D0 03  LDA $03D0,X ; Direction of movement
 06:9FDC:29 02     AND #$02
 06:9FDE:A8        TAY
 06:9FDF:BD 30 03  LDA $0330,X
 06:9FE2:18        CLC
 06:9FE3:79 A1 A1  ADC $A1A1,Y ; 
 06:9FE6:9D 30 03  STA $0330,X ; Set/unset #$08 flag
 06:9FE9:BD 40 03  LDA $0340,X ; based on direction facing
 06:9FEC:79 A2 A1  ADC $A1A2,Y ;
 06:9FEF:9D 40 03  STA $0340,X ; 
 06:9FF2:60        RTS -----------------------------------------
 06:9FF3:C9 45     CMP #$45    ; Check if head poking out
 06:9FF5:D0 12     BNE $A009
 06:9FF7:A9 02     LDA #$02
 06:9FF9:DD 18 04  CMP $0418,X
 06:9FFC:D0 8A     BNE $9F88
 06:9FFE:FE 00 03  INC $0300,X ; Tick up action loop 
 06:A001:A9 00     LDA #$00
 06:A003:9D 70 04  STA $0470,X ; Set bound 2 to #$00
 06:A006:4C 67 A0  JMP $A067
 
 06:A009:20 12 FD  JSR $FD12   ; Y-distance between Ariel and eel
 06:A00C:C9 10     CMP #$10    ; Check if less than #$10
 06:A00E:B0 15     BCS $A025
 06:A010:A9 00     LDA #$00
 06:A012:9D C0 03  STA $03C0,X
 06:A015:A9 45     LDA #$45
 06:A017:20 45 FC  JSR $FC45   ; Set graphic to poke out head 
 06:A01A:BD D0 03  LDA $03D0,X
 06:A01D:49 03     EOR #$03
 06:A01F:9D D0 03  STA $03D0,X  
 06:A022:4C DC 9F  JMP $9FDC   ; Set correct direction 
 
 06:A025:A9 C0     LDA #$C0    ; If Ariel is too close,
 06:A027:9D 60 04  STA $0460,X ; Set Bound 1 to #$C0 (wait 192 frames)
 06:A02A:60        RTS -----------------------------------------
 
 06:A02B:BD 70 04  LDA $0470,X ; Check if Bound 2 is zero yet
 06:A02E:F0 1D     BEQ $A04D
 06:A030:DE 70 04  DEC $0470,X ; Tick down bound 2
 06:A033:D0 F5     BNE $A02A   ; Exit if not zero
 
 06:A035:BD 00 04  LDA $0400,X
 06:A038:29 FB     AND #$FB    ; Clear #$04 flag
 06:A03A:9D 00 04  STA $0400,X
 06:A03D:A9 81     LDA #$81
 06:A03F:9D 00 03  STA $0300,X ; Set action phase to #$81
 06:A042:A9 59     LDA #$59
 06:A044:20 45 FC  JSR $FC45   ; Set graphic to Eyes
 06:A047:20 6F FC  JSR $FC6F   ; Turn towards Ariel
 06:A04A:4C 89 FC  JMP $FC89
 
 06:A04D:20 DF FC  JSR $FCDF
 06:A050:BD D0 03  LDA $03D0,X
 06:A053:29 01     AND #$01
 06:A055:F0 09     BEQ $A060
 06:A057:A9 F0     LDA #$F0
 06:A059:DD 30 03  CMP $0330,X ; Check if past right side of screen
 06:A05C:B0 79     BCS $A0D7   ;
 06:A05E:90 07     BCC $A067
 06:A060:A9 10     LDA #$10
 06:A062:DD 30 03  CMP $0330,X ; Check if past left side of screen
 06:A065:90 70     BCC $A0D7   ;
 
 06:A067:BD 00 04  LDA $0400,X 
 06:A06A:09 04     ORA #$04    ; Set #$04 flag
 06:A06C:9D 00 04  STA $0400,X 
 06:A06F:A9 40     LDA #$40
 06:A071:9D 70 04  STA $0470,X ; Set Bound 2 to #$40
 06:A074:BD 10 03  LDA $0310,X ; Action loop
 06:A077:29 01     AND #$01    ; Round up to odd number
 06:A079:A8        TAY
 06:A07A:B9 C5 A1  LDA $A1C5,Y ; 2D/2C
 06:A07D:85 00     STA $0000 = #$46
 06:A07F:A0 0F     LDY #$0F
 06:A081:B9 00 03  LDA $0300,Y @ $0312 = #$27
 06:A084:10 07     BPL $A08D
 06:A086:B9 10 03  LDA $0310,Y @ $0322 = #$00
 06:A089:C5 00     CMP $0000 = #$46
 06:A08B:F0 05     BEQ $A092
 06:A08D:88        DEY
 06:A08E:C0 02     CPY #$02
 06:A090:D0 EF     BNE $A081
 06:A092:A5 E4     LDA $00E4 = #$28
 06:A094:65 E7     ADC $00E7 = #$54
 06:A096:85 E7     STA $00E7 = #$54
 06:A098:29 0F     AND #$0F
 06:A09A:9D 80 04  STA $0480,X ; RNG #$00-#$0F
 06:A09D:C9 0D     CMP #$0D
 06:A09F:90 05     BCC $A0A6
 06:A0A1:A9 0C     LDA #$0C
 06:A0A3:9D 80 04  STA $0480,X
 06:A0A6:38        SEC
 06:A0A7:F9 80 04  SBC $0480,Y 
 06:A0AA:B0 05     BCS $A0B1
 06:A0AC:49 FF     EOR #$FF
 06:A0AE:18        CLC
 06:A0AF:69 01     ADC #$01
 06:A0B1:C9 02     CMP #$02
 06:A0B3:B0 12     BCS $A0C7
 06:A0B5:BD 80 04  LDA $0480,X ; RNG #$00-#$0F
 06:A0B8:18        CLC
 06:A0B9:69 05     ADC #$05
 06:A0BB:29 0F     AND #$0F    ; RNG #$05-#$0F func #$00-#$0A
 06:A0BD:C9 0D     CMP #$0D
 06:A0BF:90 03     BCC $A0C4   ; 30% chance
 06:A0C1:38        SEC
 06:A0C2:E9 0C     SBC #$0C
 06:A0C4:9D 80 04  STA $0480,X @ $048A = #$00
 06:A0C7:BD 80 04  LDA $0480,X @ $048A = #$00
 06:A0CA:A8        TAY
 06:A0CB:B9 A5 A1  LDA $A1A5,Y @ $A1B7
 06:A0CE:9D 30 03  STA $0330,X @ $033A
 06:A0D1:B9 B5 A1  LDA $A1B5,Y @ $A1C7
 06:A0D4:9D 60 03  STA $0360,X @ $036A
 06:A0D7:60        RTS -----------------------------------------
================================================================
FUNCTION $A0D8
ACTION LOOP #5A
Crab Spawner for Eel Bosses

 06:A0D8:BD 00 03  LDA $0300,X
 06:A0DB:29 0F     AND #$0F    ; Retrieve Phase #
 06:A0DD:D0 12     BNE $A0F1   ; Jump ahead if not zero
 
 06:A0DF:FE 60 04  INC $0460,X ; Tick up Timer 1 \
 06:A0E2:BD 60 04  LDA $0460,X ;                 | PHASE 0
 06:A0E5:C9 70     CMP #$70    ; Check if 70     | Wait 112 frames
 06:A0E7:90 EE     BCC $A0D7   ; Exit if not     | before beginning
 06:A0E9:FE 00 03  INC $0300,X ; Go to Phase 1   | to spawn crabs 
 06:A0EC:A9 00     LDA #$00    ;                 |
 06:A0EE:9D 60 04  STA $0460,X ; Reset timer     /
 
 06:A0F1:A0 0F     LDY #$0F  
 06:A0F3:B9 00 03  LDA $0300,Y ; \  Check all existing entities
 06:A0F6:10 0B     BPL $A103   ; |
 06:A0F8:B9 10 03  LDA $0310,Y ; |
 06:A0FB:C9 2C     CMP #$2C    ; |  Check if Eel 1 is alive
 06:A0FD:F0 0F     BEQ $A10E   ; |
 06:A0FF:C9 2D     CMP #$2D    ; |  Check if Eel 2 is alive
 06:A101:F0 0B     BEQ $A10E   ; |  If either Eel is still alive, jump to next section
 06:A103:88        DEY         ; |
 06:A104:C0 02     CPY #$02    ; |
 06:A106:D0 EB     BNE $A0F3   ; /
 
 06:A108:A9 00     LDA #$00
 06:A10A:9D 00 03  STA $0300,X ; Delete Crab Spawner when Eels are dead
 06:A10D:60        RTS -----------------------------------------
 
 
 06:A10E:BD 70 04  LDA $0470,X ; Load Timer 2       \
 06:A111:F0 05     BEQ $A118   ; Jump ahead if zero | Wait 64 frames 
 06:A113:DE 70 04  DEC $0470,X ; Tick Down Timer 2  | between the two
 06:A116:D0 BF     BNE $A0D7   ; Exit if not zero   / crab spawns
 
 06:A118:BD 60 04  LDA $0460,X ; Load Timer 1
 06:A11B:D0 1D     BNE $A13A   ; Jump ahead if not zero 

 06:A11D:A0 0F     LDY #$0F
 06:A11F:B9 00 03  LDA $0300,Y ; Check all existing entities 
 06:A122:10 07     BPL $A12B
 06:A124:B9 10 03  LDA $0310,Y 
 06:A127:C9 15     CMP #$15    ; Check if there are any (non-bubbled) crabs on screen
 06:A129:F0 AC     BEQ $A0D7   ; Exit if so
 06:A12B:88        DEY
 06:A12C:C0 02     CPY #$02
 06:A12E:D0 EF     BNE $A11F
 
 06:A130:A9 40     LDA #$40
 06:A132:9D 70 04  STA $0470,X ; Set Timer 2 to #$40
 06:A135:A9 02     LDA #$02
 06:A137:9D 60 04  STA $0460,X ; Set Timer 1 to #$02
 
 06:A13A:20 54 FE  JSR $FE54   ; Locate empty entity slot
 06:A13D:B0 98     BCS $A0D7   ; Exit if none
 
 06:A13F:86 0F     STX $000F 
 06:A141:A9 26     LDA #$26
 06:A143:20 51 FC  JSR $FC51 ; Spawn crab graphic
 06:A146:BD 70 03  LDA $0370,X 
 06:A149:99 70 03  STA $0370,Y ; Set high byte of y-position to same as crab spawner
 06:A14C:BD 40 03  LDA $0340,X 
 06:A14F:99 40 03  STA $0340,Y ; Set high byte of x-position to same as crab spawner
 
 06:A152:A5 E4     LDA $00E4 = #$68
 06:A154:65 E5     ADC $00E5 = #$2A
 06:A156:85 E5     STA $00E5 = #$2A
 06:A158:29 03     AND #$03    ; RNG #$00-#$03
 06:A15A:DD 80 04  CMP $0480,X 
 06:A15D:D0 05     BNE $A164
 
 06:A15F:18        CLC
 06:A160:69 02     ADC #$02
 06:A162:29 03     AND #$03 ; Advance modulo by 2?
 
 06:A164:9D 80 04  STA $0480,X ; Set bound 3 to RNG #$00-#$04
 06:A167:AA        TAX
 
 78 28 D8 78 28 38 38 28
 
 06:A168:BD C7 A1  LDA $A1C7,X @ $A1D4 = #$D0
 06:A16B:99 30 03  STA $0330,Y @ $038A = #$DD
 06:A16E:BD CB A1  LDA $A1CB,X @ $A1D8 = #$A6
 06:A171:99 60 03  STA $0360,Y ; Set starting x-y position
 06:A174:98        TYA
 06:A175:AA        TAX
 06:A176:20 6F FC  JSR $FC6F   ; Turn towards Ariel
 06:A179:20 89 FC  JSR $FC89   ; Orient graphic the correct way
 06:A17C:A9 00     LDA #$00
 
 06:A17E:99 A0 03  STA $03A0,Y
 06:A181:99 B0 03  STA $03B0,Y ; Set y-speed to zero
 06:A184:99 90 03  STA $0390,Y 
 06:A187:A9 80     LDA #$80
 06:A189:99 80 03  STA $0380,Y ; Set x-speed to #$80
 06:A18C:A9 60     LDA #$60
 06:A18E:99 C0 03  STA $03C0,Y ; Enable hitbox + bubbling
 06:A191:A9 01     LDA #$01
 06:A193:99 F0 03  STA $03F0,Y ; Set HP to one
 06:A196:A9 15     LDA #$15
 06:A198:99 10 03  STA $0310,Y ; Set action loop to 15
 06:A19B:A6 0F     LDX $000F
 06:A19D:DE 60 04  DEC $0460,X ; Tick down crab counter
 06:A1A0:60        RTS -----------------------------------------

================================================================

DATA TABLE $A1A1
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A1A0    08 00 F8 FF

00 = plus  8
01 = minus 8

DATA TABLE $A1A5
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A1A0                78 28 D8 58 98 38 C8 68 28 A8 88
A1B0 48 D8 00 00 00 

DATA TABLE $A1B5 
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A1B0                28 38 38 48 58 68 68 78 88 88 98
A1C0 A8 A8 00 00 00

X,Y coordinates
00 = 78,28     120, 40
01 = 28,38      40, 56
02 = D8,38     216, 56
03 = 58,48      88, 72
04 = 98,58     152, 88
05 = 38,68      56,104
06 = C8,68     200,104
07 = 68,78     104,120
08 = 28,88      40,136
09 = A8,88     168,136
0A = 88,98     136,152 1
0B = 48,A8      72,168 1/16
0C = D8,A8     216,168 4/16
0D = 00,00
0E = 00,00
0F = 00,00

DATA TABLE $A1C5
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A1C0                2D 2C 

DATA TABLE $A1C7
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A1C0                      78 28 D8 78 28 38 38 28

================================================================
FUNCTION $A1CF
ACTION LOOP $2E
Seahorse boss 

 06:A1CF:BD 00 03  LDA $0300,X ; Check Action Step
 06:A1D2:29 0F     AND #$0F
 06:A1D4:D0 2F     BNE $A205
 06:A1D6:20 09 A6  JSR $A609
 06:A1D9:90 29     BCC $A204   ; Exit
 
 06:A1DB:A9 00     LDA #$00
 06:A1DD:9D 48 04  STA $0448,X
 06:A1E0:A9 04     LDA #$04
 06:A1E2:9D D0 03  STA $03D0,X ; Set direction to left/down
 06:A1E5:A9 B0     LDA #$B0    ;
 06:A1E7:9D A0 03  STA $03A0,X ;
 06:A1EA:A9 00     LDA #$00    ;
 06:A1EC:9D B0 03  STA $03B0,X ; Set y-velocity to #$00B0 
 06:A1EF:20 00 FD  JSR $FD00
 06:A1F2:FE 70 04  INC $0470,X ; Increment subtimer 2
 06:A1F5:BD 70 04  LDA $0470,X 
 06:A1F8:C9 7A     CMP #$7A    
 
 06:A1FA:90 08     BCC $A204   ; Exit
 
 06:A1FC:FE 00 03  INC $0300,X ; Increment action timer
 06:A1FF:A9 40     LDA #$40
 06:A201:9D 60 04  STA $0460,X ; Set subtimer 1 to 40
 06:A204:60        RTS -----------------------------------------
 06:A205:BD 30 04  LDA $0430,X @ $043F = #$40
 06:A208:C9 56     CMP #$56
 06:A20A:D0 11     BNE $A21D
 
 06:A20C:A9 06     LDA #$06
 06:A20E:DD 18 04  CMP $0418,X @ $0427 = #$0A
 06:A211:D0 0A     BNE $A21D
 
 06:A213:DD 48 04  CMP $0448,X @ $0457 = #$04
 06:A216:D0 05     BNE $A21D
 06:A218:A9 55     LDA #$55
 06:A21A:20 45 FC  JSR $FC45
 
 06:A21D:DE 60 04  DEC $0460,X @ $046F = #$00
 06:A220:D0 E2     BNE $A204
 06:A222:A5 E5     LDA $00E5 = #$29
 06:A224:65 E6     ADC $00E6 = #$DD
 06:A226:85 E6     STA $00E6 = #$DD
 06:A228:29 03     AND #$03
 06:A22A:A8        TAY
 06:A22B:B9 86 A3  LDA $A386,Y @ $A387 = #$20
 06:A22E:9D 60 04  STA $0460,X @ $046F = #$00
 06:A231:A9 00     LDA #$00
 06:A233:85 00     STA $0000 = #$E1
 06:A235:A0 0F     LDY #$0F
 06:A237:B9 00 03  LDA $0300,Y @ $0301 = #$00
 06:A23A:10 15     BPL $A251
 06:A23C:B9 30 04  LDA $0430,Y @ $0431 = #$00
 06:A23F:C9 20     CMP #$20
 06:A241:F0 0C     BEQ $A24F
 06:A243:C9 6F     CMP #$6F
 06:A245:F0 08     BEQ $A24F
 06:A247:C9 7B     CMP #$7B
 06:A249:F0 04     BEQ $A24F
 06:A24B:C9 23     CMP #$23
 06:A24D:D0 02     BNE $A251
 06:A24F:E6 00     INC $0000 = #$E1
 06:A251:88        DEY
 06:A252:C0 02     CPY #$02
 06:A254:D0 E1     BNE $A237
 06:A256:A5 00     LDA $0000 = #$E1
 06:A258:C9 02     CMP #$02
 06:A25A:B0 A8     BCS $A204
 06:A25C:A9 56     LDA #$56
 06:A25E:20 45 FC  JSR $FC45
 06:A261:A9 18     LDA #$18
 06:A263:20 A0 FC  JSR $FCA0
 06:A266:A9 01     LDA #$01
 06:A268:85 0E     STA $000E = #$04
 06:A26A:86 0F     STX $000F = #$F0
 06:A26C:20 54 FE  JSR $FE54
 06:A26F:B0 93     BCS $A204
 06:A271:A9 0A     LDA #$0A
 06:A273:99 D0 03  STA $03D0,Y @ $03D1 = #$00
 06:A276:A6 0E     LDX $000E = #$04
 06:A278:BD 8C A3  LDA $A38C,X @ $A39B = #$01
 06:A27B:99 60 03  STA $0360,Y @ $0361 = #$00
 06:A27E:BD 8A A3  LDA $A38A,X @ $A399 = #$2F
 06:A281:99 30 03  STA $0330,Y @ $0331 = #$00
 06:A284:A5 E7     LDA $00E7
 06:A286:65 E5     ADC $00E5
 06:A288:85 E7     STA $00E7
 06:A28A:29 03     AND #$03
 06:A28C:AA        TAX
 06:A28D:BD 92 A3  LDA $A392,X @ $A3A1 = #$01
 06:A290:99 C0 03  STA $03C0,Y @ $03C1 = #$00
 06:A293:BD 96 A3  LDA $A396,X @ $A3A5 = #$00
 06:A296:99 10 03  STA $0310,Y @ $0311 = #$00
 06:A299:A9 01     LDA #$01
 06:A29B:99 F0 03  STA $03F0,Y @ $03F1 = #$00
 06:A29E:BD 8E A3  LDA $A38E,X @ $A39D = #$00
 06:A2A1:20 51 FC  JSR $FC51
 06:A2A4:A5 E6     LDA $00E6
 06:A2A6:65 E5     ADC $00E5
 06:A2A8:85 E5     STA $00E5
 06:A2AA:29 07     AND #$07
 06:A2AC:AA        TAX
 06:A2AD:BD 9A A3  LDA $A39A,X
 06:A2B0:AA        TAX
 06:A2B1:BD A2 A3  LDA $A3A2,X @ $A3B1 = #$80
 06:A2B4:99 80 03  STA $0380,Y @ $0381 = #$00
 06:A2B7:99 A0 03  STA $03A0,Y @ $03A1 = #$00
 06:A2BA:BD A5 A3  LDA $A3A5,X @ $A3B4 = #$0F
 06:A2BD:99 90 03  STA $0390,Y @ $0391 = #$00
 06:A2C0:99 B0 03  STA $03B0,Y @ $03B1 = #$00
 06:A2C3:BD A8 A3  LDA $A3A8,X @ $A3B7 = #$03
 06:A2C6:99 60 04  STA $0460,Y @ $0461 = #$00
 06:A2C9:A6 0F     LDX $000F = #$F0
 06:A2CB:BD 70 03  LDA $0370,X @ $037F = #$00
 06:A2CE:99 70 03  STA $0370,Y @ $0371 = #$00
 06:A2D1:BD 40 03  LDA $0340,X @ $034F = #$01
 06:A2D4:99 40 03  STA $0340,Y @ $0341 = #$00
 06:A2D7:C6 0E     DEC $000E = #$04
 06:A2D9:10 91     BPL $A26C
 06:A2DB:A9 01     LDA #$01
 06:A2DD:85 0E     STA $000E = #$04
 06:A2DF:86 0F     STX $000F = #$F0
 06:A2E1:20 54 FE  JSR $FE54
 06:A2E4:B0 65     BCS $A34B
 06:A2E6:A9 00     LDA #$00
 06:A2E8:99 10 03  STA $0310,Y  ; Set action loop to zero
 
 06:A2EB:A9 14     LDA #$14
 06:A2ED:20 51 FC  JSR $FC51    ; Spawn smoke from cannon
 06:A2F0:BD 70 03  LDA $0370,X
 06:A2F3:99 70 03  STA $0370,Y  ; Set to same position as cannon
 06:A2F6:BD 40 03  LDA $0340,X  ;
 06:A2F9:99 40 03  STA $0340,Y  ;
 
 06:A2FC:A6 0E     LDX $000E = #$04
 06:A2FE:BD AB A3  LDA $A3AB,X @ $A3BA = #$D0
 06:A301:99 30 03  STA $0330,Y @ $0331 = #$00
 06:A304:BD AD A3  LDA $A3AD,X @ $A3BC = #$A9
 06:A307:99 60 03  STA $0360,Y @ $0361 = #$00
 06:A30A:A6 0F     LDX $000F = #$F0
 06:A30C:C6 0E     DEC $000E = #$04
 06:A30E:10 D1     BPL $A2E1
 06:A310:A0 0F     LDY #$0F
 06:A312:B9 30 04  LDA $0430,Y ; Check for cannons set to default sprite
 06:A315:C9 64     CMP #$64
 06:A317:D0 05     BNE $A31E
 06:A319:A9 77     LDA #$77    
 06:A31B:20 51 FC  JSR $FC51   ; Change them to firing sprite
 06:A31E:88        DEY
 06:A31F:C0 02     CPY #$02
 06:A321:D0 EF     BNE $A312
 06:A323:60        RTS -----------------------------------------
 
 TABLE A38E (Spawned item - Entity #)
 TABLE A392 
 TABLE A396 (Spawned item - Action Loop)

 TABLE A39A 
 TABLE A3A2 
 TABLE A3A5
 TABLE A3A8 
 
 TABLE A3AB
 TABLE A3AD
 
================================================================
DATA TABLE $A386
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A380 
================================================================
DATA TABLE $A38A/$A38C
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A380                               72 8A 71 81

00 = 
01 = 
================================================================
DATA TABLE $A38E
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A380                                           20 23
A390 20 20

75% chance of fish   (60)
25% chance of urchin (40)

================================================================
DATA TABLE $A392
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A390       60 40 60 60 

================================================================
DATA TABLE $A396
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A390                   2F 5F 2F 2F

================================================================
DATA TABLE $A39A
Hex codes for 3 possible velocities
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A390                               00 01 02 00 01 02
A3A0 00 01 

37.5%           00
37.5% chance of 01
  25% chance of 02
================================================================
A3A2/A3A5 = velocity
A3A8 = timer
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A3A0       80 CC 00 00 00 01 40 50 60

00 = Velocity of $0080, Timer of $40
01 = Velocity of $00CC, Timer of $50
02 = Velocity of $0100, Timer of $60
================================================================
DATA TABLE $A3AB/$A3AD
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A3A0                                  7C 94 7B 8B

00 = 
01 =
================================================================
FUNCTION $A3D9
ACTION LOOP 47
Ursula 1

 06:A3D9:BD 60 03  LDA $0360,X 
 06:A3DC:48        PHA         ; Store current Y-position
 06:A3DD:A9 48     LDA #$48
 06:A3DF:9D 60 03  STA $0360,X ; Set Y-position
 06:A3E2:A9 49     LDA #$49
 06:A3E4:9D C0 03  STA $03C0,X ; ???
 06:A3E7:20 3F 80  JSR $803F   ;
 06:A3EA:68        PLA
 06:A3EB:9D 60 03  STA $0360,X ; Restore original y-position
 
 06:A3EE:A9 62     LDA #$62
 06:A3F0:9D C0 03  STA $03C0,X ; ???
 
 06:A3F3:BD 30 04  LDA $0430,X ; Animation loop
 06:A3F6:C9 7A     CMP #$7A
 06:A3F8:D0 1A     BNE $A414
 06:A3FA:DE 80 04  DEC $0480,X @ $048F = #$03
 06:A3FD:D0 D9     BNE $A3D8
 06:A3FF:A9 78     LDA #$78
 06:A401:20 45 FC  JSR $FC45
 06:A404:A9 00     LDA #$00
 06:A406:9D 60 04  STA $0460,X @ $046F = #$00
 06:A409:9D 70 04  STA $0470,X @ $047F = #$00
 06:A40C:BD C0 03  LDA $03C0,X @ $03CF = #$46
 06:A40F:09 40     ORA #$40
 06:A411:9D C0 03  STA $03C0,X @ $03CF = #$46
 06:A414:BD 00 03  LDA $0300,X @ $030F = #$82
 06:A417:29 0F     AND #$0F
 06:A419:D0 08     BNE $A423
 06:A41B:20 09 A6  JSR $A609
 06:A41E:90 B8     BCC $A3D8
 06:A420:FE 00 03  INC $0300,X @ $030F = #$82
 06:A423:BD 60 04  LDA $0460,X @ $046F = #$00
 06:A426:F0 08     BEQ $A430
 06:A428:DE 60 04  DEC $0460,X @ $046F = #$00
 06:A42B:D0 AB     BNE $A3D8
 06:A42D:DE 30 04  DEC $0430,X @ $043F = #$5D
 06:A430:A9 00     LDA #$00
 06:A432:85 00     STA $0000 = #$C4
 06:A434:A0 0F     LDY #$0F
 06:A436:B9 00 03  LDA $0300,Y @ $030D = #$80
 06:A439:10 19     BPL $A454
 06:A43B:B9 30 04  LDA $0430,Y @ $043D = #$20
 06:A43E:C9 28     CMP #$28
 06:A440:F0 10     BEQ $A452
 06:A442:C9 20     CMP #$20
 06:A444:F0 0C     BEQ $A452
 06:A446:C9 34     CMP #$34
 06:A448:F0 08     BEQ $A452
 06:A44A:C9 36     CMP #$36
 06:A44C:F0 04     BEQ $A452
 06:A44E:C9 3D     CMP #$3D
 06:A450:D0 02     BNE $A454
 06:A452:E6 00     INC $0000 = #$C4
 06:A454:88        DEY
 06:A455:C0 02     CPY #$02
 06:A457:D0 DD     BNE $A436
 06:A459:A5 00     LDA $0000 = #$C4
 06:A45B:C9 03     CMP #$03
 06:A45D:90 01     BCC $A460
 06:A45F:60        RTS -----------------------------------------
 06:A460:FE 30 04  INC $0430,X ; Go to throwing animation
 06:A463:A9 5A     LDA #$5A
 06:A465:9D 60 04  STA $0460,X ; Set timer 1 to #$5A
 06:A468:A0 0F     LDY #$0F
 06:A46A:B9 00 03  LDA $0300,Y ; Find an unoccupied entity slot?
 06:A46D:10 07     BPL $A476
 06:A46F:B9 10 03  LDA $0310,Y
 06:A472:C9 4A     CMP #$4A    ; Check if action loop is #$4A
 06:A474:F0 05     BEQ $A47B
 06:A476:88        DEY
 06:A477:C0 02     CPY #$02
 06:A479:D0 EF     BNE $A46A
 06:A47B:A9 01     LDA #$01
 06:A47D:99 18 04  STA $0418,Y ; Set animation 
 06:A480:99 48 04  STA $0448,Y ; Action position to 1?
 06:A483:A9 5A     LDA #$5A
 06:A485:99 60 04  STA $0460,Y @ $046D = #$00
 06:A488:A0 00     LDY #$00
 06:A48A:A9 40     LDA #$40
 06:A48C:85 00     STA $0000 = #$C4
 06:A48E:AD 30 03  LDA $0330 = #$20
 06:A491:C5 00     CMP $0000 = #$C4
 06:A493:90 0D     BCC $A4A2
 06:A495:C8        INY
 06:A496:C8        INY
 06:A497:A5 00     LDA $0000 = #$C4
 06:A499:18        CLC
 06:A49A:69 20     ADC #$20
 06:A49C:85 00     STA $0000 = #$C4
 06:A49E:C9 E0     CMP #$E0
 06:A4A0:D0 EC     BNE $A48E
 06:A4A2:84 0F     STY $000F = #$0F
 06:A4A4:86 0E     STX $000E = #$0E
 06:A4A6:20 54 FE  JSR $FE54
 06:A4A9:B0 6B     BCS $A516
 06:A4AB:A9 48     LDA #$48
 06:A4AD:99 10 03  STA $0310,Y @ $031D = #$0E
 06:A4B0:A9 40     LDA #$40
 06:A4B2:99 C0 03  STA $03C0,Y @ $03CD = #$60
 06:A4B5:A9 01     LDA #$01
 06:A4B7:99 F0 03  STA $03F0,Y @ $03FD = #$01
 06:A4BA:A5 E5     LDA $00E5 = #$8B
 06:A4BC:65 E4     ADC $00E4 = #$49
 06:A4BE:85 E4     STA $00E4 = #$49
 06:A4C0:29 07     AND #$07
 06:A4C2:AA        TAX
 06:A4C3:BD 47 A5  LDA $A547,X @ $A556 = #$20
 06:A4C6:99 60 04  STA $0460,Y @ $046D = #$00
 06:A4C9:D0 05     BNE $A4D0
 06:A4CB:A9 49     LDA #$49
 06:A4CD:99 10 03  STA $0310,Y @ $031D = #$0E
 06:A4D0:A6 0E     LDX $000E = #$0E
 06:A4D2:A9 28     LDA #$28
 06:A4D4:20 51 FC  JSR $FC51
 06:A4D7:BD 70 03  LDA $0370,X @ $037F = #$02
 06:A4DA:99 70 03  STA $0370,Y @ $037D = #$02
 06:A4DD:BD 40 03  LDA $0340,X @ $034F = #$0C
 06:A4E0:99 40 03  STA $0340,Y @ $034D = #$0C
 06:A4E3:A9 38     LDA #$38
 06:A4E5:99 60 03  STA $0360,Y @ $036D = #$70
 06:A4E8:A9 00     LDA #$00
 06:A4EA:99 90 03  STA $0390,Y @ $039D = #$01
 06:A4ED:A9 01     LDA #$01
 06:A4EF:99 B0 03  STA $03B0,Y @ $03BD = #$FF
 06:A4F2:A6 0F     LDX $000F = #$0F
 06:A4F4:BD 17 A5  LDA $A517,X @ $A526 = #$01
 06:A4F7:99 30 03  STA $0330,Y @ $033D = #$1B
 06:A4FA:BD 23 A5  LDA $A523,X @ $A532 = #$44
 06:A4FD:99 D0 03  STA $03D0,Y @ $03DD = #$02
 06:A500:BD 2F A5  LDA $A52F,X @ $A53E = #$11
 06:A503:99 80 03  STA $0380,Y @ $038D = #$00
 06:A506:BD 3B A5  LDA $A53B,X @ $A54A = #$C0
 06:A509:99 A0 03  STA $03A0,Y @ $03AD = #$C0
 06:A50C:A6 0E     LDX $000E = #$0E
 06:A50E:E6 0F     INC $000F = #$0F
 06:A510:A5 0F     LDA $000F = #$0F
 06:A512:29 01     AND #$01
 06:A514:D0 90     BNE $A4A6
 06:A516:60        RTS -----------------------------------------
================================================================
DATA TABLE $A517
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A510                      78 88 88 78 88 78 78 88 88 
A520 78 78 88

X-position of spawned enemy
================================================================
DATA TABLE $A523
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A520          02 01 02 01 02 02 01 01 02 01 02 01

X-direction of spawned enemy
================================================================
DATA TABLE $A52F
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A520                                              60 
A530 44 60 44 44 60 44 60 44 60 44 60 

X-velocity of spawned enemy 
================================================================
DATA TABLE $A53B
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A530                                  83 11 83 11 11
A540 83 11 83 11 83 11 83 
Y-velocity of spawned enemy 
================================================================
DATA TABLE $A547
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A540                      60 80 A0 C0 00 A0 80 60
Height of initial arc

00 = 1/8
60 = 2/8
80 = 2/8
A0 = 2/8
C0 = 1/8
================================================================
FUNCTION $A54F
ACTION LOOP 48

 06:A54F:BD 00 03  LDA $0300,X
 06:A552:29 0F     AND #$0F    ; Check current phase
 06:A554:D0 32     BNE $A588   
 06:A556:20 DF FC  JSR $FCDF   ; Phase zero
 06:A559:20 11 F9  JSR $F911
 06:A55C:BD 60 04  LDA $0460,X ; Bottom height 
 06:A55F:DD 60 03  CMP $0360,X ; 
 06:A562:B0 B2     BCS $A516
 06:A564:A9 1E     LDA #$1E
 06:A566:9D 60 04  STA $0460,X ; Set Bound 1 to #$1E (30)
 06:A569:FE 00 03  INC $0300,X ; Tick up to phase 2
 06:A56C:A5 E6     LDA $00E6
 06:A56E:65 E7     ADC $00E7
 06:A570:85 E7     STA $00E7
 06:A572:29 0F     AND #$0F
 06:A574:A8        TAY         
 06:A575:9D 70 04  STA $0470,X ; RNG #$00-#$0F
 06:A578:B9 C0 A5  LDA $A5C0,Y 
 06:A57B:20 45 FC  JSR $FC45   ; Set animation loop
 06:A57E:C0 05     CPY #$05
 06:A580:90 3D     BCC $A5BF   ; Exit
 06:A582:20 6F FC  JSR $FC6F
 06:A585:4C 89 FC  JMP $FC89
 
 06:A588:DE 60 04  DEC $0460,X ; Tick down Bound 1
 06:A58B:D0 89     BNE $A516   ; Exit
 06:A58D:A9 80     LDA #$80
 06:A58F:9D 00 03  STA $0300,X ; Set phase to #$80
 06:A592:BD 70 04  LDA $0470,X ; Load RNG value 
 06:A595:A8        TAY
 06:A596:B9 E0 A5  LDA $A5E0,Y 
 06:A599:9D C0 03  STA $03C0,X
 06:A59C:B9 D0 A5  LDA $A5D0,Y
 06:A59F:9D 10 03  STA $0310,X ; Set action loop
 06:A5A2:C9 12     CMP #$12
 06:A5A4:D0 05     BNE $A5AB
 06:A5A6:A9 81     LDA #$81
 06:A5A8:9D 00 03  STA $0300,X ; Set phase to #$81 if loop #$12
 06:A5AB:C0 05     CPY #$05
 06:A5AD:90 10     BCC $A5BF ; exit
 06:A5AF:A9 80     LDA #$80
 06:A5B1:9D 80 03  STA $0380,X
 06:A5B4:A9 00     LDA #$00
 06:A5B6:9D 90 03  STA $0390,X ; Set x-velo to #$0080
 06:A5B9:20 6F FC  JSR $FC6F
 06:A5BC:20 89 FC  JSR $FC89
 06:A5BF:60        RTS -----------------------------------------
================================================================
DATA TABLE $A5C0
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A5C0 36 36 36 3D 3D 20 20 20 20 20 34 34 20 20 20 34
	 
DATA TABLE $A5D0
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A5D0 13 13 13 14 14 03 12 12 12 03 05 05 03 12 03 05

DATA TABLE $A5E0 
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A5E0 40 40 40 40 40 60 60 60 60 60 60 60 60 60 60 60

================================================================
FUNCTION $A5F0
 06:A5F0:20 DF FC  JSR $FCDF ; Set orientation based on direction of movement
 06:A5F3:4C 11 F9  JMP $F911 
================================================================
FUNCTION $A609
 06:A609:A5 D9     LDA $00D9
 06:A60B:C9 08     CMP #$08
 06:A60D:B0 1D     BCS $A62C
 06:A60F:A5 30     LDA $0030
 06:A611:F0 04     BEQ $A617
 06:A613:C9 04     CMP #$04
 06:A615:D0 22     BNE $A639    ; Exit (wait to advance)
 06:A617:A5 30     LDA $0030
 06:A619:8D 70 04  STA $0470    ; Set Ariel's subtimer 2 to $0030
 06:A61C:A9 08     LDA #$08
 06:A61E:85 30     STA $0030
 06:A620:85 53     STA $0053
 06:A622:20 9E FC  JSR $FC9E
 06:A625:A9 60     LDA #$60
 06:A627:85 5F     STA $005F = #$00
 06:A629:8D 60 04  STA $0460    ; Set Ariel's subtimer 1 to #$60
 
 06:A62C:A5 5F     LDA $005F
 06:A62E:F0 0B     BEQ $A63B
 06:A630:C6 5F     DEC $005F
 06:A632:D0 05     BNE $A639
 06:A634:A9 00     LDA #$00
 06:A636:9D 48 04  STA $0448,X
 06:A639:18        CLC         ; Exit (wait to advance)
 06:A63A:60        RTS -----------------------------------------
 06:A63B:38        SEC         ; Exit (advance to next section)
 06:A63C:60        RTS -----------------------------------------

================================================================
FUNCTION $A692
ACTION LOOP #$57
Ursula 2

 06:A692:BD 60 03  LDA $0360,X @ $036F = #$40
 06:A695:48        PHA
 06:A696:A9 5C     LDA #$5C
 06:A698:9D 60 03  STA $0360,X @ $036F = #$40
 06:A69B:A9 48     LDA #$48
 06:A69D:9D C0 03  STA $03C0,X @ $03CF = #$46
 06:A6A0:20 3F 80  JSR $803F
 06:A6A3:68        PLA
 06:A6A4:9D 60 03  STA $0360,X @ $036F = #$40
 06:A6A7:A9 67     LDA #$67
 06:A6A9:9D C0 03  STA $03C0,X @ $03CF = #$46
 06:A6AC:A5 7F     LDA $007F = #$00
 06:A6AE:F0 2B     BEQ $A6DB
 06:A6B0:C6 7F     DEC $007F = #$00
 06:A6B2:D0 08     BNE $A6BC
 06:A6B4:BD C0 03  LDA $03C0,X @ $03CF = #$46
 06:A6B7:09 40     ORA #$40
 06:A6B9:9D C0 03  STA $03C0,X @ $03CF = #$46
 06:A6BC:A0 0B     LDY #$0B
 06:A6BE:B9 20 06  LDA $0620,Y @ $062D = #$20
 06:A6C1:99 00 06  STA $0600,Y @ $060D = #$20
 06:A6C4:88        DEY
 06:A6C5:10 F7     BPL $A6BE
 06:A6C7:A5 7F     LDA $007F = #$00
 06:A6C9:4A        LSR
 06:A6CA:4A        LSR
 06:A6CB:29 01     AND #$01
 06:A6CD:F0 0A     BEQ $A6D9
 06:A6CF:A0 0B     LDY #$0B
 06:A6D1:A9 0F     LDA #$0F
 06:A6D3:99 00 06  STA $0600,Y @ $060D = #$20
 06:A6D6:88        DEY
 06:A6D7:10 FA     BPL $A6D3
 06:A6D9:E6 18     INC $0018 = #$00
 06:A6DB:20 95 A7  JSR $A795
 06:A6DE:BD 00 03  LDA $0300,X @ $030F = #$82
 06:A6E1:29 0F     AND #$0F
 06:A6E3:D0 1D     BNE $A702
 06:A6E5:BD 18 04  LDA $0418,X @ $0427 = #$00
 06:A6E8:D0 31     BNE $A71B
 06:A6EA:FE 90 04  INC $0490,X @ $049F = #$00
 06:A6ED:BD 90 04  LDA $0490,X @ $049F = #$00
 06:A6F0:C9 B4     CMP #$B4
 06:A6F2:90 08     BCC $A6FC
 06:A6F4:A9 00     LDA #$00
 06:A6F6:9D 90 04  STA $0490,X @ $049F = #$00
 06:A6F9:FE 00 03  INC $0300,X @ $030F = #$82
 06:A6FC:A9 00     LDA #$00
 06:A6FE:9D 48 04  STA $0448,X @ $0457 = #$01
 06:A701:60        RTS -----------------------------------------
 06:A702:BD 18 04  LDA $0418,X @ $0427 = #$00
 06:A705:C9 02     CMP #$02
 06:A707:D0 12     BNE $A71B
 06:A709:A9 00     LDA #$00
 06:A70B:9D 48 04  STA $0448,X @ $0457 = #$01
 06:A70E:BD 90 04  LDA $0490,X @ $049F = #$00
 06:A711:F0 09     BEQ $A71C
 06:A713:DE 90 04  DEC $0490,X @ $049F = #$00
 06:A716:D0 03     BNE $A71B
 06:A718:DE 00 03  DEC $0300,X @ $030F = #$82
 06:A71B:60        RTS -----------------------------------------
 06:A71C:A5 7B     LDA $007B = #$00
 06:A71E:05 7C     ORA $007C = #$00
 06:A720:D0 F9     BNE $A71B
 06:A722:A9 22     LDA #$22
 06:A724:20 A0 FC  JSR $FCA0
 06:A727:A5 E4     LDA $00E4 = #$78
 06:A729:65 E5     ADC $00E5 = #$2A
 06:A72B:85 E5     STA $00E5 = #$2A
 06:A72D:29 03     AND #$03
 06:A72F:A8        TAY
 06:A730:B9 3A A8  LDA $A83A,Y @ $A847 = #$03
 06:A733:9D 90 04  STA $0490,X @ $049F = #$00
 06:A736:85 7E     STA $007E = #$00
 06:A738:A5 E4     LDA $00E4 = #$78
 06:A73A:65 E6     ADC $00E6 = #$DA
 06:A73C:85 E6     STA $00E6 = #$DA
 06:A73E:29 01     AND #$01
 06:A740:A8        TAY
 06:A741:B9 31 A8  LDA $A831,Y @ $A83E = #$A9
 06:A744:85 7A     STA $007A = #$00
 06:A746:A9 00     LDA #$00
 06:A748:85 7D     STA $007D = #$00
 06:A74A:85 7B     STA $007B = #$00
 06:A74C:85 7C     STA $007C = #$00
 06:A74E:85 1C     STA $001C = #$00
 06:A750:A0 0F     LDY #$0F
 06:A752:B9 00 03  LDA $0300,Y @ $030D = #$80
 06:A755:10 0B     BPL $A762
 06:A757:B9 30 04  LDA $0430,Y @ $043D = #$20
 06:A75A:C9 85     CMP #$85
 06:A75C:F0 0A     BEQ $A768
 06:A75E:C9 88     CMP #$88
 06:A760:F0 11     BEQ $A773
 06:A762:88        DEY
 06:A763:C0 02     CPY #$02
 06:A765:D0 EB     BNE $A752
 06:A767:60        RTS -----------------------------------------
 
 06:A768:B9 00 04  LDA $0400,Y
 06:A76B:29 FB     AND #$FB
 06:A76D:99 00 04  STA $0400,Y
 06:A770:4C 8B A7  JMP $A78B
 
 06:A773:A5 7A     LDA $007A
 06:A775:29 01     AND #$01
 06:A777:4A        LSR
 06:A778:6A        ROR
 06:A779:4A        LSR
 06:A77A:85 00     STA $0000
 06:A77C:B9 00 04  LDA $0400,Y
 06:A77F:29 BF     AND #$BF
 06:A781:05 00     ORA $0000
 06:A783:99 00 04  STA $0400,Y
 06:A786:A9 89     LDA #$89
 06:A788:99 30 04  STA $0430,Y
 06:A78B:A9 00     LDA #$00
 06:A78D:99 48 04  STA $0448,Y
 06:A790:99 18 04  STA $0418,Y
 06:A793:F0 CD     BEQ $A762
 06:A795:BD 60 04  LDA $0460,X @ $046F = #$00
 06:A798:F0 0A     BEQ $A7A4
 06:A79A:DE 60 04  DEC $0460,X @ $046F = #$00
 06:A79D:D0 30     BNE $A7CF
 06:A79F:BD 70 04  LDA $0470,X @ $047F = #$00
 06:A7A2:D0 2C     BNE $A7D0
 06:A7A4:A9 03     LDA #$03
 06:A7A6:9D 70 04  STA $0470,X @ $047F = #$00
 06:A7A9:A0 02     LDY #$02
 06:A7AB:65 E7     ADC $00E7 = #$8F
 06:A7AD:29 01     AND #$01
 06:A7AF:D0 02     BNE $A7B3
 06:A7B1:A0 00     LDY #$00
 06:A7B3:98        TYA
 06:A7B4:9D 80 04  STA $0480,X
 06:A7B7:A0 0F     LDY #$0F
 06:A7B9:B9 00 03  LDA $0300,Y
 06:A7BC:10 07     BPL $A7C5
 06:A7BE:B9 10 03  LDA $0310,Y
 06:A7C1:C9 58     CMP #$58
 06:A7C3:F0 6B     BEQ $A830
 06:A7C5:88        DEY
 06:A7C6:C0 02     CPY #$02
 06:A7C8:D0 EF     BNE $A7B9
 06:A7CA:A9 78     LDA #$78
 06:A7CC:9D 60 04  STA $0460,X
 06:A7CF:60        RTS -----------------------------------------
 06:A7D0:86 0F     STX $000F = #$0F
 06:A7D2:20 54 FE  JSR $FE54 ; Locate free entity position
 06:A7D5:B0 59     BCS $A830 ; Skip if none
 06:A7D7:A9 58     LDA #$58
 06:A7D9:99 10 03  STA $0310,Y ; Set action loop to #58
 06:A7DC:A9 20     LDA #$20
 06:A7DE:20 51 FC  JSR $FC51   ; Spawn fish
 06:A7E1:A9 60     LDA #$60
 06:A7E3:99 C0 03  STA $03C0,Y
 06:A7E6:A9 01     LDA #$01
 06:A7E8:99 F0 03  STA $03F0,Y ; Set HP to one 
 06:A7EB:BD 70 03  LDA $0370,X
 06:A7EE:99 70 03  STA $0370,Y
 06:A7F1:BD 40 03  LDA $0340,X
 06:A7F4:99 40 03  STA $0340,Y
 06:A7F7:A9 00     LDA #$00
 06:A7F9:99 80 03  STA $0380,Y
 06:A7FC:A9 01     LDA #$01
 06:A7FE:99 90 03  STA $0390,Y ; Set x-speed to #$0100
 
 06:A801:A5 E5     LDA $00E5
 06:A803:65 E6     ADC $00E6
 06:A805:29 01     AND #$01 ; RNG #$00-#$01
 06:A807:AA        TAX
 06:A808:BD 31 A8  LDA $A831,X @ $A840 = #$9D
 06:A80B:99 D0 03  STA $03D0,Y @ $03DD = #$02 ; Set direction to left or right
 06:A80E:29 01     AND #$01
 06:A810:AA        TAX
 06:A811:BD 33 A8  LDA $A833,X 
 06:A814:99 30 03  STA $0330,Y ; Set x-position to #$F8 or #$08
 
 06:A817:A6 0F     LDX $000F
 06:A819:BD 80 04  LDA $0480,X ; Tick up counter 3
 06:A81C:AA        TAX
 06:A81D:BD 35 A8  LDA $A835,X                
 06:A820:99 60 03  STA $0360,Y ; Y-position
 06:A823:A6 0F     LDX $000F
 06:A825:FE 80 04  INC $0480,X ; Tick up counter 3
 06:A828:DE 70 04  DEC $0470,X ; Tick down counter 2
 06:A82B:A9 20     LDA #$20
 06:A82D:9D 60 04  STA $0460,X ; Store #$20 to counter 1
 06:A830:60        RTS -----------------------------------------
================================================================
FUNCTION $A83E
 06:A83E:A9 00     LDA #$00
 06:A840:9D 80 03  STA $0380,X
 06:A843:A9 01     LDA #$01
 06:A845:9D 90 03  STA $0390,X ; Set x-velocity to #$0100
 06:A848:A5 7A     LDA $007A
 06:A84A:F0 2A     BEQ $A876
 06:A84C:DD D0 03  CMP $03D0,X ; Compare against direction of movement
 06:A84F:F0 14     BEQ $A865
 06:A851:BD 80 03  LDA $0380,X @ $038F = #$00
 06:A854:38        SEC
 06:A855:E5 7B     SBC $007B = #$00
 06:A857:9D 80 03  STA $0380,X @ $038F = #$00
 06:A85A:BD 90 03  LDA $0390,X @ $039F = #$02
 06:A85D:E9 00     SBC #$00
 06:A85F:9D 90 03  STA $0390,X @ $039F = #$02
 06:A862:4C 76 A8  JMP $A876
 06:A865:BD 80 03  LDA $0380,X @ $038F = #$00
 06:A868:18        CLC
 06:A869:65 7B     ADC $007B = #$00
 06:A86B:9D 80 03  STA $0380,X @ $038F = #$00
 06:A86E:BD 90 03  LDA $0390,X @ $039F = #$02
 06:A871:69 00     ADC #$00
 06:A873:9D 90 03  STA $0390,X
 06:A876:4C DF FC  JMP $FCDF
 
 06:A879:BD 80 04  LDA $0480,X @ $048F
 06:A87C:F0 10     BEQ $A88E
 
 06:A87E:DE 80 04  DEC $0480,X
 06:A881:4A        LSR
 06:A882:4A        LSR
 06:A883:29 01     AND #$01
 06:A885:A8        TAY
 06:A886:B9 DC A8  LDA $A8DC,Y
 06:A889:85 FC     STA $00FC ; screen x-pos high byte
 06:A88B:85 F7     STA $00F7 
 06:A88D:60        RTS -----------------------------------------
 
 06:A88E:BD 00 04  LDA $0400,X
 06:A891:29 04     AND #$04
 06:A893:D0 17     BNE $A8AC
 06:A895:09 04     ORA #$04
 06:A897:9D 00 04  STA $0400,X
 06:A89A:86 00     STX $0000
 06:A89C:A0 0F     LDY #$0F
 06:A89E:A9 00     LDA #$00
 06:A8A0:C4 00     CPY $0000
 06:A8A2:F0 03     BEQ $A8A7
 06:A8A4:99 00 03  STA $0300,Y
 06:A8A7:88        DEY
 06:A8A8:C0 02     CPY #$02
 06:A8AA:D0 F4     BNE $A8A0
 06:A8AC:BD 60 04  LDA $0460,X
 06:A8AF:FE 60 04  INC $0460,X
 06:A8B2:29 07     AND #$07
 06:A8B4:D0 25     BNE $A8DB
 06:A8B6:FE 70 04  INC $0470,X
 06:A8B9:A0 0B     LDY #$0B
 
 Darken all palette colors
	 06:A8BB:B9 00 06  LDA $0600,Y
	 06:A8BE:38        SEC
	 06:A8BF:E9 10     SBC #$10
	 06:A8C1:B0 02     BCS $A8C5
	 06:A8C3:A9 0F     LDA #$0F
	 06:A8C5:99 00 06  STA $0600,Y @ $060D
	 06:A8C8:99 20 06  STA $0620,Y @ $062D
	 06:A8CB:88        DEY
	 06:A8CC:10 ED     BPL $A8BB
 
 06:A8CE:84 18     STY $0018
 06:A8D0:BD 70 04  LDA $0470,X
 06:A8D3:C9 05     CMP #$05
 06:A8D5:D0 04     BNE $A8DB
 
 If
	 06:A8D7:A9 FF     LDA #$FF
	 06:A8D9:85 2F     STA $002F
	 
 06:A8DB:60        RTS -----------------------------------------
================================================================
FUNCTION $B000
Alters PPU data based on input X

 06:B000:A9 00     LDA #$00
 06:B002:85 03     STA $0003
 06:B004:BD 43 B0  LDA $B043,X
 06:B007:85 00     STA $0000
 06:B009:BD 5A B0  LDA $B05A,X
 06:B00C:85 01     STA $0001
 06:B00E:A0 00     LDY #$00
 06:B010:AD 02 20  LDA PPU_STATUS
 06:B013:B1 00     LDA ($00),Y
 06:B015:F0 25     BEQ $B03C      ; Exit
 06:B017:05 03     ORA $0003
 06:B019:8D 06 20  STA PPU_ADDRESS
 06:B01C:20 3D B0  JSR $B03D      ; Tick up Y (tick up $01 when rolls over)
 06:B01F:B1 00     LDA ($00),Y
 06:B021:8D 06 20  STA PPU_ADDRESS
 06:B024:20 3D B0  JSR $B03D      ; Tick up Y (tick up $01 when rolls over)
 06:B027:B1 00     LDA ($00),Y
 06:B029:85 02     STA $0002
 06:B02B:20 3D B0  JSR $B03D      ; Tick up Y (tick up $01 when rolls over) 
 06:B02E:B1 00     LDA ($00),Y 
 06:B030:8D 07 20  STA PPU_DATA
 06:B033:20 3D B0  JSR $B03D      ; Tick up Y (tick up $01 when rolls over)
 06:B036:C6 02     DEC $0002      
 06:B038:10 F4     BPL $B02E
 06:B03A:30 D4     BMI $B010
 06:B03C:60        RTS -----------------------------------------
================================================================
FUNCTION $B03D
 06:B03D:C8        INY
 06:B03E:D0 02     BNE $B042
 06:B040:E6 01     INC $0001
 06:B042:60        RTS -----------------------------------------
================================================================
DATA TABLE $B043

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
B040          71 E6 D2 2B 55 7F A9 D3 FD A9 27 51 51
B050 51 51 51 F4 86 A5 BF D8 F0 0E

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
B050                               B0 B1 B2 B4 B5 B6
B060 B7 B8 B9 B7 BB BC BC BC BC BC B2 B3 B3 B3 B3 B3
B070 B4

00 B071 - Title screen
01 B1E6
02 B2D2
03 B42B
04 B555
05 B67F
06 B7A9
07 B8D3
08 B9FD
09 B7A9
0A BB27
0B BC51
0C BC51
0D BC51
0E BC51
0F BC51
10 B2F4
11 B386
12 B3A5
13 B3BF
14 B3D8
15 B3F0
16 B40E
================================================================
DATA TABLE $B071

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
B070    20 8C 0A 07 08 09 0A 0B 0B 0C 0C 0D 0E 0F 20
B080 A7 0F 10 11 12 13 00 17 18 19 1A 1B 1C 17 17 1D
B090 1E 1F 20 C7 11 20 21 22 23 14 15 14 27 28 2B 2C
B0A0 13 2E 2F 13 01 02 03 20 E7 11 30 31 32 33 24 25
B0B0 36 37 38 3B 3C 33 3E 3F 33 30 00 04 21 07 11 40
B0C0 41 42 43 34 35 34 29 3A 4B 4C 4D 49 4E 43 40 00
B0D0 05 21 27 13 50 51 52 53 44 45 44 39 4A 2A 3D 2D
B0E0 39 4F 53 26 16 06 67 60 21 4F 01 46 47 21 87 11
B0F0 63 65 58 66 66 00 66 67 54 65 67 00 55 68 67 67
B100 62 61 21 ED 05 80 80 82 80 80 80 22 0C 07 80 80
B110 91 92 80 80 80 80 22 2C 07 80 90 A1 A2 80 80 80
B120 80 22 4B 09 80 A0 81 00 B2 80 80 80 80 80 22 6B
B130 09 B0 B1 8C 00 83 84 85 80 80 80 22 8B 09 80 80
B140 80 AD 93 94 95 80 80 80 22 AB 09 80 80 80 88 00
B150 A4 A5 A6 80 80 22 CC 07 80 A3 98 B3 B4 B5 86 80
B160 22 E7 11 BE 87 87 9E 9F 89 8A 00 00 8E 8F 96 97
B170 B7 87 87 87 BF 23 09 0D AE 9D 8B 8A 00 00 00 00
B180 00 AC A7 A8 AA AB 23 28 0F AE 9D 80 99 9A AF 9A
B190 8D 00 AF 00 B6 80 80 AA AB 23 49 0C AE 9D AA AB
B1A0 00 00 00 00 00 AE 9D AA AB 23 6A 0A AE 9D AA AB
B1B0 00 00 00 AE 9D AA AB 23 C9 05 33 00 05 05 05 CF
B1C0 23 D1 05 00 00 00 00 00 00 23 DB 01 5F 5F 23 E2
B1D0 03 7F 55 65 DF 23 E9 05 3F 57 99 2A 4D CF 23 F2
B1E0 03 55 D5 51 D4 00 



DATA TABLE $B1E6

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
B1E0                   20 A5 05 26 16 22 25 18 49 20
B1F0 B8 00 3F 21 2D 05 70 71 71 71 71 72 21 4D 05 73
B200 60 61 62 63 74 21 6D 05 73 64 65 66 67 74 21 8D
B210 
B220 
B230 
B240 
B250 
B260 
B270 
B280 
B290 
B2A0 
B2B0 
B2C0 
B2D0 

DATA TABLE $B2D2

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
B2D0 
B2E0 
B2F0 
B300 
B310
Page FE
ROM: 0x3C010-0x3E00F
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C000 4C EA E0
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C000          20 D1 E4 00 00 6A 6A E9 1D C4 04 8E BE
C010 DD E9 4A C4 02 AC 05 C8 CF

FUNCTION $C003 (00 00)
Prints the error message "bno get err"

C008 6A          / Push #$0A to metastack            / (+2)
C009 6A          / Push #$0A to metastack            / (+2)
C00A E9 1D C4 04 / Run function $C41D                / (-4) Text pos 10,10

C00E 8E BE DD    / Push #$DDBE to metastack          / (+2) "bno get err"
C011 E9 4A C4 02 / Run function $C44A                / (-2) 

C015 AC 05 C8    / Call $C805 -> Wait for no input, then input

C018 CF          / Exit
====================================================	
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C010                            20 D1 E4 FD FF 0C 8F
C020 13 B0 85 FD 81 FD 8B FF C0 D8 2F C0 AC 03 C0 81
C030 FD 8B FE C0 D8 43 C0 0D 8C 1A 60 BB D3 A2 FF FF
C040 D6 5B C0 61 DE FF FF B3 81 FD 59 B5 1D BB 8C 44
C050 A8 BB B3 8E F9 00 62 E9 FE DC 0A A0 FF FF CF

FUNCTION $C019 (FD FF) $C01E-$C05E
Returns hidden stat <0D> for general <0C>

Args:
<0C> General
<0D> Stat #
Locs:
+FD  General's ID
+FF 

C01E 0C         
C01F 8F 13       /   
C021 B0          / General ID
C022 85 FD      

C024 81 FD      
C026 8B FF       
C028 C0           
C029 D8 2F C0    

If ID = #$FFFF (-1)
C02C	AC 03 C0    / Call $C003 -> Print "bno get err"

C02F 81 FD
C031 8B FE
C033 C0
C034 D8 43 C0

If ID = #$FFFE (-2)

C037	0D
C038	8C 1A 60
C03B    BB
C03C	D3
C03D	A2 FF FF
C040	D6 5B C0

Else
C043	61
C044	DE FF FF
C047	B3
C048	81 FD
C04A	59
C04B	B5
C04C	1D
C04D	BB
C04E	8C 44 A8
C051	BB
C052	B3
C053	8E F9 00
C056	62
C057	E9 FE DC 0A

C05B A0 FF FF
C05E CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C050                                              20
C060 D1 E4 FC FF 0C 8F 13 B0 2A 0A 8B FF C0 D8 73 C0
C070 AC 03 C0 0D D9 02 00 00 00 81 C0 01 00 A6 C0 8C
C080 C0 0A 8B FE C0 D8 8E C0 A4 1E 60 2B 0B CF 62 DE
C090 FE FF B3 0A 59 B5 8C 48 A8 BB B3 8E F9 00 62 E9
C0A0 FE DC 0A D6 8C C0 0A 8B FE C0 D8 B3 C0 A4 21 60
C0B0 D6 8B C0 62 DE FE FF B3 0A 59 B5 8C 4B A8 D6 99
C0C0 C0 

Function $C05F (FC FF)
Args:
<0C> General
<0D> Search type
Locs:
<0A> General ID
<0B> 

C064 0C
C065 8F 13
C067 B0
C068 2A          / ID of general

C069 0A
C06A 8B FF
C06C C0
C06D D8 73 C0

If ID == -1
C070	AC 03 C0 / Print "bno get err"

C073 0D
C074 D9 02 00
     00 00 81 C0
	 01 00 A6 C0
	       8C C0
		   
Case 00:
C081 0A
C082 8B FE
C084 C0
C085 D8 8E C0

if ID == -2
C088	A4 1E 60 / [601E] (16bit)
C08B	2B

Default:
C08C	0B
C08D	CF

C08E 62
C08F DE FE FF
C092 B3
C093 0A
C094 59
C095 B5
C096 8C 48 A8 / $A848
C099 BB
C09A B3
C09B 8E F9 00
C09E 62
C09F E9 FE DC 0A / Call $DCFE
C0A3 D6 8C C0    / Return stat +1 of general?

Case 01:
C0A6 0A
C0A7 8B FE 
C0A9 C0
C0AA D8 B3 C0

C0AD	A4 21 60
C0B0	D6 8B C0 / Return [6021] (16 bit)

C0B3 62
C0B4 DE FE FF
C0B7 B3
C0B8 0A
C0B9 59
C0BA B5
C0BB 8C 4B A8    / #$A84B
C0BE D6 99 C0    / Return stat 
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C0C0    20 D1 E4 FD FF 0C 8F 13 B0 85 FD 81 FD 8B FF
C0D0 C0 D8 D7 C0 AC 03 C0 0D D9 02 00 00 00 E5 C0 01
C0E0 00 10 C1 F3 C0 81 FD 8B FE C0 D8 F7 C0 A5 1D 60
C0F0 A2 FF FF A0 FF FF CF 61 DE FF FF B3 81 FD 59 B5
C100 8C 47 A8 BB B3 8E F9 00 62 E9 FE DC 0A D6 F3 C0
C110 81 FD 8B FE C0 D8 1E C1 A5 20 60 D6 F0 C0 61 DE
C120 FF FF B3 81 FD 59 B5 8C 4A A8 D6 03 C1 

Function $C0C1 (FD FF)
Returns stat <0D> of General <0C>
Args:
<0C> General
<0D> Lookup type
     0 = Return Comp stat
	 1 = Return Birth year

Locs:
+FD General ID

C0C6 0C
C0C7 8F 13
C0C9 B0
C0CA 85 FD

C0CC 81 FD
C0CE 8B FF
C0D0 C0
C0D1 D8 D7 C0 

If ID is -1
C0D4	AC 03 C0    / Call $C003 (Print error message)

C0D7 0D
C0D8 D9 02 00
     00 00 E5 C0
	 01 00 10 C1
	       F3 C0
		   
Case 0:
C0E5 81 FD      / General ID
C0E7 8B FE
C0E9 C0
C0EA D8 F7 C0

If ID is -2
C0ED	A5 1D 60   / $601D
C0F0	A2 FF FF

Default:
C0F3 A0 FF FF
C0F6 CF         /

C0F7 61
C0F8 DE FF FF
C0FB B3
C0FC 81 FD
C0FD 59
C0FE B5
C0FF 8C 47 A8    / $A847 (Comp stat)
C103 BB
C104 B3
C105 8E F9 00
C108 62
C109 E9 FE DC 0A / Call $DCFE (Retrieve stat)
C10D D6 F3 C0

Case 1:
C110 81 FD
C112 8B FE
C114 C0
C115 D8 1E C0

C118	A5 20 60
C11B	D6 F0 C0

C11E 61
C11F DE FF FF
C122 B3
C123 81 FD
C125 59
C126 B5
C127 8C 4A A8    / $A84A (Birth year)
C12A D6 03 C1
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C120                                        20 D1 E4
C130 FC FF 0C 8F 13 B0 2B 0B 8B FF C0 D8 41 C1 AC 03
C140 C0 0B 8B FE C0 D8 4C C1 40 D6 4D C1 41 A2 FC FF
C150 62 64 E9 E6 EE 04 A2 FD FF 8E FA 00 62 63 E9 E6
C160 EE 06 0D D5 00 00 04 00 BC C1 72 C1 CA C1 F4 C1
C170 1B C2 A0 FC FF D7 85 C1 8E 23 60 8E 05 79 E9 40
C180 E1 04 D6 96 C1 68 8E 05 79 0B D2 D2 8C 04 A0 BB
C190 B0 B3 E9 B8 F3 06 8E CA DD 8E 05 79 E9 57 E1 04
C1A0 A0 FC FF D8 B1 C1 0B D2 D2 8C 06 A0 BB B0 D6 B4
C1B0 C1 8A 2A 60 B3 8E 05 79 E9 57 E1 04 A0 FD FF B3
C1C0 62 63 E9 E6 EE 06 8A 05 79 CF A0 FC FF D7 DD C1
C1D0 8E 23 60 8E 05 79 E9 40 E1 04 D6 EE C1 68 8E 05
C1E0 79 0B D2 D2 8C 04 A0 BB B0 B3 E9 B8 F3 06 8E CC
C1F0 DD D6 99 C1 A0 FC FF D7 07 C2 8E 23 60 8E 05 79
C200 E9 40 E1 04 D6 BC C1 68 8E 05 79 0B D2 D2 8C 04
C210 A0 BB B0 B3 E9 B8 F3 06 D6 BC C1 A0 FC FF D7 27
C220 C2 8E 2A 60 D6 FD C1 68 8E 05 79 0B D2 D2 8C 06
C230 A0 D6 11 C2 

Function $C12D (FC FF) -> Retrieve <02> of General <00> and return pointer to it.
00 = Name


C132 0C
C133 8F 13
C135 B0
C136 2B           / Officer ID

C137 0B
C138 8B FF
C13A C0
C13B D8 41 C1

If ID = -1
C13E 	AC 03 C0  / Print error message

C141 0B
C142 8B FE
C144 C0
C145 D8 4C C1

If ID = -2
C148	40
C149	D6 4D C1  / Officer does not exist

Else
C14C	41        / Officer exists

C14D A2 FC FF

C150 62
C151 64
C152 E9 E6 EE 04 / Get value of RAM bank 2 ($A000-$BFFF)
C156 A2 FD FF    /
C159 8E FA 00
C15C 62
C15D 63
C15E E9 E6 EE 06 / Switch bank 2 to page FA

C162 0D
C163 D5 00 00
        04 00
		BC C1 : Default -> $C1BC
		72 C1 : Case 00 -> $C172
		CA C1 : Case 01 -> $C1CA
		F4 C1 : Case 02 -> $C1F4
		1B C2 : Case 03 -> $C21B
		
Case 00 (getting an officer's name)

GETTING THE FIRST NAME

C172 A0 FC FF
C175 D7 85 C1

if officer does not exist?
	C178 8E 23 60
	C17B 8E 05 79
	C17E E9 40 E1 04 / Call $E140 -> Transfer ? (null character?)
	C182 D6 96 C1
else 
	C185 68
	C186 8E 05 79
	C189 0B
	C18A D2
	C18B D2
	C18C 8C 04 A0
	C18F BB
	C190 B0
	C191 B3
	C192 E9 B8 F3 06 / Call $F3B8 -> Transfer max of 8 bytes to $7905?


C196 8E CA DD
C199 8E 05 79
C19C E9 57 E1 04 / Call $E157 -> Append $DDCA to string (" ")

GETTING THE SECOND NAME
C1A0 A0 FC FF
C1A3 D8 B1 C1

if
	C1A6 0B
	C1A7 D2
	C1A8 D2
	C1A9 8C 06 A0
	C1AC BB
	C1AD B0
	C1AE D6 B4 C1
else
	C1B1 8A 2A 60

C1B4 B3
C1B5 8E 05 79
C1B8 E9 57 E1 04 / Append second name to string

Default:
C1BC A0 FD FF
C1BF B3
C1C0 62
C1C1 63
C1C2 E9 E6 EE 06 / Restore RAM bank

C1C6 8A 05 79
C1C9 CF          / Return pointer to string

Case 01:
C1CA A0 FC FF
C1CD D7 DD C1

C1D0	8E 23 60
C1D3	8E 05 79
C1D6	E9 40 E1 04
C1DA	D6 EE C1

C1DD	68
C1DE 	8E 05 79
C1E1	0B
C1E2	D2
C1E3	D2
C1E4	8C 04 A0
C1E7	BB
C1E8	B0
C1E9	B3
C1EA	E9 B8 F3 06

C1EE 8E CC DD
C1F1 D6 99 C1

Case 02:
C1F4 A0 FC FF
C1F7 D7 07 C2

C1FA	8E 23 60    / $6023
C1FD	8E 05 79    / $7905
C200	E9 40 E1 04 / Call $E140 -> Transfer string from $6023 to $7905
C204	D6 BC C1

C207 68
C208 8E 05 79
C20B 0B
C20C D2
C20D D2
C20E 8C 04 A0
C211 BB
C212 B0
C213 B3
C214 E9 B8 F3 06
C218 D6 BC C1

Case 03:
C21B A0 FC FF
C21E D7 27 C2

C221 	8E 2A 60
C224 	D6 FD C1

C227 68
C228 8E 05 79
C22B 0B
C22C D2
C22D D2
C22E 8C 06 A0
C231 D6 11 C2
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C230             20 D1 E4 FC FF 0C 8C F4 73 BC 8B 19
C240 B8 53 BD 8C 44 B9 BB 2A 0D D9 02 00 00 00 56 C2
C250 01 00 68 C2 66 C2 62 DE FE FF B3 0A D0 B3 8E F8
C260 00 62 E9 FE DC 0A 0B CF 62 DE FE FF B3 0A 73 D6
C270 5D C2 

Function $C234 (FC FF) Gets <02> (x or y) position of province <00>
Args:
<0C> Province
<0D> Axis (x or y)
Locs:
<0A> Position in table $B944
00 -> +01 -> True x-position
01 -> +03 -> True y-position


C239 0C
C23A 8C F4 73
C23D BC
C23E 8B 19
C240 B8       / Get province #
C241 53
C242 BD       / Multiply by 8
C243 8C 44 B9
C246 BB
C247 2A

C248 0D
C249 D9 02 00
     00 00 56 C2
	 01 00 68 C2
	       66 C2
		   
Case 00
C256 62
C257 DE FE FF
C25A B3
C25B 0A
C25C D0
C25D B3
C25E 8E F8 00
C261 62
C262 E9 FE DC 0A

Default
C266 0B
C267 CF

Case 01
C268 62
C269 DE FE FF
C26C B3
C26D 0A
C26E 73
C26F D6 5D C2
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C270       20 D1 E4 FD FF 0C 8C F4 73 BC 8B 19 B8 53
C280 BD 8C 44 B9 BB 85 FD 0D D5 00 00 04 00 A6 C2 97
C290 C2 AA C2 B6 C2 C1 C2 61 DE FF FF B3 87 FD 8E F8
C2A0 00 62 E9 FE DC 0A A0 FF FF CF 61 DE FF FF B3 81
C2B0 FD 75 B3 D6 9E C2 61 DE FF FF B3 81 FD 76 D6 B2
C2C0 C2 61 DE FF FF B3 81 FD 77 D6 B2 C2 

Function $C272 (FD FF) -> Retrieves stat <02> for Province <00>
00 -> Stat +0 ?
01 -> Stat +5 ?
02 -> Stat +6 ?
03 -> Stat +7?

Args:
<0C> Province
<0D> ? (1 byte)
Locs:
+FD
+FF 

C277 0C
C278 8C F4 73    / #$73F4
C27B BC
C27C 8B 19
C27E B8          / Province ID

C27F 53
C280 BD
C281 8C 44 B9
C284 BB
C285 85 FD

C287 0D
C288 D5 00 00
        04 00
	    A6 C2 Default
		97 C2 00
		AA C2 01
		B6 C2 02
		C1 C2 03
		
Case 00
	C297 61
	C298 DE FF FF
	C29B B3
	C29C 87 FD
	C29E 8E F8 00
	C2A1 62
	C2A2 E9 FE DC 0A / Call $DCFE (retrieve data from page F8)
		
Default
	C2A6 A0 FF FF
	C2A9 CF

Case 01
	C2AA 61
	C2AB DE FF FF
	C2AE B3
	C2AF 81 FD
	C2B1 75
	C2B2 B3
	C2B3 D6 9E C2

Case 02
	C2B6 61
	C2B7 DE FF FF
	C2BA B3
	C2BB 81 FD
	C2BD 76
	C2BE D6 B2 C2

Case 03
	C2C1 61
	C2C2 DE FF FF
	C2C5 B3
	C2C6 81 FD
	C2C8 77
	C2C9 D6 B2 C2
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C2C0                                     20 D1 E4 FD
C2D0 FF 63 3C E9 72 C2 04 56 B5 8C E2 BA BB 2B 62 64
C2E0 E9 E6 EE 04 A2 FD FF 8E F8 00 62 63 E9 E6 EE 06
C2F0 0D D9 01 00 00 00 FA C2 03 C3 66 8E 05 79 3B E9
C300 B8 F3 06 A0 FD FF B3 62 63 E9 E6 EE 06 8A 05 79
C310 CF 

Function $C2CC (FD FF)
Args:
<0C>
<0D>
Locs:
<0B>

C2D1 63
C2D2 3C
C2D3 E9 72 C2 04 / Call $C272
C2D7 56
C2D8 B5
C2D9 8C E2 BA
C2DC BB
C2DD 2B

C2DE 62
C2DF 64
C2E0 E9 E6 EE 04 / Return value of RAM bank 2 ($A000-$BFFF)
C2E4 A2 FD FF

C2E7 8E F8 00
C2EA 62
C2EB 63
C2EC E9 E6 EE 06 / Set RAM bank 2 to Page F8

C2F0 0D
C2F1 D9 01 00
     00 00 FA C2
	       03 C3
Case 00:
C2FA 66
C2FB 8E 05 79    / #$7905
C2FE 3B
C2FF E9 B8 F3 06 / Call $F3B8 - Transfer 6 bytes to $7905

Default:
C303 A0 FD FF
C306 B3
C307 62
C308 63
C309 E9 E6 EE 06 / Reset RAM bank 2

C30D 8A 05 79    / 
C310 CF          / Return pointer to data
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C310    20 D1 E4 FC FF 3C E9 B3 D5 02 D8 20 C3 40 CF
C320 3C E9 A3 D8 02 2B D7 2B C3 44 CF 0B 72 D6 3B C3
C330 0A 72 B0 1C C0 D8 3A C3 41 CF 0A B0 2A 0A D7 30
C340 C3 0B 74 B0 1C C0 D8 4B C3 42 CF 43 CF 

Function $C311 (FC FF)
Returns status of given general

0 = Ruler
1 = Governor
2 = Advisor 
3 = Other
4 = No nation (dead? free?)

Args         
<0C>: General

Locs
<0B>: General's nation
<0A>: Current city

C316 3C
C317 E9 B3 D5 02 / Call $D5B3 (check if general is ruler)
C31B D8 20 C3

If general is ruler:
C31E 40
C31F CF          / Return 0

C320 3C
C321 E9 A3 D8 02 / Call $D8A3 (get general's nation)
C325 2B          / General nation
C326 D7 2B C3    /

If general has no nation:
C329 44
C32A CF          / Return 4

C32B 0B
C32C 72          / Nation's province list
C32D D6 3B C3    /

LOOP:
C330 0A
C331 72
C332 B0
C333 1C
C334 C0          / Check if general is governor of current city
C335 D8 3A C3
 
C338 41          / Return 1
C339 CF 

C33A 0A

C33B B0
C33C 2A

C33D 0A
C33E D7 30 C3

C341 0B
C342 74
C343 B0
C344 1C
C345 C0
C346 D8 4B C3

C349 42          / Return 2
C34A CF

C34B 43          / Return 3
C34C CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C340                                        20 D1 E4
C350 00 00 0C 7C B0 D7 5B C3 89 64 CF 8D 64 0C 7C B0
C360 B3 8D 64 0C 7E B0 B3 E9 63 D7 06 B3 E9 4C F3 04
C370 CF 

Function $C34D (00 00)
Args:
<0C> General

C352 0C          / General
C353 7C        
C354 B0          / General - Soldiers
C355 D7 5B C3

C358	89 64
C35A	CF       / Return 100

C35B 8D 64       / Stack: (100)
C35D 0C
C35E 7C
C35F B0
C360 B3          / Stack: (General.Soldiers) (100)
C361 8D 64       / Stack: (100) (General.Soldiers) (100)
C363 0C
C364 7E          / ?
C365 B0
C366 B3          / Stack: (General.?) (100) (General.Soldiers) (100)
C367 E9 63 D7 06 / Call $D763 -> Get ratio (General.?) * (100) / (General.Soldiers)
C36B B3
C36C E9 4C F3 04 / Call $F34C -> (Maximum of 100)
C370 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C370    20 D1 E4 00 00 0C 7C B0 D7 7F C3 89 64 CF 8D
C380 64 0C 7C B0 B3 0C 7E B0 B4 B8 B3 E9 4C F3 04 CF

Function $C371 (00 00)

C376 0C
C377 7C
C378 B0
C379 D7 7F C3

C37C 89 64
C37E CF

C37F 8D 64
C381 0C
C382 7C
C383 B0
C384 B3
C385 0C
C386 7E
C387 B0
C388 B4
C389 B8
C39A B3
C39B E9 4C F3 04 / Call $F34C (return smaller value)

C39F CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C390 20 D1 E4 00 00 A4 8C 7C 50 C2 D8 A1 C3 40 D6 B2
C3A0 C3 A4 8C 7C 8B 1F C4 D8 AF C3 89 1F D6 B2 C3 A4
C3B0 8C 7C A8 8C 7C A4 8E 7C 50 C2 D8 C1 C3 40 D6 D2
C3C0 C3 A4 8E 7C 8B 1D C4 D8 CF C3 89 1D D6 D2 C3 A4
C3D0 8E 7C A8 8E 7C CF 

Call $C390 (00 00)
C395 A4 8C 7C    / $7C8C
C398 50
C399 C2
C39A D8 A1 C3

C39D 40
C39E D6 B2 C3

C3A1 A4 8C 7C
C3A4 8B 1F
C3A6 C4
C3A7 D8 AF C3

C3AA 89 1F
C3AC D6 B2 C3

C3AF A4 8C 7C

C3B2 A8 8C 7C

C3B5 A4 8E 7C 

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C3B0 8C 7C A8 8C 7C A4 8E 7C 50 C2 D8 C1 C3 40 D6 D2
C3C0 C3 A4 8E 7C 8B 1D C4 D8 CF C3 89 1D D6 D2 C3 A4
C3D0 8E 7C A8 8E 7C CF 
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C3D0                   20 D1 E4 00 00 0C 50 C5 D8 E5
C3E0 C3 0C A8 8C 7C 0D 50 C5 D8 EF C3 0D A8 8E 7C AC
C3F0 90 C3 CF 

Function $C3D6 (00 00)
Set x-pos/y-pos of text to <00> & <02>

C3DB 0C
C3DC 50
C3DD C5
C3DE D8 E5 C3

C3E1 0C
C3E2 A8 8C 7C

C3E5 0D
C3E6 50
C3E7 C5
C3E8 D8 EF C3

C3EB 0D
C3EC A8 8E 7C

C3EF AC 90 C3

C3F2 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C3F0          20 D1 E4 00 00 0C A8 8C 7C AC 90 C3 CF

Function $C3F3 (00 00)
Set x-pos of text to <00>

C3F8 0C
C3F9 A8 8C 7C
C3FC AC 90 C3
C3FF CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C400 20 D1 E4 00 00 0C A8 8E 7C AC 90 C3 CF 

Function $C400
Set y-pos of text to <00>

C405 0C
C406 A8 8E 7C / $7C8E = <00>
C409 AC 90 C3 / Call $C390
C40C CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C400                                        20 D1 E4
C410 00 00 0C 53 C7 D8 1C C4 0C A9 94 7C CF 

Function $C40D (00 00)
Args:
<0C> Text color
     0 = white
	 1 = green
	 2 = blue
	 3 = red

C412 0C
C413 53
C414 C7
C415 D8 1C C4

C418 0C
C419 A9 94 7C

C41C CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C410                                        20 D1 E4
C420 00 00 3D 3C E9 D6 C3 04 CF 

Function $C41D (00 00)
Set x,y pos of text to <00>,<02>

C422 3D
C423 3C
C424 E9 D6 C3 04 / Call $C3D6

C428 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C420                            20 D1 E4 00 00 3C E9
C430 F3 C3 02 CF 

Function $C429 (00 00)

C42E 3C
C42F E9 F3 C3 02

C433 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C430             20 D1 E4 00 00 3C E9 00 C4 02 CF 

Function $C434 (00 00)

C439 3C
C43A E9 00 C4 02 / Call $C400

C43E CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C430                                              20
C440 D1 E4 00 00 3C E9 0D C4 02 CF 

Function $C43F (00 00)
C444 3C
C445 E9 0D C4 02 / Call $C40D

C449 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C440                               20 D1 E4 00 00 60
C450 3C E9 63 D9 04 CF 

Function $C44A (00 00)

C44F 60
C450 3C
C451 E9 63 D9 04 / Call $D963

C455 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C450                   20 D1 E4 00 00 61 3C E9 63 D9
C460 04 CF 

Function $C456 (00 00)

C45B 61
C45C 3C
C45D E9 63 D9 04

C461 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C460       20 D1 E4 FC FF 40 2B D6 77 C4 0B 5A B5 1A
C470 BB 2B 0C B3 B0 D0 B1 0C B0 D3 8F D0 2A 5A C6 D7
C480 6C C4 0B CF 

Function $C462 (FC FF)

C467 40
C468 2B
C469 D6 77 C4

Loop:
C46C 0B
C46D 5A
C46E B5
C46F 1A
C470 BB
C471 2B

C472 0C
C473 B3
C474 B0
C475 D0
C476 B1

C477 0C
C478 B0
C479 D3
C47A 8F D0
C47C 2A
C47D 5A
C47E C6
C47F D7 6C C4

C482 0B
C483 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C480             20 D1 E4 FF FF B7 0C 0D 00 B7 19 0A
C490 00 00 00 B7 08 D8 B0 C4 0C B3 B0 D0 B1 D1 B3 B7
C4A0 0C 0D 00 B7 19 30 00 00 00 B7 03 B7 27 D4 41 CF
C4B0 B7 0C 0D 00 B7 19 0A 00 00 00 B7 02 B7 14 3C E9
C4C0 84 C4 06 A2 FF FF B7 0C 0D 00 B7 19 0A 00 00 00
C4D0 B7 1E B7 14 3C E9 84 C4 06 A0 FF FF D0 CF

Function $C484
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C4D0                                           20 D1
C4E0 E4 50 FF DE 50 FF 85 E6 0C 85 FD D6 F9 C4 81 E6
C4F0 D0 85 E6 D1 B3 A0 FF FF D4 81 FD D0 85 FD D1 D3
C500 A2 FF FF D8 7E C6 A0 FF FF 8B 25 C0 D8 EE C4 DE
C510 F3 FF 85 F1 46 21 40 A2 EE FF A2 F0 FF A2 EF FF
C520 81 FD D3 A2 FF FF A0 FF FF 8B 2D C0 D8 3C C5 41
C530 A2 EE FF 81 FD D0 85 FD D3 A2 FF FF A0 FF FF 8B
C540 30 C5 D8 59 C5 A0 FF FF 8B 39 C3 D8 59 C5 DE FD
C550 FF B3 E9 62 C4 02 D6 5A C5 40 22 81 FD D0 85 FD
C560 D1 D3 A2 FF FF 8B 2E C0 D8 82 C5 DE FD FF B3 E9
C570 62 C4 02 21 41 A2 F0 FF 81 FD D0 85 FD D1 D3 A2
C580 FF FF A0 FF FF B3 E9 8F E1 02 8B 4C C0 D8 9E C5
C590 41 A2 EF FF 81 FD D0 85 FD D1 D3 A2 FF FF A0 FF
C5A0 FF B3 E9 8F E1 02 D9 05 00 00 00 7D C6 43 00 FD
C5B0 C5 44 00 BF C5 53 00 E8 C5 55 00 BF C5 EE C4 A0
C5C0 EF FF D8 DD C5 0D 72 2D 8F FE B7 16 B7 14 DE F1
C5D0 FF B3 E9 84 C4 06 CD 02 BC 22 D6 0E C6 0D 72 2D
C5E0 8F FE B0 B7 26 D6 CC C5 0D 72 2D 8F FE B0 85 F1
C5F0 87 F1 E9 79 E1 02 CD 02 BC 22 D6 1B C6 02 D1 22
C600 81 F1 D0 85 F1 D1 B3 0D 72 2D 8F FE B0 D4 87 F1
C610 40 D4 DE F3 FF 85 F1 40 A2 F0 FF 02 20 02 D1 22
C620 D0 50 C4 D8 39 C6 A0 EE FF D7 39 C6 81 E6 D0 85
C630 E6 D1 B3 89 20 D4 D6 1D C6 81 F1 D3 D8 61 C6 A0
C640 F0 FF D8 4B C6 01 50 C4 D8 59 C6 81 E6 D0 85 E6
C650 D1 B3 81 F1 D3 D4 01 D1 21 81 F1 D0 85 F1 D6 39
C660 C6 00 D1 20 D0 50 C4 D8 F9 C4 A0 EE FF D8 F9 C4
C670 81 E6 D0 85 E6 D1 B3 89 20 D4 D6 61 C6 CF 87 E6
C680 40 D4 3E DE 50 FF B3 E9 63 D9 04 CF

Function $C4DE (50 FF)

C4E3 DE 50 FF
C4E6 85 E6

C4E8 0C
C4E9 85 FD

C4EB D6 F9 C4

LOOP:
C4EE 81 E6
C4F0 D0
C4F1 85 E6
C4F3 D1
C4F4 B3
C4F5 A0 FF FF
C4F8 D4

C4F9 81 FD
C4FB D0
C4FC 85 FD
C4FE D1
C4FF D3
C500 A2 FF FF
C503 D8 7E C6

C506 A0 FF FF
C509 8B 25
C50A C0
C50B D8 EE C4

C50E C4
C50F DE F3 FF
C512 85 F1

C514 46
C515 21

C516 40
C517 A2 EE FF
C51A A2 F0 FF
C51D A2 EF FF

C520 81 FD
C522 D3
C523 A2 FF FF

C526 A0 FF FF
C529 8B 2D
C52B C0
C52C D8 3C C5

C52F 41
C530 A2 EE FF

C533 81 FD
C535 D0
C536 85 FD
C538 D3
C539 A2 FF FF

C53C A0 FF FF
C53F 8B 30
C541 C5
C542 D8 59 C5

C545 A0 FF FF
C548 8B 39
C54A C3
C54B D8 59 C5

C54E DE FD FF
C551 B3
C552 E9 62 C4 02

C556 D6 5A C5

C559 40

C55A 22

C55B 81 FD
C55D D0
C55E 85 FD
C560 D1
C561 D3
C562 A2 FF FF
C565 8B 2E
C567 C0
C568 D8 82 C5

C56B DE FD FF
C56E B3
C56F E9 62 C4 02 / Call $C462

C582

C67E

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C560 D1 D3 A2 FF FF 8B 2E C0 D8 82 C5 DE FD FF B3 E9
C570 62 C4 02 21 41 A2 F0 FF 81 FD D0 85 FD D1 D3 A2
C580 FF FF A0 FF FF B3 E9 8F E1 02 8B 4C C0 D8 9E C5
C590 41 A2 EF FF 81 FD D0 85 FD D1 D3 A2 FF FF A0 FF
C5A0 FF B3 E9 8F E1 02 D9 05 00 00 00 7D C6 43 00 FD
C5B0 C5 44 00 BF C5 53 00 E8 C5 55 00 BF C5 EE C4 A0
C5C0 EF FF D8 DD C5 0D 72 2D 8F FE B7 16 B7 14 DE F1
C5D0 FF B3 E9 84 C4 06 CD 02 BC 22 D6 0E C6 0D 72 2D
C5E0 8F FE B0 B7 26 D6 CC C5 0D 72 2D 8F FE B0 85 F1
C5F0 87 F1 E9 79 E1 02 CD 02 BC 22 D6 1B C6 02 D1 22
C600 81 F1 D0 85 F1 D1 B3 0D 72 2D 8F FE B0 D4 87 F1
C610 40 D4 DE F3 FF 85 F1 40 A2 F0 FF 02 20 02 D1 22
C620 D0 50 C4 D8 39 C6 A0 EE FF D7 39 C6 81 E6 D0 85
C630 E6 D1 B3 89 20 D4 D6 1D C6 81 F1 D3 D8 61 C6 A0
C640 F0 FF D8 4B C6 01 50 C4 D8 59 C6 81 E6 D0 85 E6
C650 D1 B3 81 F1 D3 D4 01 D1 21 81 F1 D0 85 F1 D6 39
C660 C6 00 D1 20 D0 50 C4 D8 F9 C4 A0 EE FF D8 F9 C4
C670 81 E6 D0 85 E6 D1 B3 89 20 D4 D6 61 C6 CF 87 E6
C680 40 D4 3E DE 50 FF B3 E9 63 D9 04 CF
====================================================	
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C680                                     20 D1 E4 FE
C690 FF DE 0D 00 2B 60 3B 3C E9 DE C4 06 CF

FUNCTION $C68C (FE FF) $C691-$C69C

C691 DE 0D 00    / Store address of preloaded 03 to M8
C694 2B          / Store M8 to meta 01
C695 60          / Push #$00 to metastack            / (+2)
C696 3B          / Push meta 01 to metastack         / (+2)
C697 3C          / Push preloaded 01/02 to metastack / (+2)
C698 E9 DE C4 06 / Run function $C4DE                / (-6)
C69C CF          / Exit
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C690                                        20 D1 E4
C6A0 FE FF DE 0D 00 2B 61 3B 3C E9 DE C4 06 CF 

Function $C69D (FE FF)
Args
<0C>
Locs
<0B>

C6A2 DE 0D 00
C6A5 2B

C6A6 61
C6A7 3B
C7A8 3C
C7A9 E9 DE C4 06 / Call $C4DE

C7AD CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C6A0                                           20 D1
C6B0 E4 FF FF 0D 5A C6 D8 C4 C6 0C B3 B0 D0 B1 D1 B3
C6C0 0D D4 41 CF 0D 5A B8 B3 3C E9 AE C6 04 A2 FF FF
C6D0 0D 5A BA B3 3C E9 AE C6 04 A0 FF FF D0 CF 

Function $C6AE (FF FF)
Args
<0C>
<0D>

C6B3 0D
C6B4 5A
C6B5 C6
C6B6 D8 C4 C6

C6B9	0C
C6BA	B3
C6BB	B0
C6BC	D0
C6BD	B1
C6BE	D1
C6BF	B3
C6C0	0D
C6C1	D4
C6C2	41
C6C3	CF

C6C4 0D
C6C5 5A
C6C6 B8
C6C7 B3
C6C8 3C
C6C9 E9 AE C6 04 / Call $C6AE
C6CD A2 FF FF

C6D0 0D
C6D1 5A
C6D2 BA
C6D3 B3
C6D4 3C
C6D5 E9 AE C6 04 / Call $C6AE

C6D9 A0 FF FF
C6DD D0
C6DE CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C6D0                                           20 D1
C6E0 E4 C2 FF DE E0 FF 22 DE D6 FF 21 DE C2 FF 85 D4
C6F0 DE C7 FF 85 D2 DE F6 FF 26 3D DE F4 FF B3 E9 AE
C700 C6 04 A2 CD FF B3 A0 0B 00 B4 BC A2 CC FF D6 41
C710 C7 02 D0 22 D1 B3 89 68 D4 01 D0 21 D1 B3 89 68
C720 D4 81 D4 D0 85 D4 D1 B3 A5 94 7C 56 BD 8B 2C DB
C730 D4 81 D2 D0 85 D2 D1 B3 A5 94 7C 56 BD 8B 2C DB
C740 D4 A0 CC FF D1 A2 CC FF D0 50 C8 D7 11 C7 DE F6
C750 FF 26 A5 94 7C 56 BD 8B 2C DB A2 F2 FF D6 8F C7
C760 02 D0 22 D1 B3 06 D3 D2 8F 54 D4 01 D0 21 D1 B3
C770 06 D3 D2 8F 55 D4 81 D4 D0 85 D4 D1 B3 A0 F2 FF
C780 D4 81 D2 D0 85 D2 D1 B3 A0 F2 FF D4 06 D0 26 A0
C790 CD FF D1 A2 CD FF D0 D7 60 C7 DE E0 FF B3 A0 0B
C7A0 00 B4 BB 24 DE D6 FF 23 DE C2 FF B3 A0 0B 00 B4
C7B0 BB 85 D0 DE C7 FF 85 CE 40 D6 DA C7 04 D0 24 D1
C7C0 B3 03 D0 23 D1 D3 D4 81 D0 D0 85 D0 D1 B3 81 CE
C7D0 D0 85 CE D1 D3 D4 A0 F3 FF D0 A2 F3 FF A0 0B 00
C7E0 B3 A0 F3 FF B4 C6 D7 BC C7 8E FF 00 DE C2 FF B3
C7F0 DE E0 FF B3 62 A0 0B 00 B3 AA 8E 7C AA 8C 7C 68
C800 E9 E6 EE 10 CF 

Function $C6DE (C2 FF)

C6E3 DE E0 FF
C6E6 22
C6E7 DE D6 FF
C6EA 21
C6EB DE C2 FF
C6EE 85 D4
C6F0 DE C7 FF
C6F3 85 D2
C6F5 DE F6 FF
C6F8 26

C6F9 3D
C6FA DE F4 FF
C6FD B3
C6FE E9 AE C6 04 / Call $C6AE
C702 A2 CD FF
C705 B3
C706 A0 0B 00
C709 B4
C70A BC
C70B A2 CC FF

C70E D6 41 C7

Loop:
C711 02
C712 D0
C713 2D
C714 D1
C715 B3
C716 89 68
C718 D4
C719 01
C71A D0
C71B 21
C71C D1
C71D B3
C71E 89 68
C720 D4

C721 81 D4
C723 D0
C724 85 D4
C726 D1
C727 B3
C728 A5 94 7C    / $7C94 (Text color)
C72B 56
C72C BD
C72D 8B 2C DB
C730 D4

C731 81 D2
C733 D0
C734 85 D2
C736 D1
C737 B3
C738 A5 94 7C    / $7C94 (Text color)
C73B 56
C73C 8B 2C DB
C73F DB
C740 D4

C741 A0 CC FF
C744 D1
C745 A2 CC FF
C748 D0
C749 50
C74A C8
C74B D7 11 C7

C74E DE F6 FF
C751 26

C752 A5 94 7C    / $7C94 - Text color
C755 56
C756 BD
C757 8B 2C DB
C75A A2 F2 FF
C75D D6 8F C7

C760 02
C761 D0
C762 22
C763 D1
C764 B3

C78F

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C760 02 D0 22 D1 B3 06 D3 D2 8F 54 D4 01 D0 21 D1 B3
C770 06 D3 D2 8F 55 D4 81 D4 D0 85 D4 D1 B3 A0 F2 FF
C780 D4 81 D2 D0 85 D2 D1 B3 A0 F2 FF D4 06 D0 26 A0
C790 CD FF D1 A2 CD FF D0 D7 60 C7 DE E0 FF B3 A0 0B
C7A0 00 B4 BB 24 DE D6 FF 23 DE C2 FF B3 A0 0B 00 B4
C7B0 BB 85 D0 DE C7 FF 85 CE 40 D6 DA C7 04 D0 24 D1
C7C0 B3 03 D0 23 D1 D3 D4 81 D0 D0 85 D0 D1 B3 81 CE
C7D0 D0 85 CE D1 D3 D4 A0 F3 FF D0 A2 F3 FF A0 0B 00
C7E0 B3 A0 F3 FF B4 C6 D7 BC C7 8E FF 00 DE C2 FF B3
C7F0 DE E0 FF B3 62 A0 0B 00 B3 AA 8E 7C AA 8C 7C 68
C800 E9 E6 EE 10 CF 
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C800                20 D1 E4 00 00 60 6F E9 E6 EE 04
C810 D7 0A C8 61 6F E9 E6 EE 04 D7 0A C8 60 6F E9 E6
C820 EE 04 D7 2E C8 61 6F E9 E6 EE 04 D8 1C C8 CF 

Function $C805 (00 00) -> Wait for no controller input then controller input

C80A 60
C80B 6F
C80C E9 E6 EE 04 / Call $EEE6 -> Sysop 0x0F: Get PAD1 input
C810 D7 0A C8

C813 61
C814 6F
C815 E9 E6 EE 04 / Call $EEE6 -> Sysop 0x0F: Get PAD2 input

C819 D7 0A C8

C81C 60
C81D 6F
C81E 6F E9 E6 EE / Call $EEE6 -> Sysop 0x0F: Get PAD1 input
C822 D7 2E C8

C825 61
C826 6F
C827 E9 E6 EE 04 / Call $EEE6 -> Sysop 0x0F: Get PAD2 input
C82B D8 1C C8

C82E CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C820                                              20
C830 D1 E4 FE FF 0C D8 43 C8 0C D1 52 B9 B3 6F E9 E6
C840 EE 04 CF 60 6F E9 E6 EE 04 2B 0B D8 52 C8 0B D6
C850 58 C8 61 6F E9 E6 EE 04 CF 

Function $C82F (FE FF) -> Get controller input
Args:
<0C> If 0, check both controllers (PAD1 then PAD2)
     Else check that controler number

C834 0C
C835 D8 43 C8

not PAD1:
	C838 0C
	C839 D1
	C83A 52
	C83B B9
	C83C B3
	C83D 6F
	C83E E9 E6 EE 04 / Call $EEE6 -> Sysop 0x0F
	C842 CF

PAD1:
	C843 60
	C844 6F
	C845 E9 E6 EE 04
	C849 2B

	
C84A 0B
C84B D8 52 C8

Input:
C84E	0B
C84F	D6 58 C8

No input:
C852	61
C853	6F
C854	E9 E6 EE 04

C858 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C860 C8 6E E9 E6 EE 02 0C D1 2C D0 D7 61 C8 CF 

Function $C859 (00 00)

C85E D6 66 C8

C861	6E
C862	E9 E6 EE 02

C866 0C
C867 D1
C868 2C

C869 D0
C86A D7 61 C8

C86D CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C860                                           20 D1
C870 E4 00 00 A5 8A 7C D7 81 C8 8E E0 00 61 3C D6 89
C880 C8 8E E0 00 61 0C 8F FC B3 A4 8C 7C 53 BD B3 60
C890 69 E9 E6 EE 0C CF 

Function $C86E (00 00)

C873 A5 8A 7C     / $7C8A
C876 D7 81 C8

C879	8E E0 00
C87C	61
C87D	3C
C87E	D6 89 C8

C881	8E E0 00
C884	61
C885	0C
C886	8F FC
C888	B3

C889 A4 8C 7C	 / $7C78C
C88C 53
C88D BD
C88E B3
C88F 60
C890 69
C891 E9 E6 EE 0C / Call $EEE6 (Sysop 0x09)

C895 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C890                   20 D1 E4 00 00 A5 89 7C 8C FF
C8A0 00 C1 D8 B2 C8 41 A9 89 7C AC 58 C9 8A FF 00 A9
C8B0 89 7C CF 

Function $C896 (00 00)

C89B A5 89 7C    / $7C89
C89E 8C FF 00    
C8A1 C1
C8A2 D8 B2 C8

C8A5	41
C8A6	A9 89 7C    / $7C89
C8A9	AC 58 C9    / Call $C958
C8AC	8A FF 00
C8AF	A9 89 7C    / $7C89

C8B2 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C8B0          20 D1 E4 FC FF A4 5E 78 D8 E7 C8 60 AA
C8C0 5E 78 E9 34 C2 04 2B 61 AA 5E 78 E9 34 C2 04 2A
C8D0 8E FF 00 8E 84 7C 8E 83 7C 61 61 3A 3B 8D 18 E9
C8E0 E6 EE 10 41 A9 89 7C A4 60 78 D8 16 C9 60 AA 60
C8F0 78 E9 34 C2 04 2B 61 AA 60 78 E9 34 C2 04 2A 8E
C900 FF 00 8E 86 7C 8E 85 7C 61 61 3A 3B 8D 18 E9 E6
C910 EE 10 41 A9 89 7C CF 

Function $C8B3 (FC FF)
C8B8 A4 5E 78    / $785E
C8BB D8 E7 C8

if (?)
	C8BE 60
	C8BF AA 5E 78    / $785E
	C8C2 E9 34 C2 04 / Call $C234
	C8C6 2B          / x-position of province

	C8C7 61
	C8C8 AA 5E 78    / $785E
	C8CB E9 34 C2 04 / Call $C234
	C8CF 2A          / y-position of province

	C8D0 8E FF 00
	C8D3 8E 84 7C    / $7C84
	C8D6 8E 83 7C    / $7C83
	C8D9 61
	C8DA 61
	C8DB 3A
	C8DC 3B
	C8DD 8D 18
	C8DF E9 E6 EE 10 / Call $EEE6

	C8E3 41
	C8E4 A9 89 7C    / $7C89

C8E7 A4 60 78    / $7860
C8EA D8 16 C9

C8ED	60
C8EE	AA 60 78    / $7860
C8F1	E9 34 C2 04 / Call $C234
C8F5	2B

C8F6	61
C8F7	AA 60 78    / $7860
C8FA	E9 34 C2 04 / Call $C234
C8FE	2A

C8FF	8E FF 00
C902	8E 86 7C    / $7C86
C905	8E 85 7C	/ $7C85
C908	61
C909	61
C90A	3A
C90B	3B
C90C	8D 18
C90E	E9 E6 EE 10
C912	41
C913	A9 89 7C    / $7C89

C916 CF          / Return
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C910                      20 D1 E4 FC FF 0C D8 57 C9
C920 60 3C E9 34 C2 04 2B 61 3C E9 34 C2 04 2A A5 89
C930 7C D8 4B C9 A0 0D 00 D2 8C 84 7C BB D3 B3 A0 0D
C940 00 D2 8C 83 7C BB D3 B3 D6 4E C9 68 8D 38 61 61
C950 3A 3B 67 E9 E6 EE 0E CF 

Function $C917 (FC FF)
Args:
<0C> Province
+0D  

C91C 0C
C91D D8 57 C9

C920	60
C921	3C
C922	E9 34 C2 04 / Call $C234
C926	2B
C927	61
C928	3C
C929	E9 34 C2 04 / Call $C234
C92D	2A
C92E	A5 89 7C    / $7C89
C931	D8 4B C9

C934	   A0 0D 00
C937	   D2
C938	   8C 84 7C    / $7C84
C93B	   BB
C93C	   D3
C93D	   B3
C93E	   A0 0D 00
C941	   D2
C942	   8C 83 7C
C945	   BB
C946	   D3
C947	   B3
C948	   D6 4E C9

C94B       68
C94C	   8D 38

C94E	61
C94F	61
C950	3A
C951	3B
C952	67
C953	E9 E6 EE 0E / Call $EEE6

C957 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C950                         20 D1 E4 00 00 A5 89 7C
C960 8C FF 00 C1 D8 80 C9 60 AA 5E 78 E9 17 C9 04 61
C970 AA 60 78 E9 17 C9 04 41 CD A5 89 7C DC A9 89 7C
C980 CF 

Function $C958 (00 00)

C95D A5 89 7C    / $7C89
C960 8C FF 00    /
C963 C1
C964 D8 80 C9

C967	60
C968	AA 5E 78    / $785E
C96B	E9 17 C9 04 / Call $C917
C96F	61
C970	AA 60 78    / $7860
C973	E9 17 C9 04 / Call $C917
C977	41
C978	CD
C979	A5 89 7C
C97C	DC          
C97D	A9 89 7C    / EOR (toggle bit 0)

C980 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C980    20 D1 E4 FE FF D6 9C C9 60 E9 2F C8 02 2B D8
C990 94 C9 0B CF 6E E9 E6 EE 02 0C D1 2C 0C 50 C8 D7
C9A0 89 C9 40 CF 

Function $C981 (FE FF)
Wait <0C> frames for controller input to proceed

C986 D6 9C C9

C989	60
C98A	E9 2F C8 02 / Call $C82F -> Check PAD1/PAD2
C98E	2B
C98F	D8 94 C9

C992       0B
C993	   CF

C994	6E
C995	E9 E6 EE 02

C999	0C
C99A	D1
C99B	2C

C99C 0C
C99D 50
C99E C8
C99F D7 89 C9

C9A2 40
C9A4 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C9A0             20 D1 E4 FE FF AC 58 C9 A4 8E 7C 53
C9B0 BD D1 B3 E9 6E C8 02 8D 14 E9 81 C9 02 2B 8E F8
C9C0 00 E9 6E C8 02 0B D7 D3 C9 8D 14 E9 81 C9 02 2B
C9D0 D8 A9 C9 0B CF D6 A9 C9 

Function $C9A4 (FE FF)

C9A9 AC 58 C9    / Call $C958

C9AC A4 8E 7C    / $7C8E
C9AF 53
C9B0 BD
C9B1 D1
C9B2 B3
C9B3 E9 6E C8 02 / Call $C86E

C9B7 8D 14
C9B9 E9 81 C9 02 / Call $C981
C9BD 2B

C9BE 8E F8 00
C9C1 E9 6E C8 02 / Call $C86E

C9C5 0B
C9C6 D7 D3 C9

C9C9	8D 14
C9CB	E9 81 C9 02 / Call $C981
C9CF	2B
C9D0	D8 A9 C9

C9D3 0B D5
C9D4 CF

C9D5 D6 A9 C9
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
C9D0                         20 D1 E4 DB FF 3D 3C 8E
C9E0 CE DD E9 8C C6 06 0D 2A 41 D6 EE C9 09 D0 29 4A
C9F0 CD 0A B6 2A D7 EC C9 40 2A 0D 24 D6 17 CA DE E3
CA00 FF B3 09 1A BC B4 BB B3 04 5A B9 8F 30 D4 4A CD
CA10 04 B6 24 0A D0 2A D1 0A 19 C2 D7 FE C9 40 2A DE
CA20 EA FF B3 0A B4 BB B3 89 30 D4 0A D0 2A 0A 56 C2
CA30 D7 1F CA DE EA FF B3 09 B4 BB B3 40 D4 A4 8C 7C
CA40 53 BD 28 A4 8E 7C 53 BD D1 27 40 85 DC 85 DE 25
CA50 2B 85 E0 26 A4 8C 7C 85 E2 41 A2 DB FF D6 C4 CB
CA60 AC 58 C9 81 E2 A8 8C 7C DE EA FF B3 E9 4A C4 02
CA70 8E E3 00 61 07 78 B3 06 53 BD 18 BB B3 60 69 E9
CA80 E6 EE 0C 63 E9 59 C8 02 81 DE 51 C0 D8 AF CA 81
CA90 DC D7 AF CA 4A 2A 60 E9 2F C8 02 83 E0 C1 D7 AF
CAA0 CA 6E E9 E6 EE 02 0A D1 2A 0A 50 C4 D7 96 CA 81
CAB0 DE 51 C0 D8 B9 CA 41 85 DC 60 E9 2F C8 02 85 E0
CAC0 D9 06 00 01 00 DD CA 02 00 1F CB 10 00 27 CB 20
CAD0 00 51 CB 40 00 77 CB 80 00 B1 CB BF CB DE EA FF
CAE0 B3 E9 84 CC 02 2B 41 25 0B 1D C8 D7 F4 CA 0B 1C
CAF0 C6 D8 C4 CB 40 25 2B 40 2A DE EA FF B3 0A B4 BB
CB00 B3 89 30 D4 0A D0 2A 0A 56 C2 D7 F9 CA DE EA FF
CB10 B3 09 B4 BB B3 40 D4 6A E9 59 C8 02 D6 C4 CB 41
CB20 25 89 FF 2B D6 59 CA DE EA FF B3 06 B4 BB B3 D3
CB30 D0 D4 DE EA FF B3 06 B4 BB D3 8B 39 C4 D8 4B CB
CB40 DE EA FF B3 06 B4 BB B3 89 30 D4 41 85 DE D6 59
CB50 CA DE EA FF B3 06 B4 BB B3 D3 D1 D4 DE EA FF B3
CB60 06 B4 BB D3 8B 30 C2 D8 4B CB DE EA FF B3 06 B4
CB70 BB B3 89 39 D6 4A CB 06 50 C4 D8 83 CB 06 D1 26
CB80 D6 AD CB A0 DB FF D8 99 CB 39 DE EA FF B3 DE E4
CB90 FF B3 E9 B8 F3 06 D6 A4 CB 8D 30 39 DE EA FF B3
CBA0 E9 95 F3 06 41 CD A0 DB FF DC A2 DB FF 41 D6 C2
CBB0 CB 09 D1 B3 06 B4 C2 D8 AD CB 06 D0 D6 7F CB 40
CBC0 85 DC 85 DE 05 D8 60 CA 60 E9 2F C8 02 D7 C8 CB
CBD0 60 60 8E F8 00 8E F8 00 60 69 E9 E6 EE 0C 0B CF

Function $C9D8 (DB FF)
Args:
<0C> minimum?
<0D> maximum?

C9DD 3D
C9DE 3C
C9DF 8E CE DD    / $DDCE "(%d-%d)?"
C9E2 E9 8C C6 06 / Call $C68C

C9E6 0D
C9E7 2A
C9E8 41
C9E9 D6 EE C9

C9EC	09
C9ED	D0

C9EE 29
C9EF 4A
C9F0 CD
C9F1 0A
C9F2 B6
C9F3 2A
C9F4 D7 EC C9

C9F7 40
C9F8 2A
C9F9 0D
C9FA 24
C9FB D6 17 CA

C9FE	DE E3 FF
CA01	B3
CA02	09
CA03	1A
CA04	BC
CA05	B4
CA06	BB
CA07	B3
CA08	04
CA09	5A
CA0A	B9
CA0B	8F 30
CA0D	D4
CA0E	4A
CA0F	CD
CA10	04
CA11	B3
CA12	09
CA13	1A
CA14	D0
CA15	2A
CA16	D1

CA17 0A
CA18 19
CA19 C2
CA1A D7 FE C9

CA1D 40
CA1E 2A
CA1F DE EA FF
CA2

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
CA20 EA FF B3 0A B4 BB B3 89 30 D4 0A D0 2A 0A 56 C2
CA30 D7 1F CA DE EA FF B3 09 B4 BB B3 40 D4 A4 8C 7C
CA40 53 BD 28 A4 8E 7C 53 BD D1 27 40 85 DC 85 DE 25
CA50 2B 85 E0 26 A4 8C 7C 85 E2 41 A2 DB FF D6 C4 CB
CA60 AC 58 C9 81 E2 A8 8C 7C DE EA FF B3 E9 4A C4 02
CA70 8E E3 00 61 07 78 B3 06 53 BD 18 BB B3 60 69 E9
CA80 E6 EE 0C 63 E9 59 C8 02 81 DE 51 C0 D8 AF CA 81
CA90 DC D7 AF CA 4A 2A 60 E9 2F C8 02 83 E0 C1 D7 AF
CAA0 CA 6E E9 E6 EE 02 0A D1 2A 0A 50 C4 D7 96 CA 81
CAB0 DE 51 C0 D8 B9 CA 41 85 DC 60 E9 2F C8 02 85 E0
CAC0 D9 06 00 01 00 DD CA 02 00 1F CB 10 00 27 CB 20
CAD0 00 51 CB 40 00 77 CB 80 00 B1 CB BF CB DE EA FF
CAE0 B3 E9 84 CC 02 2B 41 25 0B 1D C8 D7 F4 CA 0B 1C
CAF0 C6 D8 C4 CB 40 25 2B 40 2A DE EA FF B3 0A B4 BB
CB00 B3 89 30 D4 0A D0 2A 0A 56 C2 D7 F9 CA DE EA FF
CB10 B3 09 B4 BB B3 40 D4 6A E9 59 C8 02 D6 C4 CB 41
CB20 25 89 FF 2B D6 59 CA DE EA FF B3 06 B4 BB B3 D3
CB30 D0 D4 DE EA FF B3 06 B4 BB D3 8B 39 C4 D8 4B CB
CB40 DE EA FF B3 06 B4 BB B3 89 30 D4 41 85 DE D6 59
CB50 CA DE EA FF B3 06 B4 BB B3 D3 D1 D4 DE EA FF B3
CB60 06 B4 BB D3 8B 30 C2 D8 4B CB DE EA FF B3 06 B4
CB70 BB B3 89 39 D6 4A CB 06 50 C4 D8 83 CB 06 D1 26
CB80 D6 AD CB A0 DB FF D8 99 CB 39 DE EA FF B3 DE E4
CB90 FF B3 E9 B8 F3 06 D6 A4 CB 8D 30 39 DE EA FF B3
CBA0 E9 95 F3 06 41 CD A0 DB FF DC A2 DB FF 41 D6 C2
CBB0 CB 09 D1 B3 06 B4 C2 D8 AD CB 06 D0 D6 7F CB 40
CBC0 85 DC 85 DE 05 D8 60 CA 60 E9 2F C8 02 D7 C8 CB
CBD0 60 60 8E F8 00 8E F8 00 60 69 E9 E6 EE 0C 0B CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
CBE0 20 D1 E4 00 00 3C E9 4A C4 02 3E 3D E9 D8 C9 04
CBF0 CF 

Function $CBE0 (00 00)

CBE5 3C
CBE6 E9 4A C4 02 / Call $C44A (print string)
CBEA 3E
CBEB 3D
CBEC E9 D8 C9 04 / Call $C9D8 
CBF0 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
CBF0    20 D1 E4 00 00 A0 0B 00 D7 03 CC A4 8E 7C D0
CC00 A8 8E 7C 8E D7 DD E9 4A C4 02 60 E9 2F C8 02 D7
CC10 0A CC AC A4 C9 D9 02 00 40 00 22 CC 80 00 40 CC
CC20 12 CC 8E DE DD E9 4A C4 02 60 E9 2F C8 02 D7 29
CC30 CC A0 0B 00 D7 3E CC A4 8E 7C D1 A8 8E 7C 41 CF
CC40 8E E0 DD E9 4A C4 02 60 E9 2F C8 02 D7 47 CC A0
CC50 0B 00 D7 5C CC A4 8E 7C D1 A8 8E 7C 40 CF 

Function $CBF1 (00 00)
Args:
+0B  ?

CBF6 A0 0B 00
CBF9 D7 03 CC

CBFC A4 8E 7C    / $7C8E
CBFF D0
CC00 A8 8E 7C

CC03 8E D7 DD    / $DDD7 "(Y/N)?"
CC06 E9 4A C4 02 / Call $C44A -> Print

CC0A 60
CC0B E9 2F C8 02 / Call $C82F -> Check PAD1/PAD2
CC0F D7 0A CC    / Wait until no input

CC12 AC A4 C9    / Call $C9A4
CC15 D9 02 00
     40 00 22 CC
	 80 00 40 CC
	       12 CC / Loop if no acceptable input

Left		   
CC22 8E DE DD    / "Y"
CC25 E9 4A C4 02 / Call $C44A -> Print

CC29 60
CC2A E9 2F C8 02 / Call $C82F -> Check PAD1/PAD2
CC2E D7 29 CC    / Wait until no input

CC31 A0 0B 00
CC34 D7 3E CC

	CC37 A4 8E 7C
	CC3A D1
	CC3B A8 8E 7C    / $7C8E

CC3E 41
CC3F CF          / Return 1

Right
CC40 8E E0 DD    / $DDE0 "N"
CC43 E9 4A C4 02 / Call $C44A -> Print

CC47 60
CC48 E9 2F C8 02 / Call $C82F -> Get PAD1/PAD2 input
CC4C D7 47 CC    / Wait for no input

CC4F A0 0B 00
CC52 D7 5C CC

	CC55 A4 8E 7C
	CC58 D1
	CC59 A8 8E 7C

CC5C 40
CC5D CF          / Return 0
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
CC50                                           20 D1
CC60 E4 00 00 61 E9 F1 CB 02 CF 

Function $CC5E (00 00)

CC63 61
CC64 E9 F1 CB 02 / Call $CBF1 -> Ask player Y/N

CC68 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
CC60                            20 D1 E4 00 00 60 E9
CC70 F1 CB 02 CF 

Function $CC69 (00 00)

CC6E 60
CC6F E9 F1 CB 02 / Call $CBF1 -> Ask player Y/N

CC73 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
CC70             20 D1 E4 00 00 8E E2 DD E9 4A C4 02
CC80 AC 5E CC CF 

Function $CC74 (00 00)

CC79 8E E2 DD    / "OK"
CC7C E9 4A C4 02 / Call $C44A -> Print

CC80 AC 5E CC    / Call $CC5E

CC83 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
CC80             20 D1 E4 FA FF 0C 2B 41 29 D6 93 CC
CC90 0B D0 2B 0B D3 8B 20 C0 D7 90 CC 0B D3 59 C0 D7
CCA0 90 CC 0B D3 D9 02 00 2D 00 B1 CC 2B 00 B4 CC B7
CCB0 CC 89 FF 29 0B D0 2B 40 2A 0B D3 B3 89 30 B4 C3
CCC0 D8 D7 CC 0B D3 8B 39 C3 D8 D7 CC 0A 8C CC 0C C5
CCD0 D8 DB CC 8A F8 7F 2A 0A 19 B5 CF 0A 5A B5 B3 0B
CCE0 D0 2B D1 D3 B4 BB 8F D0 D6 B8 CC 

Function $CC84 (FA FF)

CC89 0C
CC8A 2B

CC8B 41
CC8C 29

CC8D D6 93 CC

Loop:
CC90 0B
CC91 D0
CC92 2B

Bounds check:
CC93 0B
CC94 D3
CC95 8B 20
CC97 C0
CC98 D7 90 CC

CC9B 0B
CC9C D3
CC9D 59
CC9E C0
CC9F D7 90 CC

CCA2 0B
CCA3 D3
CCA4 D9 02 00
     2D 00 B1 CC
	 2B 00 B4 CC
	       B7 CC

CCB1 89 FF
CCB3 29

CCB4 0B
CCB5 D0
CCB6 2B

CCB7 40
CCB8 2A
CCB9 0B
CCBA D3
CCBB B3
CCBC 89 30
CCBE B4
CCBF C3
CCC0 D8 D7 CC

CCC3 0B
CCC4 D3
CCC5 8B 39
CCC7 C3
CCC8 D8 D7 CC

CCCB 0A
CCCC 8C CC 0C
CCCF C5
CCD0 D8 DB CC

CCD3 8A F8 7F    / $7FF8
CCD6 2A

CCD7 0A
CCD8 19
CCD9 B5
CCDA CF

CCDB 0A
CCDC 5A
CCDD B5
CCDE B3
CCDF 0B
CCE0 D0
CCE1 2B
CCE2 D1
CCE3 D3
CCE4 B4
CCE5 BB
CCE6 8F D0
CCE8 D6 B8 CC
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
CCE0                                  20 D1 E4 00 00
CCF0 0D D1 2D D0 D8 06 CD 60 E9 2F C8 02 1C C1 D8 07
CD00 CD 6C E9 59 C8 02 CF 6E E9 E6 EE 02 D6 F0 CC 

Function $CCEB (00 00)
Wait <02> frames for input or until <0C> is pressed.
Args:
<0C>
<0D>

CCF0 0D
CCF1 D1
CCF2 2D
CCF3 D0
CCF4 D8 06 CD

CCF7	60
CCF8	E9 2F C8 02 / Call $C82F -> Check PAD1/PAD2 input
CCFC	1C
CCFD	C1
CCFE	D8 07 CD

CD01	   6C
CD02	   E9 59 C8 02 / Call $C859

CD06 	CF

CD07	6E
CD08	E9 E6 EE 02 / Call $EEE6 (Sysop 0x0E)

CD0C D6 F0 CC
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
CD00                                              20
CD10 D1 E4 EC FF 46 23 0E 2B 0F 2A 41 29 40 24 27 0D
CD20 83 17 B8 26 0D 83 17 BA 25 3C E9 4A C4 02 04 D7
CD30 39 CD 03 D1 23 D0 D7 3E CD AC 58 C9 46 23 8E E1
CD40 00 61 A5 8A 7C D8 4C CD 44 D6 4D CD 40 B3 0A 53
CD50 BD D1 B4 BC B3 0B 53 BD B3 60 69 E9 E6 EE 0C 81
CD60 13 D8 69 CD 81 13 D6 6A CD 41 B3 0B 1E BC B4 B8
CD70 83 17 B5 B3 81 15 D8 7E CD 81 15 D6 7F CD 41 B3
CD80 0A 1F BC B4 B8 D0 22 B4 BB 28 04 D8 94 CD 66 37
CD90 E9 EB CC 04 04 27 60 E9 2F C8 02 24 D9 06 00 01
CDA0 00 B9 CD 02 00 D6 CD 10 00 F9 CD 20 00 2B CE 40
CDB0 00 36 CE 80 00 77 CE 2E CD 8E E1 00 61 8E F8 00
CDC0 60 60 69 E9 E6 EE 0C 61 E9 58 C9 02 60 E9 2F C8
CDD0 02 D7 CC CD 08 CF 81 19 D8 2E CD 8E E1 00 61 8E
CDE0 F8 00 60 60 69 E9 E6 EE 0C 61 E9 58 C9 02 60 E9
CDF0 2F C8 02 D7 EE CD 89 FF CF 0A 1F C8 D8 08 CE 81
CE00 15 CD 0A BC 2A D6 2E CD 09 16 C7 D8 13 CE 81 17
CE10 D6 14 CE 05 D1 83 15 B5 1F D6 27 CE 08 D0 1D C7
CE20 D8 32 CE 81 15 CD 0A BB D6 04 CE 02 83 17 C6 D7
CE30 1C CE 0F D6 04 CE 09 51 C8 D8 48 CE 09 D1 29 81
CE40 13 CD 0B BC 2B D6 2E CD 05 D8 52 CE 02 15 C8 D8
CE50 56 CE 06 D6 58 CE 06 D0 29 09 D1 83 13 B5 1E D6
CE60 73 CE 02 15 C7 D8 83 CE 05 D8 83 CE 09 D0 29 81
CE70 13 CD 0B BB D6 44 CE 09 16 C6 D7 6C CE 09 16 C0
CE80 D7 62 CE 0E 2B 41 29 D6 2E CD 

Function $CD0F (EC FF)

CD14 46
CD15 23

CD16 0E
CD17 2B

CD18 0F
CD19 2A

CD1A 41
CD1B 29

CD1C 40
CD1D 24
CD1E 27

CD1F 0D
CD20 83 17
CD22 B8
CD23 26

CD24 0D
CD25 83 17
CD27 BA
CD28 25

CD29 3C
CD2A E9 4A C4 02 / Call $C44A (Print)

CD2E 04
CD2F D7 39 CD

CD32 03
CD33 D1
CD34 23
CD35 D0
CD36 D7 3E CD

CD39 AC 58 C9    / Call $C958
CD3C 46
CD3D 23

CD3E 8E E1 00
CD41 61
CD42 A5 8A 7C    / $7C8A
CD45 D8 4C CD

CD48 44
CD49 D6 4D CD

CD4C 40

CD4D B3
CD4E 0A
CD4F 53
CD50 BD
CD51 D1
CD52 B4

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
CD40 00 61 A5 8A 7C D8 4C CD 44 D6 4D CD 40 B3 0A 53
CD50 BD D1 B4 BC B3 0B 53 BD B3 60 69 E9 E6 EE 0C 81
CD60 13 D8 69 CD 81 13 D6 6A CD 41 B3 0B 1E BC B4 B8
CD70 83 17 B5 B3 81 15 D8 7E CD 81 15 D6 7F CD 41 B3
CD80 0A 1F BC B4 B8 D0 22 B4 BB 28 04 D8 94 CD 66 37
CD90 E9 EB CC 04 04 27 60 E9 2F C8 02 24 D9 06 00 01
CDA0 00 B9 CD 02 00 D6 CD 10 00 F9 CD 20 00 2B CE 40
CDB0 00 36 CE 80 00 77 CE 2E CD 8E E1 00 61 8E F8 00
CDC0 60 60 69 E9 E6 EE 0C 61 E9 58 C9 02 60 E9 2F C8
CDD0 02 D7 CC CD 08 CF 81 19 D8 2E CD 8E E1 00 61 8E
CDE0 F8 00 60 60 69 E9 E6 EE 0C 61 E9 58 C9 02 60 E9
CDF0 2F C8 02 D7 EE CD 89 FF CF 0A 1F C8 D8 08 CE 81
CE00 15 CD 0A BC 2A D6 2E CD 09 16 C7 D8 13 CE 81 17
CE10 D6 14 CE 05 D1 83 15 B5 1F D6 27 CE 08 D0 1D C7
CE20 D8 32 CE 81 15 CD 0A BB D6 04 CE 02 83 17 C6 D7
CE30 1C CE 0F D6 04 CE 09 51 C8 D8 48 CE 09 D1 29 81
CE40 13 CD 0B BC 2B D6 2E CD 05 D8 52 CE 02 15 C8 D8
CE50 56 CE 06 D6 58 CE 06 D0 29 09 D1 83 13 B5 1E D6
CE60 73 CE 02 15 C7 D8 83 CE 05 D8 83 CE 09 D0 29 81
CE70 13 CD 0B BB D6 44 CE 09 16 C6 D7 6C CE 09 16 C0
CE80 D7 62 CE 0E 2B 41 29 D6 2E CD 
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
CE80                               20 D1 E4 FD FF A4
CE90 5B 78 2B 0E 1F B5 8C C0 03 C1 D8 D6 CE 0E 1F B5
CEA0 D2 1B BB 8C 00 80 C9 A2 FD FF D7 0D CF 63 60 63
CEB0 E9 E6 EE 06 8E FF 00 0E 1F B5 1B BB B3 3B 3F 3E
CEC0 3D 3C 8D 18 E9 E6 EE 10 61 60 63 E9 E6 EE 06 0E
CED0 1F B5 D2 D6 05 CF 0E 1F B5 1B BB 8C 00 80 C9 A2
CEE0 FD FF D7 0D CF 63 60 63 E9 E6 EE 06 8E FF 00 3B
CEF0 60 3F 3E 3D 3C 8D 18 E9 E6 EE 10 61 60 63 E9 E6
CF00 EE 06 0E 1F B5 CD A4 5B 78 BB A8 5B 78 A0 FD FF
CF10 D8 2B CF 60 60 60 66 E9 E6 EE 08 6A 6A E9 1D C4
CF20 04 8E E6 DD E9 4A C4 02 D6 28 CF CF 

Function $CE8A (FD FF)
Args:
<0C>
<0D>
<0E>
<0F>

CE8F A4 5B 78    / $785B
CE92 2B

CE93 0E
CE94 1F
CE95 B5
CE96 8C C0 03
CE99 C1
CE9A D8 D6 CE

CE9D	0E
CE9E	1F
CE9F	B5
CEA0	D2
CEA1	1B
CEA2	BB
CEA3	8C 00 80
CEA6	C9
CEA7	A2 FD FF
CEAA	D7 0D CF

CEAD	   63
CEAE	   60
CEAF	   63
CEB0	   E9 E6 EE 06 / Call $EEE6 -> Sysop 0x03: Set RAM bank 0 to 3
CEB4	   8E FF 00
CEB7	   0E
CEB8	   1F
CEB9	   B5
CEBA	   1B
CEBB	   BB
CEBC	   B3
CEBD	   3B
CEBE	   3F
CEBF	   3E
CEC0	   3D
CEC1	   3C
CEC2	   8D 18
CEC4	   E9 E6 EE 10 / Call $EEE6 -> Sysop 0x18

CED6

CF0D 

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
CEB0 E9 E6 EE 06 8E FF 00 0E 1F B5 1B BB B3 3B 3F 3E
CEC0 3D 3C 8D 18 E9 E6 EE 10 61 60 63 E9 E6 EE 06 0E
CED0 1F B5 D2 D6 05 CF 0E 1F B5 1B BB 8C 00 80 C9 A2
CEE0 FD FF D7 0D CF 63 60 63 E9 E6 EE 06 8E FF 00 3B
CEF0 60 3F 3E 3D 3C 8D 18 E9 E6 EE 10 61 60 63 E9 E6
CF00 EE 06 0E 1F B5 CD A4 5B 78 BB A8 5B 78 A0 FD FF
CF10 D8 2B CF 60 60 60 66 E9 E6 EE 08 6A 6A E9 1D C4
CF20 04 8E E6 DD E9 4A C4 02 D6 28 CF CF 
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
CF20                                     20 D1 E4 FE
CF30 FF A4 5B 78 2B 0E 1F B5 8C C0 03 C1 D8 69 CF 0E
CF40 1F B5 D2 CD A4 5B 78 BC A8 5B 78 63 60 63 E9 E6
CF50 EE 06 8E FF 00 0E 1F B5 B3 0B B4 BC B3 0E 1F B5
CF60 D2 B3 0B B4 BC B3 D6 87 CF 0E 1F B5 CD A4 5B 78
CF70 BC A8 5B 78 63 60 63 E9 E6 EE 06 8E FF 00 0E 1F
CF80 B5 B3 0B B4 BC B3 60 3F 3E 3D 3C 68 E9 E6 EE 10
CF90 61 60 63 E9 E6 EE 06 CF 

Function $CF2C (FE FF)
Print graphic ???

Args:
<0C> x-pos
<0D> y-pos
<0E> width
<0F> height

CF31 A4 5B 78    / $785B
CF34 2B

CF35 0E
CF36 1F
CF37 B5
CF38 8C C0 03
CF3B C1
CF3C D8 69 CF

CF3F	0E
CF40	1F
CF41	B5
CF42	D2
CF43	CD
CF44	A4 5B 78
CF47	BC
CF48	A8 5B 78
CF4B	63
CF4C	60
CF4D	63
CF4E	E9 E6 EE 06 / Call $EEE6 - Sysop 0x03 (set RAM bank 0 to 3)
CF52	8E FF 00
CF55	0E
CF56	1F
CF57	B5
CF58	B3
CF59	0B
CF5A	B4
CF5B	BC
CF5C	B3
CF5D	0E
CF5E	1F
CF5F	B5
CF60	D2
CF61	B3
CF62	0B
CF63	B4
CF64	BC
CF65	B3
CF66	D6 87 CF

CF69	0E
CF6A	1F
CF6B	B5
CF6C	CD
CF6D	A4 5B 78
CF70	BC
CF71	A8 5B 78
CF74	63
CF75	60
CF76	63
CF77	E9 E6 EE 06 / Call $EEE6 -> Sysop 0x03: Set RAM bank 0 to 3
CF7B	8E FF 00
CF7E	0E
CF7F	1F
CF80	B5
CF81	B3
CF82	0B
CF83	B4
CF84	BC
CF85	B3
CF86	60

CF87 3F
CF88 3E
CF89 3D
CF8A 3C
CF8B 68
CF8C E9 E6 EE 10 / Call $EEE6 -> Sysop 0x08 (Print graphic)

CF90 61
CF91 60
CF92 63
CF93 E9 E6 EE 06 / Call $EEE6 -> Sysop 0x03: Set RAM bank 0 to 1

CF97 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
CF90                         20 D1 E4 00 00 6E E9 E6
CFA0 EE 02 61 A0 0B 00 B3 61 E9 E6 EE 06 CF 

Function $CF98 (00 00)
Set nametable mapping to <00> and Extended RAM mode to 1

Args:
+0B 

CF9D 6E
CF9E E9 E6 EE 02 / Call $EEE6 -> Sysop 0x0E: Wait 1 frame

CFA2 61
CFA3 A0 0B 00
CFA6 B3
CFA7 61
CFA8 E9 E6 EE 06 / Call $EEE6 -> Sysop 0x01

CFAC CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
CFA0                                        20 D1 E4
CFB0 00 00 8D 1E 8D 20 60 60 E9 8A CE 08 AC 02 D0 8D
CFC0 20 60 E9 64 D6 04 61 E9 98 CF 02 AC F2 E1 0C D8
CFD0 DD CF 3C 8D 20 60 E9 81 D6 06 D6 E2 CF 60 E9 18
CFE0 D2 02 CF 

Function $CFAD (00 00)

CFB2 8D 1E
CFB4 8D 20
CFB6 60
CFB7 60
CFB8 E9 8A CE 08 / Call $CE8A

CFBC AC 02 D0    / Call $D002

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
CFB0 00 00 8D 1E 8D 20 60 60 E9 8A CE 08 AC 02 D0 8D
CFC0 20 60 E9 64 D6 04 61 E9 98 CF 02 AC F2 E1 0C D8
CFD0 DD CF 3C 8D 20 60 E9 81 D6 06 D6 E2 CF 60 E9 18
CFE0 D2 02 CF 
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
CFE0          20 D1 E4 00 00 8D 20 60 E9 64 D6 04 8D
CFF0 1E 8D 20 60 60 E9 2C CF 08 60 E9 98 CF 02 AC 33
D000 D0 CF 

Function $CFE3 (00 00)
CFE8 8D 20
CFEA 60
CFEB E9 64 D6 04 / Call $D664 - Blank out primary palette set

CFEF 8D 1E
CFF1 8D 20
CFF3 60
CFF4 60
CFF5 E9 2C CF 08 / Call $CF2C

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
CFF0 1E 8D 20 60 60 E9 2C CF 08 60 E9 98 CF 02 AC 33
D000 D0 CF 
----------------------------------------------------	
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D000       20 D1 E4 FD FF 8A B0 00 2B 40 A2 FD FF D6
D010 29 D0 A0 FD FF 8C 61 7C BB B3 0B D3 D4 A0 FD FF
D020 D0 A2 FD FF D1 0B D0 2B D1 A0 FD FF 8B 20 C6 D7
D030 12 D0 CF

FUNCTION $D002 (FD FF)
Locs:
+FD  ?
<0B> ?

D007 8A B0 00    / 
D00A 2B          / 
D00B 40          / 
D00C A2 FD FF    / 
D00F D6 29 D0    / 

Loop
	D012 A0 FD FF 
	D015 8C 61 7C    
	D018 BB          
	D019 B3         
	D01A 0B         
	D01B D3          
	D01C D4         

	D01D A0 FD FF   
	D020 D0         
	D021 A2 FD FF 
	D024 D1         

	D025 0B        
	D026 D0         
	D027 2B        
	D028 D1        

Bounds check
	D029 A0 FD FF 
	D02C 8B 20     
	D02E C6         
	D02F D7 12 D0   
	
D032 CF          / Exit

====================================================	
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D030          20 D1 E4 00 00 8E 61 7C 8D 20 60 E9 81
D040 D6 06 CF

Function $D033 (00 00) -> Load palettes at $7C61

D038 8E 61 7C    / Push #$7C61
D03B 8D 20       / Push #$20
D03D 60          / Push #$00
D03E E9 81 D6 06 / Call $D681
====================================================	
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D040          20 D1 E4 FC FF A5 87 7C D8 4F D0 CF 40
D050 D6 9D D0 0C 1D BB D6 92 D0 0B 8C 60 7C BB D3 5F
D060 DA B3 A0 FD FF 54 BD B4 BB A2 FC FF 0B 8C 60 7C
D070 BB D3 B3 A0 FC FF B4 C8 D8 84 D0 0B 8C 60 7C BB
D080 D3 A2 FC FF A0 FC FF B3 0B D1 B3 6A E9 E6 EE 06
D090 0B D1 2B 0B 1C C8 D7 59 D0 A0 FD FF D0 A2 FD FF
D0A0 A0 FD FF 54 C6 D7 53 D0 41 A9 87 7C CF

Function $D043 (FC FF)

D048 A5 87 7C    / $7C87
D04B D8 4F D0

if
	D04E CF

D04F 40
D050 D6 9D D0

Outer Loop:
D053	0C
D054 	1D
D055 	BB
D056 	D6 92 D0

Inner Loop:
D059	   0B
D05A	   8C 60 7C
D05D	   BB
D05E	   D3
D05F	   5F
D060	   DA
D061	   B3
D062	   A0 FD FF
D065	   54
D066	   BD
D067	   B4
D068	   BB
D069	   A2 FC FF
D06C	   0B
D06D	   8C 60 7C / $7C60
D070	   BB
D071	   D3
D072	   B3
D073	   A0 FC FF
D076	   B4
D077	   C8
D078	   D8 84 D0

D07B	   	  0B
D07C		  8C 60 7C
D07F		  BB
D080		  D3
D081	      A2 FC FF

D084	   A0 FC FF
D087	   B3
D088	   0B
D089	   D1
D08A	   B3
D08B	   6A
D08C	   E9 E6 EE 06
D090	   0B
D091	   D1

Inner Loop: Bound check
D092    2B
D093	0B
D094	1C
D095	C8
D096	D7 59 D0

D099 A0 FD FF
D09C D0

Outer Loop: Bound check
D09D A2 FD FF
D0A0 A0 FD FF
D0A3 54
D0A4 C6
D0A5 D7 53 D0

D0A8 41
D0A9 A9 87 7C

D0AC CF
====================================================	
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D0A0                                        20 D1 E4
D0B0 FC FF A5 87 7C D7 B9 D0 CF AC 02 D0 44 D6 0B D1
D0C0 0C 1D BB D6 00 D1 0B 8C 60 7C BB D3 5F DA B3 A0
D0D0 FD FF D1 54 BD B4 BB A2 FC FF 0B 8C 60 7C BB D3
D0E0 B3 A0 FC FF B4 C8 D8 F2 D0 0B 8C 60 7C BB D3 A2
D0F0 FC FF A0 FC FF B3 0B D1 B3 6A E9 E6 EE 06 0B D1
D100 2B 0B 1C C8 D7 C6 D0 A0 FD FF D1 A2 FD FF A0 FD
D110 FF 50 C8 D7 C0 D0 3D 3C E9 64 D6 04 6E E9 E6 EE
D120 02 40 A9 87 7C CF

Function $D0AD (FC FF)
Args:
<0C> First palette # to blank out
<0D> # of palette values to blank out

D0B2 A5 87 7C    / $7C87
D0B5 D7 B9 D0    /

D0B8	CF          /

D0B9 AC 02 D0    / Call $D002
D0BC 44
D0BD D6 0B D1

External loop:
D0C0	0C
D0C1	1D
D0C2	BB
D0C3	D6 00 D1

Internal loop:
D0C6	   0B
D0C7	   8C 60 7C    / #$7C60
D0CA	   BB
D0CB	   D3
D0CC	   5F
D0CD       DA
D0CE	   B3
D0CF	   A0 FD FF
D0D2	   D1
D0D3	   54
D0D4	   BD
D0D5	   B4
D0D6	   BB
D0D7	   A2 FC FF
D0DA 	   0B
D0DB	   8C 60 7C
D0DE	   BB
D0DF	   D3
D0E0	   B3
D0E1	   A0 FC FF
D0E4	   B4
D0E5	   C8
D0E6	   D8 F2 D0

D0E9		  0B
D0EA		  8C 60 7C
D0ED		  BB
D0EE		  D3
D0EF		  A2 FC FF

D0F2   	   A0 FC FF
D0F5	   B3
D0F6	   0B
D0F7	   D1
D0F8	   B3
D0F9	   6A
D0FA	   E9 E6 EE 06
D0FE       0B
D0FF       D1

D100	2B
D101	0B
D102	1C
D103	C8
D104	D7 C6 D0

D107 A0 FD FF
D10A D1

D10B A2 FD FF
D10E A0 FD FF
D111 50
D112 C8
D113 D7 C0 D0

D116 3D
D117 3C
D118 E9 64 D6 04 / Call $D664

D11C 6E
D11D E9 E6 EE 02

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D110 FF 50 C8 D7 C0 D0 3D 3C E9 64 D6 04 6E E9 E6 EE
D120 02 40 A9 87 7C CF
====================================================	
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D120                   20 D1 E4 00 00 D6 3B D1 60 E9
D130 2F C8 02 D7 42 D1 6E E9 E6 EE 02 0C D1 2C D0 D7
D140 2E D1 CF

Function $D126 (00 00) -> Wait for <00> frames or until input

D12B D6 3B D1

Loop:
D12E 60
D12F E9 2F C8 02 / call $C82F -> Check PAD1/PAD2 input
D133 D7 42 D1    / break
D136	6E
D137	E9 E6 EE 02 / call $EEE6 (Sysop 0x0E) -> Wait 1 frame

D13B 0C
D13C D1
D13D 2C
D13E D0
D13F D7 2E D1

D142 CF
====================================================	
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D140          20 D1 E4 00 00 A0 0B 00 56 B5 B3 E9 26
D150 D1 02 CF

Function $D143 (00 00) -> Wait for 6*<00> frames

D148 A0 0B 00
D14B 56
D14C B5
D14D B3
D14E E9 26 D1 02 / Call $D126 -> Wait for <00> frames or until input
D152 CF
====================================================	
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D150          20 D1 E4 00 00 A5 46 78 B3 A0 0B 00 B4
D160 B5 D2 D2 B3 E9 43 D1 02 CF

Function $D153 (00 00) Wait 24*(Wait)*<00> frames
Args:
+0B 

D158 A5 46 78    / $7846 (Wait)
D15B B3
D15C A0 0B 00
D15F B4
D160 B5
D161 D2
D162 D2
D163 B3
D164 E9 43 D1 02 / Call $D143
D168 CF
====================================================	
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D160                            20 D1 E4 00 00 A0 0B
D170 00 B3 8D 64 E9 C5 D7 02 B4 C6 D8 81 D1 41 D6 82
D180 D1 40 CF

Function $D169 (00 00)
Args:
+0B

D16E A0 0B 00
D171 B3
D172 8D 64
D174 E9 C5 D7 02 / Call $D7C5 [RNG #$00-#$63]
D178 B4
D179 C6
D17A D8 81 D1

D17D	41
D17E	D6 82 D1

D181 40
D182 CF
====================================================	
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D180          20 D1 E4 00 00 A0 0B 00 B3 E9 C5 D7 02
D190 CF

Function $D183 (00 00) - get RNG #$00-<00> (wrapper for $D7C5)
Args:
<0B>

D188 A0 0B 00
D18B B3
D18C E9 C5 D7 02 / Call $D7C5 (RNG <0B>)
D18F CF
====================================================	
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D190    20 D1 E4 00 00 61 62 E9 83 D2 04 61 E9 53 D1
D1A0 02 CF

Function $D191 (00 00)

D196 61
D197 62
D198 E9 83 D2 04 / Call $D283

D19C 61
D19D E9 53 D1 02 / Call $D153 / Wait frames

D1A1 CF
====================================================	
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D1A0       20 D1 E4 00 00 61 61 E9 83 D2 04 61 E9 53
D1B0 D1 02 CF

Function $D1A2 (00 00)

D1A7 61
D1A8 61
D1A9 E9 83 D2 04 / Call $D283

D1AD 61
D1AE E9 53 D1 02 / Call $D153 / Wait frames

D1B2 CF
====================================================	
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D1B0          20 D1 E4 FE FF 63 3C E9 72 C2 04 A2 FE
D1C0 FF 61 DE FF FF B3 A0 FE FF 8C D4 BA BB B3 8E F8
D1D0 00 62 E9 FE DC 0A A0 FF FF B3 E9 AB D2 02 61 E9
D1E0 F4 D2 02 CF

Function $D1B3 (FE FF)
Args:
<0C>

D1B8 63
D1B9 3C
D1BA E9 72 C2 04 / Call $C272
D1BE A2 FE FF

D1C1 61
D1C2 DE FF FF
D1C5 B3
D1C6 A0 FE FF
D1C9 8C D4 BA
D1CC BB
D1CD B3
D1CE 8E F8 00
D1D1 62
D1D2 E9 FE DC 0A / Call $DCFE

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D1C0 FF 61 DE FF FF B3 A0 FE FF 8C D4 BA BB B3 8E F8
D1D0 00 62 E9 FE DC 0A A0 FF FF B3 E9 AB D2 02 61 E9
D1E0 F4 D2 02 CF
====================================================	
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D1E0             20 D1 E4 FE FF 63 AA F2 7B E9 72 C2
D1F0 04 A2 FE FF 61 DE FF FF B3 A0 FE FF 8C D4 BA BB
D200 B3 8E F8 00 62 E9 FE DC 0A A0 FF FF 75 B3 E9 AB
D210 D2 02 61 E9 F4 D2 02 CF

Function $D1E4 (FE FF)

D1E9 63
D1EA AA F2 7B    / $7BF2
D1ED E9 72 C2 04 / Call $C272
D1F1 A2 FE FF

D1F4 61
D1F5 DE FF FF
D1F8 B3
D1F9 A0 FE FF
D1FC 8C D4 BA
D1FF BB
D200 B3
D201 8E F8 00
D204 62
D205 E9 FE DC 0A / Call $DCFE

D209 A0 FF FF
D20C 75
D20D B3
D20E E9 AB D2 02 / Call $D2AB

D212 61
D213 E9 F4 D2 02 / Call $D2F4

D217 CF
====================================================	
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D210                         20 D1 E4 FF FF 62 64 E9
D220 E6 EE 04 A2 FF FF 8E F9 00 62 63 E9 E6 EE 06 A0
D230 0B 00 55 BD 8C 5A BE BB B3 8D 20 60 E9 81 D6 06
D240 A0 FF FF B3 62 63 E9 E6 EE 06 41 A9 87 7C CF

Function $D218 (FF FF)
Args
+0B  ?

D21D 62
D21E 64
D21F E9 E6 EE 04 / Call $EEE6 -> Sysop 0x04
D223 A2 FF FF    / Save value of RAM bank 2

D226 8E F9 00
D229 62
D22A 63
D22B E9 E6 EE 06 / Call $EEE6 -> Sysop 0x03: Set RAM bank 2 to page F9

D22F A0 0B 00
D232 55
D233 BD
D234 8C 5A BE    / $BE5A
D237 BB
D238 B3
D239 8D 20
D23B 60
D23C E9 81 D6 06 / Call $D681

D240 A0 FF FF
D243 B3
D244 62
D245 63
D246 E9 E6 EE 06 / Call $EEE6 -> Sysop 0x03: Restore RAM bank 2

D24A 41
D24B A9 87 7C    / $7C87

D24E CF
====================================================	
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D240                                              20
D250 D1 E4 E4 FF 62 DE E4 FF B3 A0 0B 00 D2 8C C8 B1
D260 BB B3 8E FA 00 62 E9 FE DC 0A 8D 1A DE E6 FF B3
D270 87 E4 8E FA 00 62 E9 FE DC 0A DE E6 FF B3 E9 4A
D280 C4 02 CF

Function $D24F (E4 FF)
Print text string #<00> from page FA, table $B1C8

D254 62
D255 DE E4 FF
D258 B3
D259 A0 0B 00
D25C D2
D25D 8C C8 B1
D260 BB
D261 B3
D262 8E FA 00
D265 62
D266 E9 FE DC 0A / Call $DCFE (Get string pointer)

D26A 8D 1A
D26C DE E6 FF
D26F B3
D270 87 E4
D272 8E FA 00
D275 62
D276 E9 FE DC 0A / Call $DCFE (Retrieve string)

D27A DE E6 FF
D27D B3
D27E E9 4A C4 02 / Call $C44A (Print string)
====================================================	
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D280          20 D1 E4 00 00 A5 45 78 52 DA D7 96 D2
D290 65 E9 59 C8 02 CF 0D D1 2D D0 D8 AA D2 0C 8F 13
D2A0 B3 8D 1E E9 E6 EE 04 D6 96 D2 CF

Function $D283 (00 00) -> Play SFX ?
Args:
<00>
<01>

D288 A5 45 78    / $7845
D28B 52
D28C DA
D28D D7 96 D2

	D290 65
	D291 E9 59 C8 02 / Call $C859
	D295 CF

D296 0D
D297 D1
D298 2D
D299 D0
D29A D8 AA D2

for (x = <0D>, x > 0, x++)
	D29D 0C
	D29E 8F 13
	D2A0 B3
	D2A1 8D 1E
	D2A3 E9 E6 EE 04 / Call $EEE6 -> Sysop 0x1E
	D2A7 D6 96 D2

D2AA CF
====================================================	
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D2A0                                  20 D1 E4 00 00
D2B0 A0 0B 00 8B 14 C9 D8 BA D2 CF A5 45 78 52 DA D8
D2C0 F3 D2 A5 62 78 B3 A0 0B 00 B4 C1 D7 D4 D2 AC 25
D2D0 D3 D7 F3 D2 AC 0C D3 A0 0B 00 B3 A5 62 78 B4 C1
D2E0 D8 E9 D2 A0 0B 00 A9 62 78 A0 0B 00 B3 8D 1A E9
D2F0 E6 EE 04 CF

Function $D2AB (00 00)

D2B0 A0 0B 00
D2B3 8B 14
D2B5 C9
D2B6 D8 BA D2

	D2B9 CF 
	
D2BA A5 45 78
D2BD 52
D2BE DA
D2BF D8 F3 D2

D2C2 A5 62 78
D2C5 B3
D2C6 A0 0B 00
D2C9 B4
D2CA C1
D2CB D7 D4 D2

D2CE AC 25 D3
D2D1 D7 F3 D2

D2D4 AC 0C D3
D2D7 A0 0B 00
D2DA B3
D2DB A5 62 78
D2DE B4
D2DF C1
D2E0 D8 E9 D2

D2E3 A0 0B 00
D2E6 A9 62 78

D2E9 A0 0B 00
D2EC B3
D2ED 8D 1A
D2EF E9 E6 EE 04 

D2F3 CF
====================================================	
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D2F0             20 D1 E4 00 00 A5 45 78 52 DA D8 0B
D300 D3 A0 0B 00 B3 8D 1B E9 E6 EE 04 CF

FUNCTION $D2F4 (00 00) $D2F9-$D30B

D2F9 A5 45 78    / Store $7845 to $0008
D2FC 52          / Store #$02 to MC
D2FD DA          / M8 AND MC
D2FE D8 0B D3    / Jump to $D30B if zero

D301 A0 0B 00    / Store preloaded 01 to $0008
D304 B3          / Push M8 to metastack              / (+2)
D305 8D 1B       / Push #$1B to metastack            / (+2)
D307 E9 E6 EE 04 / Run function $EEE6                / (-4)
D30B CF          / Exit 

====================================================	
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D300                                     20 D1 E4 00
D310 00 A5 45 78 52 DA D8 24 D3 8D 1C E9 E6 EE 02 6E
D320 E9 E6 EE 02 CF

Function $D30C (00 00)
D311 A5 45 78
D314 52
D315 DA
D316 D8 24 D3

D319    8D 1C
D31B    E9 E6 EE 02
D31F    6E
D320    E9 E6 EE 02

D324 CF
====================================================	
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D320                20 D1 E4 00 00 A5 45 78 52 DA D8
D330 39 D3 8D 1D E9 E6 EE 02 CF 40 CF

Function $D325 (00 00)

D32A A5 45 78    / $7845 (bit flags?)
D32D 52
D32E DA
D32F D8 39 D3
D332	8D 1D
D334	E0 E6 EE 02 / Call $EEE6 -> Sysop 0x1D
D338	CF
D339 40
D33A CF
====================================================	
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D330                                  20 D1 E4 00 00
D340 8A FF 00 A9 82 7C A9 81 7C 8A 5A 78 A8 5B 78 CF

Function $D33B (00 00)
D340 8A FF 00
D343 A9 82 7C    / $7C82
D346 A9 81 7C    / $7C81

D349 8A 5A 78    / $785A
D34C A8 5B 78    / $785B

D34F CF
====================================================	
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D350 20 D1 E4 00 00 60 60 66 8D 1E 8D 15 62 67 E9 E6
D360 EE 0E 8D 15 67 E9 1D C4 04 8E 12 DF E9 4A C4 02
D370 CF 

Function $D350 (00 00)

D355 60
D356 60
D357 66
D358 8D 1E
D35A 8D 15
D35C 62
D35D 67
D35E E9 E6 EE 0E / Call $EEE6 -> Sysop 0x07

D362 8D 15
D364 67
D365 E9 1D C4 04 / Call $C41D -> Text pos  7,21

D369 8E 12 DF    / 1B 43 30 1B 52 27 1B 45 3D
D36C E9 4A C4 02 / Call $C44A

D370 CF
====================================================	
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D370    20 D1 E4 00 00 63 62 E9 1D C4 04 AA 06 60 8E
D380 80 DF E9 8C C6 04 64 62 E9 1D C4 04 A5 08 60 53
D390 B8 D2 8C 1C DF BB B0 B3 8E 88 DF E9 8C C6 04 65 
D3A0 62 E9 1D C4 04 A5 08 60 D2 8C 24 DF BB B0 B3 8E
D3B0 93 DF E9 8C C6 04 CF

FUNCTION $D371 (00 00) $D376-$D3B6

D376 63          / Push #$03 to metastack            / (+2)
D377 62          / Push #$02 to metastack            / (+2)
D378 E9 1D C4 04 / Run function $C41D                / (-4)

D37C AA 06 60    / Push $6006/$6007 to metastack     / (+2) Year   
D37F 8E 80 DF    / Push #$DF80 to metastack          / (+2)
D382 E9 8C C6 04 / Run function $C68C                / (-4)   

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D380 80 DF E9 8C C6 04 64 62 E9 1D C4 04 A5 08 60 53
D390 B8 D2 8C 1C DF BB B0 B3 8E 88 DF E9 8C C6 04 65 
D3A0 62 E9 1D C4 04 A5 08 60 D2 8C 24 DF BB B0 B3 8E
D3B0 93 DF E9 8C C6 04 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D3B0                      20 D1 E4 00 00 CF 

Function $D3B7 (00 00) -> Do nothing

D3BC CF          / Return
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D3B0                                        20 D1 E4 
D3C0 00 00 CF 

Function $D3BD (00 00) -> Do nothing

D3C2 CF          / Return
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D3C0          20 D1 E4 00 00 CF 

Function $D3C3 (00 00)
D3C8 CF          / Return
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D3C0                            20 D1 E4 00 00 A5 20
D3D0 79 D1 D2 8C 1B 79 BB D3 1D BB D0 B3 A5 20 79 D1
D3E0 D2 8C 1A 79 BB D3 1C BB D0 B3 E9 1D C4 04 CF 

Function $D3C9 (00 00)

D3CE A5 20 79    / $7920
D3D1 D1
D3D2 D2
D3D3 8C 1B 79    / $791B
D3D6 BB
D3D7 D3
D3D8 1D
D3D9 BB
D3DA D0
D3DB B3
D3DC A5 20 79
D3DF D1
D3E0 D2
D3E1 8C 1A 79
D3E4 BB
D3E5 D3
D3E6 1C
D3E7 BB
D3E8 D0
D3E9 B3
D3EA E9 1D C4 04 / Call $C41D -> Text pos  x, y

D3EE CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D3E0                                              20
D3F0 D1 E4 00 00 A5 20 79 D1 D2 8C 1A 79 BB D3 1C BB
D400 D0 B3 E9 F3 C3 02 CF 

Function $D3EF (00 00)

D3F4 A5 20 79    / $7920

...
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D400                      20 D1 E4 00 00 A5 20 79 D1
D410 D2 8C 1B 79 BB D3 1C BB D0 B3 E9 00 C4 02 CF 

Function $D407 (00 00)

D40C A5 20 79    / $7920
D40F D1
D410 D2
D411 8C 1B 79    / $791B
D414 BB
D415 D3
D416 1C
D417 BB
D418 D0
D419 B3
D41A E9 00 C4 02 / $C400 - Set y-pos of text
D41E CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D410                                              20
D420 D1 E4 00 00 A5 20 79 D1 D2 8C 1A 79 BB D3 D0 CD
D430 0E BB 2E A5 20 79 D1 D2 8C 1B 79 BB D3 D0 CD 0F
D440 BB 2F 87 19 87 17 87 15 87 13 3F 3E 3D 3C E9 0F
D450 CD 10 CF 

Function $D41F (00 00)

D424 A5 20 79    / $7920
D427 D1
D428 D2
D429 8C 1A 79    / $791A
D42C BB
D42D D3
D42E D0
D42F CD
D430 0E
D431 BB
D432 2E
D433 A5 20 79
D436 D1
D437 D2
D438 8C 1B 79
D43B BB
D43C D3
D43D D0
D43E CD
D43F 0F
D440 BB
D441 2F

D442 87 19
D444 87 17
D446 87 15
D448 87 13
D44A 3F
D44B 3E
D44C 3D
D44D 3C
D44E E9 0F CD 10 / Call $CD0F
D452 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D450          20 D1 E4 FD FF 8A D4 71 2B 40 A2 FD FF
D460 D6 80 D4 0B B0 D8 72 D4 3B E9 E2 D4 02 D8 72 D4
D470 40 CF A0 FD FF D0 A2 FD FF D1 0B 8F 22 2B 8F DE
D480 A0 FD FF 8B 10 C6 D7 63 D4 41 CF 
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D480                                  20 D1 E4 00 00
D490 3C E9 41 D5 02 D7 A0 D4 3C E9 A6 D4 02 D7 A4 D4
D4A0 40 D6 A5 D4 41 CF 

Function $D48B (00 00) - Checks if general <00> is capable of doing an action
Args:
<0C> General

D490 3C
D491 E9 41 D5 02 / Call $D541 - Check if general acted this month
D495 D7 A0 D4

D498 3C
D499 E9 A6 D4 02 / Call $D4A6 - Check if general is in good health
D49D D7 A4 D4

	D4A0 40
	D4A1 D6 A5 D4

	D4A4 41

D4A5 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D4A0                   20 D1 E4 00 00 0C 73 D3 5F DA
D4B0 D8 B7 D4 40 D6 B8 D4 41 CF 

Function $D4A6 (00 00) - Check if general <00> is in good health

D4AB 0C
D4AC 73
D4AD D3
D4AE 5F
D4AF DA
D4B0 D8 B7 D4

D4B3	40
D4B4	D6 B8 D4

D4B7	41

D4B8 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D4B0                            20 D1 E4 00 00 0C 7F
D4C0 D3 8C FF 00 C1 D8 CC D4 41 D6 CD D4 40 CF 

Function $D4B9 (00 00) -> Check if province is being invaded (or invading? idk)
Args:
<0C> Province

D4BE 0C
D4BF 7F
D4C0 D3
D4C1 8C FF 00
D4C4 C1
D4C5 D8 CC D4

	D4C8 41
	D4C9 D6 CD D4

D4CC 40
D4CD CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D4C0                                           20 D1
D4D0 E4 00 00 0C 8F 10 D3 54 DA D8 E0 D4 41 D6 E1 D4
D4E0 40 CF 

Function $D4CE (00 00) -> Checks if province <00> is Delegated
Args:
<00> Province

D4D3 0C
D4D4 8F 10
D4D6 D3
D4D7 54
D4D8 DA
D4D9 D8 E0 D4

	D4DC 41
	D4DD D6 E1 D4

D4E0 40
D4E1 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D4E0       20 D1 E4 00 00 3C E9 C6 E1 02 8C F7 77 BB
D4F0 D3 50 C8 D8 FA D4 41 D6 FB D4 40 CF 

Function $D4E2 (00 00) - Checks if nation is player-controlled
Args:
<0C> Nation

D4E7 3C
D4E8 E9 C6 E1 02 / Call $E1C6 - Get ID of nation
D4EC 8C F7 77    /
D4EF BB
D4F0 D3
D4F1 50
D4F2 C8
D4F3 D8 FA D4

If nation is player controlled
D4F6	41		    /return 1
D4F7	D6 FB D4

Else
D4FA 40 CF          /return 0
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D4F0                                     20 D1 E4 FE
D500 FF 0C 72 B0 2B 0B D7 0B D5 40 CF 0C B0 B3 0B 72
D510 B0 B4 C0 D8 22 D5 3B E9 B9 D4 02 D7 22 D5 41 D6
D520 23 D5 40 CF 

Function $D4FC (FE FF)

D501 0C
D502 72
D503 B0
D504 2B

D505 0B
D506 D7 0B D5

	D509 40
	D50A CF

D50B 0C
D50C B0
D50D B3
D50E 0B
D50F 72
D510 B0
D511 B4
D512 C0
D513 D8 22 D5

D516 3B
D517 E9 B9 D4 02 / Call $D4B9
D51B D7 22 D5

	D51E 41
	D51F D6 23 D5

	D522 40
	
D523 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D520             20 D1 E4 00 00 0C 7A B0 B3 3D E9 C6
D530 E1 02 B3 41 B4 BD B4 DA D8 3F D5 41 D6 40 D5 40
D540 CF 

Function $D524 (00 00)
Args:
<0C> Nation
<0D> Nation

D529 0C
D52A 7A
D52B B0
D52C B3          / Diplom
D52D 3D          
D52E E9 C6 E1 02 / Call $E1C6 -> Get nation ID
D532 B3
D533 41
D534 B4
D535 BD
D536 B4
D537 DA
D538 D8 3F D5

	D53B 41
	D53C D6 40 D5

D53F 40
D540 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D540    20 D1 E4 00 00 0C 72 D3 51 DA D8 52 D5 41 D6
D550 53 D5 40 CF 

Function $D541 (00 00) -> Check if general is flagged having acted this month?
Args:
<0C> General

D546 0C
D547 72
D548 D3
D549 51
D54A DA
D54B D8 52 D5

	D54E 41
	D54F D6 53 D5
	
D552 40
D553 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D550             20 D1 E4 00 00 0C 8F 10 D3 8C 80 00
D560 DA D8 68 D5 41 D6 69 D5 40 CF 

Function $D554 (00 00)

D559 0C
D55A 8F 10
D55C D3
D55D 8C 80 00
D560 DA
D561 D8 68 D5

if
	D564 41
	D565 D6 69 D5
else
	D568 40

D569 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D560                               20 D1 E4 FE FF 0D
D570 72 D6 7D D5 0B 1C C0 D8 7C D5 41 CF 0B B0 2B 0B
D580 D7 74 D5 40 CF 

Function $D56A (FE FF)
Checks if General <00> is in Province <02>

Args:
<0C> General
<0D> Province

D56F 0D
D570 72          / Load general list
D571 D6 8D D5

Loop:
D574 0B
D575 1C
D576 C0
D577 D8 7C D5

D57A	41
D57B	CF

D57C 0B

Bounds check:
D57D B0
D57E 2B
D57F 0B
D580 D7 74 D5

D583 40
D584 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D580                20 D1 E4 00 00 3D E9 BA D8 02 B3
D590 3C E9 BA D8 02 B4 C0 D8 9E D5 41 D6 9F D5 40 CF

Function $D585 (00 00) -> Checks if provinces <00> & <02> belong to the same nation
Args:
<0C>
<0D>

D58A 3D
D58B E9 BA D8 02 / Call $D8BA (Get nation of province)
D58F B3
D590 3C
D591 E9 BA D8 02 / Call $D8BA (Get nation of province)
D595 B4
D596 C0
D597 D8 9E D5

if provinces are same nation:
	D59A 41
	D59B D6 9F D5
else:
	D59E 40
	
D59F CF

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D580                20 D1 E4 00 00 3D E9 BA D8 02 B3
D590 3C E9 BA D8 02 B4 C0 D8 9E D5 41 D6 9F D5 40 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D5A0 20 D1 E4 00 00 3C E9 BA D8 02 D7 B1 D5 41 D6 B2
D5B0 D5 40 CF

Function $D5A0 (00 00) -> Checks if province <00> is empty
Args:
<0C>

A5A5 3C
A5A6 E9 BA D8 02 / Call $D8BA (get nation of province)
A5AA D7 B1 D5

if nation==null
	A5AD 41
	A5AE D6 B2 D5 / return 1
else
	A5B1 40       / return 0

A5B2 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
D5B0          20 D1 E4 FE FF 3C E9 A3 D8 02 2B 0B D8
D5C0 CF D5 0B B0 1C C0 D8 CD D5 41 D6 CE D5 40 CF 40
D5D0 CF

FUNCTION $D5B3 (FE FF) $D5B8-
Preloaded 01/02 = General

D5B8 3C          / Push preloaded 01/02 to metastack / (+2)
D5B9 E9 A3 D8 02 / Run function $D8A3                / (-2) Get nation address
D5BD 2B          / Store M8 to meta 01/02

D5BE 0B          / Store meta 01/02 to M8
D5BF D8 CF D5    / Jump to $D5CF if zero             /      Return 0 and exit if no nation

D5C2 0B          / Store meta 01/02 to M8
D5C3 B0          / Replace M8 with 1-byte value
D5C4 1C          / Store preloaded 01/02 to MC
D5C5 C0          / Check if M8 = MC                  /      Check if Ruler of nation
D5C6 D8 CD D5    / Jump to $D5CD if not

D5C9 41          / Store #$01 to M8
D5CA D6 CE D5    / Jump to $D5CE

D5CD 40          / Store #$00 to M8
D5CE CF          / Exit

D5CF 40          / Store #$00 to M8
D5D0 CF          / Exit
====================================================	
Function $D5D1
 0F:D5D1:A0 02     LDY #$02
 0F:D5D3:B1 02     LDA ($02),Y
 0F:D5D5:85 0A     STA $000A
 0F:D5D7:C8        INY
 0F:D5D8:B1 02     LDA ($02),Y
 0F:D5DA:85 0B     STA $000B = #$BE
 0F:D5DC:A5 0B     LDA $000B = #$BE
 0F:D5DE:0A        ASL
 0F:D5DF:90 03     BCC $D5E4
 0F:D5E1:4C 35 D6  JMP $D635
 0F:D5E4:A9 08     LDA #$08
 0F:D5E6:85 0E     STA $000E = #$E7
 0F:D5E8:A9 00     LDA #$00
 0F:D5EA:85 09     STA $0009 = #$80
 0F:D5EC:85 08     STA $0008 = #$00
 0F:D5EE:85 0D     STA $000D = #$80
 0F:D5F0:85 0C     STA $000C = #$00
 0F:D5F2:06 0A     ASL $000A = #$7E
 0F:D5F4:26 0B     ROL $000B = #$BE
 0F:D5F6:26 0C     ROL $000C = #$00
 0F:D5F8:26 0D     ROL $000D = #$80
 0F:D5FA:06 0A     ASL $000A = #$7E
 0F:D5FC:26 0B     ROL $000B = #$BE
 0F:D5FE:26 0C     ROL $000C = #$00
 0F:D600:26 0D     ROL $000D = #$80
 0F:D602:38        SEC
 0F:D603:26 08     ROL $0008 = #$00
 0F:D605:26 09     ROL $0009 = #$80
 0F:D607:38        SEC
 0F:D608:A5 0C     LDA $000C = #$00
 0F:D60A:E5 08     SBC $0008 = #$00
 0F:D60C:85 0C     STA $000C = #$00
 0F:D60E:A5 0D     LDA $000D = #$80
 0F:D610:E5 09     SBC $0009 = #$80
 0F:D612:85 0D     STA $000D = #$80
 0F:D614:A9 02     LDA #$02
 0F:D616:B0 0E     BCS $D626
 0F:D618:A5 0C     LDA $000C = #$00
 0F:D61A:65 08     ADC $0008 = #$00
 0F:D61C:85 0C     STA $000C = #$00
 0F:D61E:A5 0D     LDA $000D = #$80
 0F:D620:65 09     ADC $0009 = #$80
 0F:D622:85 0D     STA $000D = #$80
 0F:D624:29 00     AND #$00
 0F:D626:05 08     ORA $0008 = #$00
 0F:D628:29 FE     AND #$FE
 0F:D62A:85 08     STA $0008 = #$00
 0F:D62C:C6 0E     DEC $000E = #$E7
 0F:D62E:D0 C2     BNE $D5F2
 0F:D630:46 09     LSR $0009 = #$80
 0F:D632:66 08     ROR $0008 = #$00
 0F:D634:60        RTS -----------------------------------------
 0F:D635:A9 00     LDA #$00
 0F:D637:85 09     STA $0009 = #$80
 0F:D639:85 08     STA $0008 = #$00
 0F:D63B:60        RTS -----------------------------------------
----------------------------------------------------
Function $D63C

 0F:D63C:A2 01     LDX #$01
 0F:D63E:8E 02 51  STX $5102 = #$A0
 0F:D641:E8        INX
 0F:D642:8E 03 51  STX $5103 = #$A0
 0F:D645:60        RTS -----------------------------------------
----------------------------------------------------
Function $D646

 0F:D646:A0 02     LDY #$02
 0F:D648:B1 02     LDA ($02),Y @ $0540 = #$A2
 0F:D64A:85 08     STA $0008 = #$00
 0F:D64C:A0 04     LDY #$04
 0F:D64E:B1 02     LDA ($02),Y @ $0540 = #$A2
 0F:D650:A8        TAY
 0F:D651:F0 10     BEQ $D663
 0F:D653:A5 08     LDA $0008 = #$00
 0F:D655:0A        ASL
 0F:D656:0A        ASL
 0F:D657:AA        TAX
 0F:D658:A9 F8     LDA #$F8
 0F:D65A:9D 00 06  STA $0600,X @ $06E9 = #$00
 0F:D65D:E6 08     INC $0008 = #$00
 0F:D65F:88        DEY
 0F:D660:4C 51 D6  JMP $D651
 0F:D663:60        RTS -----------------------------------------
--------------------------------------------------
Function $D664
Dumps #$0F to concurrent values in $B0 array (palettes)

Args:
<02> value to start at
<04> # of times to loop

 0F:D664:A0 02     LDY #$02
 0F:D666:B1 02     LDA ($02),Y
 0F:D668:AA        TAX
 0F:D669:A0 04     LDY #$04
 0F:D66B:B1 02     LDA ($02),Y
 0F:D66D:85 08     STA $0008
 
 0F:D66F:A9 0F     LDA #$0F
 0F:D671:A4 08     LDY $0008
 0F:D673:F0 07     BEQ $D67C
 0F:D675:95 B0     STA $B0,X
 0F:D677:E8        INX
 0F:D678:88        DEY
 0F:D679:4C 73 D6  JMP $D673
 0F:D67C:A9 FF     LDA #$FF
 0F:D67E:85 72     STA $0072
 0F:D680:60        RTS -----------------------------------------
--------------------------------------------------
Function $D681 -> Update palette
Args:
<00> Offset of first byte to overwrite
<02> # of bytes to transfer
<04> Pointer to palette data

 0F:D681:A0 02     LDY #$02
 0F:D683:B1 02     LDA ($02),Y
 0F:D685:AA        TAX         ; # offset of first byte to overwrite
 
 0F:D686:A0 04     LDY #$04
 0F:D688:B1 02     LDA ($02),Y
 0F:D68A:85 0A     STA $000A   ; # of bytes to transfer
 
 0F:D68C:A0 06     LDY #$06
 0F:D68E:B1 02     LDA ($02),Y
 0F:D690:85 08     STA $0008
 0F:D692:C8        INY
 0F:D693:B1 02     LDA ($02),Y
 0F:D695:85 09     STA $0009   ; Ptr to palette data
 
 0F:D697:A0 00     LDY #$00
 0F:D699:A5 0A     LDA $000A

 while there are bytes to transfer
	 0F:D69B:F0 0B     BEQ $D6A8
	 0F:D69D:B1 08     LDA ($08),Y @
	 0F:D69F:95 B0     STA $B0,X
	 0F:D6A1:E8        INX
	 0F:D6A2:C8        INY
	 0F:D6A3:C6 0A     DEC $000A
	 0F:D6A5:4C 9B D6  JMP $D69B
 
 0F:D6A8:A9 FF     LDA #$FF
 0F:D6AA:85 72     STA $0072
 0F:D6AC:60        RTS -----------------------------------------
----------------------------------------------------
Function $D6AD

 0F:D6AD:A0 0B     LDY #$0B
 0F:D6AF:B1 02     LDA ($02),Y
 0F:D6B1:99 08 00  STA $0008,Y
 0F:D6B4:88        DEY
 0F:D6B5:D0 F8     BNE $D6AF
 0F:D6B7:A5 0A     LDA $000A
 0F:D6B9:29 1F     AND #$1F
 0F:D6BB:85 0A     STA $000A
 0F:D6BD:A9 20     LDA #$20
 0F:D6BF:8D 06 52  STA $5206
 0F:D6C2:A5 0C     LDA $000C
 0F:D6C4:8D 05 52  STA $5205
 0F:D6C7:18        CLC
 0F:D6C8:AD 05 52  LDA $5205
 0F:D6CB:65 0A     ADC $000A
 0F:D6CD:85 14     STA $0014
 0F:D6CF:AD 06 52  LDA $5206
 0F:D6D2:69 5C     ADC #$5C
 0F:D6D4:85 15     STA $0015
 0F:D6D6:2C 04 52  BIT $5204
 0F:D6D9:70 FB     BVS $D6D6
 0F:D6DB:2C 04 52  BIT $5204
 0F:D6DE:50 FB     BVC $D6DB
 0F:D6E0:A0 00     LDY #$00
 0F:D6E2:A6 0E     LDX $000E
 0F:D6E4:F0 09     BEQ $D6EF
 0F:D6E6:B1 12     LDA ($12),Y
 0F:D6E8:91 14     STA ($14),Y
 0F:D6EA:C8        INY
 0F:D6EB:CA        DEX
 0F:D6EC:4C E4 D6  JMP $D6E4
 0F:D6EF:18        CLC
 0F:D6F0:A5 14     LDA $0014
 0F:D6F2:69 20     ADC #$20
 0F:D6F4:85 14     STA $0014
 0F:D6F6:A5 15     LDA $0015
 0F:D6F8:69 00     ADC #$00
 0F:D6FA:85 15     STA $0015
 0F:D6FC:18        CLC
 0F:D6FD:A5 12     LDA $0012
 0F:D6FF:65 0E     ADC $000E
 0F:D701:85 12     STA $0012
 0F:D703:A5 13     LDA $0013
 0F:D705:69 00     ADC #$00
 0F:D707:85 13     STA $0013
 0F:D709:C6 10     DEC $0010
 0F:D70B:D0 D3     BNE $D6E0
 0F:D70D:60        RTS -----------------------------------------
----------------------------------------------------
Function $D70E

 0F:D70E:20 44 D7  JSR $D744
 0F:D711:98        TYA
 0F:D712:F0 08     BEQ $D71C
 0F:D714:16 00     ASL $00,X @ $00E9 = #$0F
 0F:D716:36 01     ROL $01,X @ $00EA = #$0F
 0F:D718:88        DEY
 0F:D719:D0 F9     BNE $D714
 0F:D71B:98        TYA
 0F:D71C:AA        TAX
 0F:D71D:C8        INY
 0F:D71E:60        RTS -----------------------------------------
----------------------------------------------------
Function $D71F

 0F:D71F:20 44 D7  JSR $D744
 0F:D722:10 12     BPL $D736
 0F:D724:98        TYA
 0F:D725:F0 09     BEQ $D730
 0F:D727:38        SEC
 0F:D728:76 01     ROR $01,X @ $00EA = #$0F
 0F:D72A:76 00     ROR $00,X @ $00E9 = #$0F
 0F:D72C:88        DEY
 0F:D72D:D0 F8     BNE $D727
 0F:D72F:98        TYA
 0F:D730:AA        TAX
 0F:D731:C8        INY
 0F:D732:60        RTS -----------------------------------------
----------------------------------------------------
Function $D733

 0F:D733:20 44 D7  JSR $D744
 0F:D736:98        TYA
 0F:D737:F0 08     BEQ $D741
 0F:D739:56 01     LSR $01,X
 0F:D73B:76 00     ROR $00,X
 0F:D73D:88        DEY
 0F:D73E:D0 F9     BNE $D739
 0F:D740:98        TYA
 0F:D741:AA        TAX
 0F:D742:C8        INY
 0F:D743:60        RTS -----------------------------------------
----------------------------------------------------
Function $D744

 0F:D744:86 00     STX $0000
 0F:D746:AA        TAX
 0F:D747:B9 00 00  LDA $0000,Y
 0F:D74A:95 00     STA $00,X
 0F:D74C:B9 01 00  LDA $0001,Y
 0F:D74F:95 01     STA $01,X
 0F:D751:08        PHP
 0F:D752:A4 00     LDY $0000
 0F:D754:B9 01 00  LDA $0001,Y
 0F:D757:F0 04     BEQ $D75D
 0F:D759:A0 10     LDY #$10
 0F:D75B:28        PLP
 0F:D75C:60        RTS -----------------------------------------
 0F:D75D:B9 00 00  LDA $0000,Y
 0F:D760:A8        TAY
 0F:D761:28        PLP
 0F:D762:60        RTS -----------------------------------------
----------------------------------------------------
Function $D763 - Get fraction <00> * (<02>/<04>)

 0F:D763:A0 07     LDY #$07
 0F:D765:B1 02     LDA ($02),Y
 0F:D767:88        DEY
 0F:D768:11 02     ORA ($02),Y
 0F:D76A:F0 35     BEQ $D7A1
 0F:D76C:88        DEY
 
 0F:D76D:B1 02     LDA ($02),Y
 0F:D76F:85 0D     STA $000D
 0F:D771:88        DEY
 0F:D772:B1 02     LDA ($02),Y
 0F:D774:85 0C     STA $000C
 
 0F:D776:88        DEY
 0F:D777:B1 02     LDA ($02),Y
 0F:D779:85 09     STA $0009
 0F:D77B:88        DEY
 0F:D77C:B1 02     LDA ($02),Y
 0F:D77E:85 08     STA $0008
 
 0F:D780:A0 00     LDY #$00
 0F:D782:84 0F     STY $000F
 0F:D784:84 0E     STY $000E
 0F:D786:20 C1 F1  JSR $F1C1
 
 0F:D789:20 93 EF  JSR $EF93
 
 0F:D78C:A0 07     LDY #$07
 0F:D78E:B1 02     LDA ($02),Y
 0F:D790:85 0D     STA $000D
 0F:D792:88        DEY
 0F:D793:B1 02     LDA ($02),Y
 0F:D795:85 0C     STA $000C
 
 0F:D797:A0 00     LDY #$00
 0F:D799:84 0F     STY $000F
 0F:D79B:84 0E     STY $000E
 0F:D79D:20 C2 EF  JSR $EFC2
 0F:D7A0:60        RTS -----------------------------------------
 0F:D7A1:A9 FF     LDA #$FF
 0F:D7A3:85 09     STA $0009 = #$80
 0F:D7A5:85 08     STA $0008 = #$00
 0F:D7A7:60        RTS -----------------------------------------
----------------------------------------------------
Function $D7A8 - Find <02>% of <00>

 0F:D7A8:A0 02     LDY #$02
 0F:D7AA:B1 02     LDA ($02),Y
 0F:D7AC:99 06 00  STA $0006,Y
 0F:D7AF:C8        INY
 0F:D7B0:C0 06     CPY #$06
 0F:D7B2:D0 F6     BNE $D7AA
 0F:D7B4:A9 64     LDA #$64
 0F:D7B6:85 0C     STA $000C = #$00
 0F:D7B8:A9 00     LDA #$00
 0F:D7BA:85 0D     STA $000D = #$80
 0F:D7BC:C8        INY
 0F:D7BD:A2 D7     LDX #$D7
 0F:D7BF:A9 63     LDA #$63
 0F:D7C1:20 7E DD  JSR $DD7E - Call $D763
 0F:D7C4:60        RTS -----------------------------------------
----------------------------------------------------
FUNCTION $D7C5
Generates a random number from #$00-(01)

 0F:D7C5:A0 03     LDY #$03
 0F:D7C7:B1 02     LDA ($02),Y
 0F:D7C9:85 15     STA $0015
 0F:D7CB:88        DEY
 0F:D7CC:B1 02     LDA ($02),Y
 0F:D7CE:85 14     STA $0014
 0F:D7D0:05 15     ORA $0015
 0F:D7D2:F0 1F     BEQ $D7F3   / Return 0
 
 0F:D7D4:A9 0C     LDA #$0C
 0F:D7D6:20 06 EF  JSR $EF06   / Sysop 0x0C
 
 0F:D7D9:A5 67     LDA $0067
 0F:D7DB:85 19     STA $0019
 0F:D7DD:A5 66     LDA $0066
 0F:D7DF:85 18     STA $0018
 0F:D7E1:A0 18     LDY #$18
 0F:D7E3:A2 14     LDX #$14
 0F:D7E5:A9 10     LDA #$10
 0F:D7E7:20 CC E2  JSR $E2CC
 0F:D7EA:A5 11     LDA $0011
 0F:D7EC:85 09     STA $0009
 0F:D7EE:A5 10     LDA $0010
 0F:D7F0:85 08     STA $0008
 0F:D7F2:60        RTS -----------------------------------------
 0F:D7F3:85 09     STA $0009
 0F:D7F5:85 08     STA $0008
 0F:D7F7:60        RTS -----------------------------------------
====================================================
Function $D7F8

 0F:D7F8:20 9A D8  JSR $D89A
 0F:D7FB:20 0E D8  JSR $D80E
 0F:D7FE:20 83 D8  JSR $D883
 0F:D801:60        RTS -----------------------------------------
====================================================
FUNCTION $D802

 0F:D802:20 9A D8  JSR $D89A
 0F:D805:20 0E D8  JSR $D80E
 0F:D808:20 89 D8  JSR $D889
 0F:D80B:84 09     STY $0009
 0F:D80D:60        RTS -----------------------------------------
====================================================
FUNCTION $D80E

 0F:D80E:85 0A     STA $000A
 0F:D810:86 0B     STX $000B
 0F:D812:20 75 D8  JSR $D875   / Store arg00 to $00
 
 0F:D815:18        CLC
 0F:D816:B1 00     LDA ($00),Y
 0F:D818:A0 04     LDY #$04
 0F:D81A:71 02     ADC ($02),Y
 0F:D81C:85 08     STA $0008
 0F:D81E:8A        TXA
 0F:D81F:F0 04     BEQ $D825
 0F:D821:A0 01     LDY #$01
 0F:D823:B1 00     LDA ($00),Y
 0F:D825:A0 05     LDY #$05
 0F:D827:71 02     ADC ($02),Y
 0F:D829:85 09     STA $0009
 0F:D82B:20 90 D8  JSR $D890   / Return smaller of <00> & <02>
 0F:D82E:20 75 D8  JSR $D875
 0F:D831:60        RTS -----------------------------------------
----------------------------------------------------------------
Function $D832
 0F:D832:A2 01     LDX #$01
 0F:D834:20 46 D8  JSR $D846
 0F:D837:20 83 D8  JSR $D883
 0F:D83A:60        RTS -----------------------------------------
----------------------------------------------------------------
Function $D83B
 0F:D83B:A2 00     LDX #$00
 0F:D83D:20 46 D8  JSR $D846
 0F:D840:20 89 D8  JSR $D889
 0F:D843:84 09     STY $0009
 0F:D845:60        RTS -----------------------------------------
----------------------------------------------------------------
Function $D846
Args:

 0F:D846:A0 04     LDY #$04
 0F:D848:B1 02     LDA ($02),Y
 0F:D84A:85 0A     STA $000A
 0F:D84C:C8        INY
 0F:D84D:B1 02     LDA ($02),Y
 0F:D84F:85 0B     STA $000B   / Store arg02 to $0A
 
 0F:D851:20 75 D8  JSR $D875   / Store arg00 to $00
 
 0F:D854:B1 00     LDA ($00),Y
 0F:D856:85 08     STA $0008
 0F:D858:8A        TXA
 0F:D859:F0 03     BEQ $D85E
 0F:D85B:C8        INY
 0F:D85C:B1 00     LDA ($00),Y
 0F:D85E:85 09     STA $0009
 0F:D860:20 90 D8  JSR $D890 - Return smaller of <00> & <02>
 0F:D863:20 75 D8  JSR $D875
 0F:D866:38        SEC
 0F:D867:B1 00     LDA ($00),Y
 0F:D869:E5 08     SBC $0008
 0F:D86B:85 08     STA $0008
 0F:D86D:C8        INY
 0F:D86E:B1 00     LDA ($00),Y
 0F:D870:E5 09     SBC $0009
 0F:D872:85 09     STA $0009
 0F:D874:60        RTS -----------------------------------------
----------------------------------------------------------------
Function $D875

 0F:D875:A0 03     LDY #$03
 0F:D877:B1 02     LDA ($02),Y
 0F:D879:85 01     STA $0001
 0F:D87B:88        DEY
 0F:D87C:B1 02     LDA ($02),Y
 0F:D87E:85 00     STA $0000
 0F:D880:A0 00     LDY #$00
 0F:D882:60        RTS -----------------------------------------
----------------------------------------------------------------
Function $D883 - Store $08/$09 to ($00/$01)

 0F:D883:A0 01     LDY #$01
 0F:D885:A5 09     LDA $0009
 0F:D887:91 00     STA ($00),Y
 0F:D889:A0 00     LDY #$00
 0F:D88B:A5 08     LDA $0008
 0F:D88D:91 00     STA ($00),Y
 0F:D88F:60        RTS -----------------------------------------
----------------------------------------------------------------
Function $D890 - Return smaller of <arg00> & <arg02> (redir to $F34C)

 0F:D890:A0 05     LDY #$05
 0F:D892:A9 4C     LDA #$4C
 0F:D894:A2 F3     LDX #$F3
 0F:D896:20 7E DD  JSR $DD7E / Call function $F34C 00-05
 0F:D899:60        RTS -----------------------------------------
----------------------------------------------------------------
Function $D89A

 0F:D89A:A0 07     LDY #$07
 0F:D89C:B1 02     LDA ($02),Y
 0F:D89E:AA        TAX
 0F:D89F:88        DEY
 0F:D8A0:B1 02     LDA ($02),Y
 0F:D8A2:60        RTS -----------------------------------------
====================================================
FUNCTION $D8A3 - Return nation address of general (1/2)

 0F:D8A3:A0 02     LDY #$02
 0F:D8A5:B1 02     LDA ($02),Y
 0F:D8A7:85 08     STA $0008
 0F:D8A9:C8        INY
 0F:D8AA:B1 02     LDA ($02),Y
 0F:D8AC:85 09     STA $0009
 0F:D8AE:A0 07     LDY #$07
 0F:D8B0:B1 08     LDA ($08),Y
 0F:D8B2:C9 FF     CMP #$FF
 0F:D8B4:F0 1B     BEQ $D8D1
 0F:D8B6:20 D8 D8  JSR $D8D8
 0F:D8B9:60        RTS -----------------------------------------
----------------------------------------------------------------
FUNCTION $D8BA - Return nation address of province (1/2)
 0F:D8BA:A0 02     LDY #$02
 0F:D8BC:B1 02     LDA ($02),Y
 0F:D8BE:85 08     STA $0008
 0F:D8C0:C8        INY
 0F:D8C1:B1 02     LDA ($02),Y
 0F:D8C3:85 09     STA $0009
 0F:D8C5:A0 0E     LDY #$0E
 0F:D8C7:B1 08     LDA ($08),Y
 0F:D8C9:C9 FF     CMP #$FF
 0F:D8CB:F0 04     BEQ $D8D1
 0F:D8CD:20 D8 D8  JSR $D8D8
 0F:D8D0:60        RTS -----------------------------------------
 0F:D8D1:A9 00     LDA #$00
 0F:D8D3:85 08     STA $0008 = #$00
 0F:D8D5:85 09     STA $0009 = #$00
 0F:D8D7:60        RTS -----------------------------------------
 
====================================================
FUNCTION $D8D8
Returns nation's base address from its single-byte ID

 0F:D8D8:8D 06 52  STA $5206 = #$01
 0F:D8DB:A9 22     LDA #$22
 0F:D8DD:8D 05 52  STA $5205 = #$60
 0F:D8E0:18        CLC
 0F:D8E1:A9 D4     LDA #$D4
 0F:D8E3:6D 05 52  ADC $5205 = #$60
 0F:D8E6:85 08     STA $0008 = #$00
 0F:D8E8:A9 71     LDA #$71
 0F:D8EA:6D 06 52  ADC $5206 = #$01
 0F:D8ED:85 09     STA $0009 = #$00
 0F:D8EF:60        RTS -----------------------------------------
----------------------------------------------------------------
Function $D8F0
Args:
<00> Province

 0F:D8F0:A0 03     LDY #$03
 0F:D8F2:20 56 D9  JSR $D956
 
 0F:D8F5:A9 00     LDA #$00
 0F:D8F7:85 16     STA $0016
 0F:D8F9:85 17     STA $0017
 
 0F:D8FB:A0 02     LDY #$02
 0F:D8FD:B1 08     LDA ($08),Y
 0F:D8FF:85 18     STA $0018
 0F:D901:C8        INY
 0F:D902:B1 08     LDA ($08),Y
 0F:D904:85 19     STA $0019
 0F:D906:05 18     ORA $0018
 0F:D908:F0 1C     BEQ $D926
 
 0F:D90A:A0 0C     LDY #$0C
 0F:D90C:18        CLC
 0F:D90D:B1 18     LDA ($18),Y
 0F:D90F:65 16     ADC $0016
 0F:D911:85 16     STA $0016
 0F:D913:90 02     BCC $D917
 0F:D915:E6 17     INC $0017
 0F:D917:A0 00     LDY #$00
 0F:D919:B1 18     LDA ($18),Y
 0F:D91B:AA        TAX
 0F:D91C:C8        INY
 0F:D91D:B1 18     LDA ($18),Y
 0F:D91F:85 19     STA $0019
 0F:D921:86 18     STX $0018
 0F:D923:4C 06 D9  JMP $D906
 
 0F:D926:A5 16     LDA $0016
 0F:D928:85 08     STA $0008
 0F:D92A:A5 17     LDA $0017
 0F:D92C:85 09     STA $0009
 0F:D92E:60        RTS -----------------------------------------
----------------------------------------------------------------
Function $D92F -> Returns number of items in linked list <00>

 0F:D92F:A0 03     LDY #$03
 0F:D931:20 56 D9  JSR $D956
 0F:D934:A9 00     LDA #$00
 0F:D936:85 16     STA $0016
 0F:D938:85 17     STA $0017
 0F:D93A:A5 09     LDA $0009
 
 Loop:
 0F:D93C:05 08     ORA $0008
 0F:D93E:F0 11     BEQ $D951
 0F:D940:E6 16     INC $0016
 0F:D942:A0 00     LDY #$00
 0F:D944:B1 08     LDA ($08),Y
 0F:D946:AA        TAX
 0F:D947:C8        INY
 0F:D948:B1 08     LDA ($08),Y
 0F:D94A:85 09     STA $0009
 0F:D94C:86 08     STX $0008
 0F:D94E:4C 3C D9  JMP $D93C
 0F:D951:A5 16     LDA $0016
 0F:D953:85 08     STA $0008
 0F:D955:60        RTS -----------------------------------------
----------------------------------------------------------------
Function $D956

 0F:D956:A2 00     LDX #$00
 0F:D958:B1 02     LDA ($02),Y @ $057A = #$00
 0F:D95A:99 06 00  STA $0006,Y @ $0006 = #$8A
 0F:D95D:88        DEY
 0F:D95E:C0 01     CPY #$01
 0F:D960:D0 F6     BNE $D958
 0F:D962:60        RTS -----------------------------------------
----------------------------------------------------------------
Function $D963

 0F:D963:20 7A E3  JSR $E37A
 0F:D966:00        BRK
 0F:D967:60        RTS -----------------------------------------
----------------------------------------------------------------
D968 [FF]
----------------------------------------------------------------
Function $D969

 0F:D969:20 0B DA  JSR $DA0B
 0F:D96C:A0 00     LDY #$00
 0F:D96E:B1 0A     LDA ($0A),Y @ $BE7E = #$FF
 0F:D970:85 17     STA $0017 = #$00
 0F:D972:D0 03     BNE $D977
 0F:D974:4C FD D9  JMP $D9FD
 0F:D977:C8        INY
 0F:D978:B1 0A     LDA ($0A),Y @ $BE7E = #$FF
 0F:D97A:A0 6E     LDY #$6E
 0F:D97C:91 06     STA ($06),Y @ $AC8A = #$AC
 0F:D97E:A5 17     LDA $0017 = #$00
 0F:D980:C9 20     CMP #$20
 0F:D982:90 0F     BCC $D993
 0F:D984:C9 7F     CMP #$7F
 0F:D986:90 05     BCC $D98D
 0F:D988:F0 03     BEQ $D98D
 0F:D98A:4C 93 D9  JMP $D993
 0F:D98D:20 53 DA  JSR $DA53
 0F:D990:4C D7 D9  JMP $D9D7
 0F:D993:C9 A0     CMP #$A0
 0F:D995:90 0F     BCC $D9A6
 0F:D997:C9 DF     CMP #$DF
 0F:D999:90 05     BCC $D9A0
 0F:D99B:F0 03     BEQ $D9A0
 0F:D99D:4C A6 D9  JMP $D9A6
 0F:D9A0:20 6E DA  JSR $DA6E
 0F:D9A3:4C D7 D9  JMP $D9D7
 0F:D9A6:C9 0A     CMP #$0A
 0F:D9A8:D0 06     BNE $D9B0
 0F:D9AA:A0 60     LDY #$60
 0F:D9AC:A9 01     LDA #$01
 0F:D9AE:91 06     STA ($06),Y @ $AC8A = #$AC
 0F:D9B0:C9 1B     CMP #$1B
 0F:D9B2:D0 23     BNE $D9D7
 0F:D9B4:A5 14     LDA $0014 = #$01
 0F:D9B6:F0 13     BEQ $D9CB
 0F:D9B8:20 33 DB  JSR $DB33
 0F:D9BB:A0 69     LDY #$69
 0F:D9BD:AD 8C 7C  LDA $7C8C = #$07
 0F:D9C0:91 06     STA ($06),Y @ $AC8A = #$AC
 0F:D9C2:C8        INY
 0F:D9C3:AD 8D 7C  LDA $7C8D = #$00
 0F:D9C6:91 06     STA ($06),Y @ $AC8A = #$AC
 0F:D9C8:20 DD DA  JSR $DADD
 0F:D9CB:E6 0A     INC $000A = #$7E
 0F:D9CD:D0 02     BNE $D9D1
 0F:D9CF:E6 0B     INC $000B = #$BE
 0F:D9D1:20 2F DC  JSR $DC2F
 0F:D9D4:4C F4 D9  JMP $D9F4
 0F:D9D7:A0 60     LDY #$60
 0F:D9D9:B1 06     LDA ($06),Y @ $AC8A = #$AC
 0F:D9DB:D0 11     BNE $D9EE
 0F:D9DD:AD 92 7C  LDA $7C92 = #$1E
 0F:D9E0:CD 8C 7C  CMP $7C8C = #$07
 0F:D9E3:90 09     BCC $D9EE
 0F:D9E5:A9 20     LDA #$20
 0F:D9E7:C5 14     CMP $0014 = #$01
 0F:D9E9:90 03     BCC $D9EE
 0F:D9EB:4C F4 D9  JMP $D9F4
 0F:D9EE:20 AD DA  JSR $DAAD
 0F:D9F1:4C F4 D9  JMP $D9F4
 0F:D9F4:E6 0A     INC $000A = #$7E
 0F:D9F6:D0 02     BNE $D9FA
 0F:D9F8:E6 0B     INC $000B = #$BE
 0F:D9FA:4C 6C D9  JMP $D96C
 0F:D9FD:A5 14     LDA $0014 = #$01
 0F:D9FF:D0 03     BNE $DA04
 0F:DA01:4C 0A DA  JMP $DA0A
 0F:DA04:20 33 DB  JSR $DB33
 0F:DA07:4C 0A DA  JMP $DA0A
 0F:DA0A:60        RTS -----------------------------------------
----------------------------------------------------------------
Function $DA0B 

 0F:DA0B:A0 0B     LDY #$0B
 0F:DA0D:B1 04     LDA ($04),Y @ $057C = #$1B
 0F:DA0F:85 0A     STA $000A = #$7E
 0F:DA11:C8        INY
 0F:DA12:B1 04     LDA ($04),Y @ $057C = #$1B
 0F:DA14:85 0B     STA $000B = #$BE
 0F:DA16:A9 00     LDA #$00
 0F:DA18:A0 6B     LDY #$6B
 0F:DA1A:91 06     STA ($06),Y @ $AC8A = #$AC
 0F:DA1C:85 14     STA $0014 = #$01
 0F:DA1E:A0 69     LDY #$69
 0F:DA20:AD 8C 7C  LDA $7C8C = #$07
 0F:DA23:91 06     STA ($06),Y @ $AC8A = #$AC
 0F:DA25:C8        INY
 0F:DA26:AD 8D 7C  LDA $7C8D = #$00
 0F:DA29:91 06     STA ($06),Y @ $AC8A = #$AC
 0F:DA2B:A9 00     LDA #$00
 0F:DA2D:A0 60     LDY #$60
 0F:DA2F:91 06     STA ($06),Y @ $AC8A = #$AC
 0F:DA31:20 E1 DA  JSR $DAE1
 0F:DA34:AD 94 7C  LDA $7C94 = #$00
 0F:DA37:0A        ASL
 0F:DA38:0A        ASL
 0F:DA39:0A        ASL
 0F:DA3A:0A        ASL
 0F:DA3B:0A        ASL
 0F:DA3C:0A        ASL
 0F:DA3D:85 16     STA $0016 = #$C0
 0F:DA3F:A9 02     LDA #$02
 0F:DA41:85 52     STA $0052 = #$02
 0F:DA43:A9 00     LDA #$00
 0F:DA45:85 53     STA $0053 = #$00
 0F:DA47:A9 04     LDA #$04
 0F:DA49:20 B9 DC  JSR $DCB9
 0F:DA4C:A0 61     LDY #$61
 0F:DA4E:A5 66     LDA $0066 = #$00
 0F:DA50:91 06     STA ($06),Y @ $AC8A = #$AC
 0F:DA52:60        RTS -----------------------------------------
----------------------------------------------------------------
Function $DCB9
Run sysop (A)

 0F:DCB9:85 50     STA $0050 = #$03
 0F:DCBB:A9 00     LDA #$00
 0F:DCBD:85 51     STA $0051 = #$00
 0F:DCBF:A9 DC     LDA #$DC
 0F:DCC1:48        PHA
 0F:DCC2:A9 C9     LDA #$C9
 0F:DCC4:48        PHA
 0F:DCC5:08        PHP
 0F:DCC6:6C DE FF  JMP ($FFDE) = $F91A
 0F:DCC9:EA        NOP
 0F:DCCA:60        RTS -----------------------------------------
----------------------------------------------------------------
Function $DCCB

 0F:DCCB:68        PLA
 0F:DCCC:85 18     STA $0018 = #$00
 0F:DCCE:68        PLA
 0F:DCCF:85 19     STA $0019 = #$00
 0F:DCD1:A0 00     LDY #$00
 0F:DCD3:B9 08 00  LDA $0008,Y @ $000E = #$A3
 0F:DCD6:48        PHA
 0F:DCD7:C8        INY
 0F:DCD8:C0 10     CPY #$10
 0F:DCDA:D0 F7     BNE $DCD3
 0F:DCDC:A5 19     LDA $0019 = #$00
 0F:DCDE:48        PHA
 0F:DCDF:A5 18     LDA $0018 = #$00
 0F:DCE1:48        PHA
 0F:DCE2:60        RTS -----------------------------------------
----------------------------------------------------------------
Function $DCE3
 0F:DCE3:68        PLA
 0F:DCE4:85 18     STA $0018 = #$00
 0F:DCE6:68        PLA
 0F:DCE7:85 19     STA $0019 = #$00
 0F:DCE9:A0 0F     LDY #$0F
 0F:DCEB:68        PLA
 0F:DCEC:99 08 00  STA $0008,Y @ $000E = #$A3
 0F:DCEF:C0 00     CPY #$00
 0F:DCF1:F0 04     BEQ $DCF7
 0F:DCF3:88        DEY
 0F:DCF4:4C EB DC  JMP $DCEB
 0F:DCF7:A5 19     LDA $0019 = #$00
 0F:DCF9:48        PHA
 0F:DCFA:A5 18     LDA $0018 = #$00
 0F:DCFC:48        PHA
 0F:DCFD:60        RTS -----------------------------------------
----------------------------------------------------------------
Function $DCFE
 0F:DCFE:A0 02     LDY #$02
 0F:DD00:B1 02     LDA ($02),Y
 0F:DD02:85 0C     STA $000C 
 0F:DD04:85 52     STA $0052 
 0F:DD06:A9 00     LDA #$00
 0F:DD08:85 53     STA $0053 = #$00
 0F:DD0A:A9 04     LDA #$04
 0F:DD0C:20 6C DD  JSR $DD6C / Get value of ram bank <arg02>
 0F:DD0F:A5 66     LDA $0066
 0F:DD11:85 0E     STA $000E
 
 0F:DD13:A5 0C     LDA $000C
 0F:DD15:85 52     STA $0052
 0F:DD17:A0 04     LDY #$04
 0F:DD19:B1 02     LDA ($02),Y
 0F:DD1B:85 54     STA $0054
 0F:DD1D:A9 00     LDA #$00
 0F:DD1F:85 53     STA $0053
 0F:DD21:85 55     STA $0055
 0F:DD23:A9 03     LDA #$03
 0F:DD25:20 6C DD  JSR $DD6C / Switch RAM bank to <arg04>
 
 0F:DD28:A0 06     LDY #$06
 0F:DD2A:B1 02     LDA ($02),Y
 0F:DD2C:99 0A 00  STA $000A,Y
 0F:DD2F:C8        INY
 0F:DD30:C0 0C     CPY #$0C
 0F:DD32:D0 F6     BNE $DD2A
 
 0F:DD34:A0 00     LDY #$00
 0F:DD36:4C 4B DD  JMP $DD4B
 Loop:
 0F:DD39:B1 10     LDA ($10),Y
 0F:DD3B:91 12     STA ($12),Y
 0F:DD3D:E6 10     INC $0010
 0F:DD3F:D0 02     BNE $DD43
 0F:DD41:E6 11     INC $0011
 0F:DD43:E6 12     INC $0012
 0F:DD45:D0 02     BNE $DD49
 0F:DD47:E6 13     INC $0013
 0F:DD49:C6 14     DEC $0014
 0F:DD4B:A5 14     LDA $0014
 0F:DD4D:D0 EA     BNE $DD39
 0F:DD4F:A5 15     LDA $0015
 0F:DD51:F0 05     BEQ $DD58
 0F:DD53:C6 15     DEC $0015
 0F:DD55:4C 39 DD  JMP $DD39
 
 0F:DD58:A5 0C     LDA $000C
 0F:DD5A:85 52     STA $0052
 0F:DD5C:A5 0E     LDA $000E
 0F:DD5E:85 54     STA $0054
 0F:DD60:A9 00     LDA #$00
 0F:DD62:85 53     STA $0053
 0F:DD64:85 55     STA $0055
 0F:DD66:A9 03     LDA #$03
 0F:DD68:20 6C DD  JSR $DD6C / Reset RAM bank
 0F:DD6B:60        RTS -----------------------------------------
----------------------------------------------------------------
Function $DD6C
Call Sysop (A)
 0F:DD6C:85 50     STA $0050 = #$03
 0F:DD6E:A9 00     LDA #$00
 0F:DD70:85 51     STA $0051 = #$00
 0F:DD72:A9 DD     LDA #$DD
 0F:DD74:48        PHA
 0F:DD75:A9 7C     LDA #$7C
 0F:DD77:48        PHA
 0F:DD78:08        PHP
 0F:DD79:6C DE FF  JMP ($FFDE) = $F91A
 0F:DD7C:EA        NOP
 0F:DD7D:60        RTS -----------------------------------------
----------------------------------------------------------------
Function $DD7E

 0F:DD7E:86 01     STX $0001
 0F:DD80:85 00     STA $0000
 0F:DD82:84 42     STY $0042
 0F:DD84:E6 42     INC $0042
 0F:DD86:38        SEC
 0F:DD87:A5 02     LDA $0002
 0F:DD89:85 40     STA $0040
 0F:DD8B:E5 42     SBC $0042
 0F:DD8D:85 02     STA $0002
 0F:DD8F:A5 03     LDA $0003
 0F:DD91:85 41     STA $0041
 0F:DD93:E9 00     SBC #$00
 0F:DD95:85 03     STA $0003
 0F:DD97:B9 06 00  LDA $0006,Y
 0F:DD9A:91 02     STA ($02),Y
 0F:DD9C:88        DEY
 0F:DD9D:C0 01     CPY #$01
 0F:DD9F:D0 F6     BNE $DD97
 0F:DDA1:A5 41     LDA $0041
 0F:DDA3:91 02     STA ($02),Y
 0F:DDA5:88        DEY
 0F:DDA6:A5 40     LDA $0040
 0F:DDA8:91 02     STA ($02),Y
 0F:DDAA:20 BA DD  JSR $DDBA
 0F:DDAD:A0 01     LDY #$01
 0F:DDAF:B1 02     LDA ($02),Y
 0F:DDB1:AA        TAX
 0F:DDB2:88        DEY
 0F:DDB3:B1 02     LDA ($02),Y
 0F:DDB5:85 02     STA $0002
 0F:DDB7:86 03     STX $0003
 0F:DDB9:60        RTS -----------------------------------------
----------------------------------------------------------------
Function $DDBA

0F:DDBA:6C 00 00  JMP ($0000) = $E57A
----------------------------------------------------------------
Strings
DDBE "bno get err"

----------------------------------------------------------------
$DE5F - String pointer table
00 DE65 "Can't buy more rice"
01 DE79 "Can't sell more rice"
02 DE8E "No merchants here"
----------------------------------------------------------------
$DEA0 - String pointer table
00 DEA6 " read\nthe letter, but\nlet me pass through"
01 DED0 " exposed\nthe plot and seized\nour letter"
02 DEF8 "\nattempted to capture\nme!"
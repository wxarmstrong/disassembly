ROM Address: 022010

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8000 4C D7 81

8000 JMP $81D7
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8000          20 09 E5 FC FF A4 5F 7B 2B A4 61 7B 2A
8010 8D 1D 69 E9 C9 CF 04 8E F3 00 8E C2 B3 8E 44 B3
8020 66 8D 15 6A 68 69 E9 1E EF 10 6B 69 E9 BC C3 04
8030 3C E9 F5 C3 02 3A 3B E9 C9 CF 04 CF

FUNCTION $8003 (FC FF) $8008-$803B

8008 A4 5F 7B    / Store $7B5F/$7B60 to M8
800B 2B          / Store M8 to meta 01/02

800C A4 61 7B    / Store $7B61/$7B62 to M8 
800F 2A          / Store M8 to meta 03/04

8010 8D 1D       / Push #$1D to metastack            / (+2)
8012 69          / Push #$09 to metastack            / (+2)
8013 E9 C9 CF 04 / Run function $CFC9                / (-4)

8017 8E F3 00    / Push #$F3 to metastack            / (+2)
801A 8E C2 B3    / Push #$B3C2 to metastack          / (+2)
801D 8E 44 B3    / Push #$B344 to metastack          / (+2)
8020 66          / Push #$06 to metastack            / (+2)
8021 8D 15       / Push #$15 to metastack            / (+2)
8023 6A          / Push #$0A to metastack            / (+2)
8024 68          / Push #$08 to metastack            / (+2)
8025 69          / Push #$09 to metastack            / (+2)
8026 E9 1E EF 10 / Run function $EF1E                / (-10)

802A 6B          / Push #$0B to metastack            / (+2)
802B 69          / Push #$09 to metastack            / (+2)
802C E9 BC C3 04 / Run function $C3BC                / (-4) Set text pos to 9,11

8030 3C          / Push preloaded 01/02 to metastack / (+2)
8031 E9 F5 C3 02 / Run function $C3F5                / (-2)

8035 3A          / Push meta 03/04 to metastack      / (+2)
8036 3B          / Push meta 01/02 to metastack      / (+2)
8037 E9 C9 CF 04 / Run function $CFC9                / (-4)

803B CF          / Exit

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8030                                     20 09 E5 00
8040 00 8E FF 00 E9 6F CF 02 A0 0D 00 D8 80 80 60 E9
8050 41 CF 02 61 60 63 E9 1E EF 06 8E FF 00 3C 60 8D
8060 1E 8D 20 60 60 69 E9 1E EF 10 65 60 63 E9 1E EF
8070 06 8D 40 60 8E 59 7D 6D E9 1E EF 08 60 D6 A4 80
8080 61 E9 41 CF 02 61 60 63 E9 1E EF 06 8E FF 00 3C
8090 60 8D 1E 8D 20 60 60 69 E9 1E EF 10 65 60 63 E9
80A0 1E EF 06 61 E9 6F CF 02 CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
80A0                            20 09 E5 00 00 A5 E8
80B0 6F D5 FF FF 0C 00 E4 80 D0 80 E5 80 FD 80 1E 81
80C0 37 81 43 81 5E 81 68 81 74 81 8F 81 9B 81 7D 81
80D0 AC 63 B4 AC 37 9A AC CC 83 AC A8 88 68 E9 86 B4
80E0 02 AC 7E A0 CF AC A1 89 AC E0 AC AC 8F 8A AC B3 
80F0 9B AC 81 9C AC 78 9D AC FF 89 D6 E4 80 AC 76 8B
8100 AC DE 84 AC C0 8C AC 28 84 AC 53 8D AC DF 8D AC
8110 D4 8E 8D 10 E9 86 B4 02 AC 2A 8B D6 E4 80 AC 98
8120 90 AC 66 AE AC A2 86 AC A8 88 68 E9 86 B4 02 62
8130 E9 86 B4 02 D6 E4 80 AC 8F 8A AC 81 85 AC 92 84
8140 D6 EE 80 AC C0 8C AC DE 84 AC 28 84 AC 53 8D AC
8150 F0 90 AC DF 8D AC 5B 91 AC D4 8E D6 E4 80 AC F0
8160 90 AC A8 88 68 D6 30 81 AC 8F 8A AC F0 90 AC EF
8170 92 D6 EE 80 AC 32 93 AC D5 93 AC 95 93 AC C0 8C
8180 AC DE 84 AC 28 84 AC 53 8D AC 3E 94 D6 55 81 AC
8190 98 90 AC 66 AE AC A2 86 D6 61 81 AC 8F 8A AC EF
81A0 92 AC 81 85 AC 92 84 AC 34 88 64 E9 86 B4 02 D6
81B0 EE 80 

FUNCTION $80A9 (00 00) $80AE-$81B1

80AE A5 E8 6F    / Store $6FE8 to $0008             / Month
80B1 D5 FF FF    / 
        0C 00    / 12 redirects
		E4 80    /              $80E4 if month > 12
        D0 80    / January   -> $80D0
		E5 80    / February  -> $80E5
		FD 80    / March     -> $80FD
		1E 81    / April     -> $811E
	    37 81    / May       -> $8137
        43 81    / June      -> $8143
        5E 81    / July      -> $815E
        68 81    / August    -> $8168
        74 81    / September ->	$8174
		8F 81    / October   -> $818F
		9B 81    / November  -> $819B
		7D 81    / December  -> $817D
---------------------------------------------------------------------------------
January                                                                       RNG
80D0 AC 63 B4    / Function $B463 - Decrease alliance timers by 1             No
80D3 AC 37 9A    / Function $9A37 - Age up officers / Random death            Twice per living officer
80D6 AC CC 83    / Function $83CC - Tax cities                                No
80D9 AC A8 88    / Function $88A8
80DC 68          / 
80DD E9 86 B4 02 / Function $B486 Operation 08
80E1 AC 7E A0    / Function $A07E - Protection requests                       Yes
80E4 CF          / Exit
---------------------------------------------------------------------------------
February                                                                      RNG
80E5 AC A1 89    / Function $89A1 - Reduce hospital/fleet/industry/trade      No
80E8 AC E0 AC    / Function $ACE0 
80EB AC 8F 8A    / Function $8A8F - Labor strikes                             Once per eligible city
80EE AC B3 9B    / Function $9BB3 - Guerrilla attacks                         Yes (if eligible city is found)
80F1 AC 81 9C    / Function $9C81
80F4 AC 78 9D    / Function $9D78
80F7 AC FF 89    / Function $89FF - Increase aggressions vs France
80FA D6 E4 80    / Exit
---------------------------------------------------------------------------------
March                                                                         RNG
80FD AC 76 8B    / 
8100 AC DE 84    / Function $84DE - Produce factories and cannons             None             
8103 AC C0 8C    / Function $8CC0 - Produce materials & update sufficiency    None
8106 AC 28 84    / Function $8428 - Collect gold & update trade               None
8109 AC 53 8D    / Function $8D53 - Consume food & adjust food sufficiency    None
810C AC DF 8D    / Function $8DDF - Cholera Event                             Yes
810F AC D4 8E    / Function $8ED4 - Rebellions
8112 8D 10       /
8114 E9 86 B4 02 /
8118 AC 2A 8B    / Function $8B2A - Population growth
811B D6 E4 80    / Exit
------------------------------------------------------------------------------
April                                                                         RNG
811E AC 98 90    / Function $9098 - Pay upkeep for ships
8121 AC 66 AE    / 
8124 AC A2 86    / 
8127 AC A8 88    / Function $88A8
812A 68          / 
812B E9 86 B4 02 / Function $B486 Operation 08
812F 62          / 
8130 E9 86 B4 02 / Function $B486 Operation 02
8134 D6 E4 80    / Exit
---------------------------------------------------------------------------------
May                                                                           RNG
8137 AC 8F 8A    / Function $8A8F - Labor strikes                             Once per eligible city
813A AC 81 85    / Function $8581 - Defection                                 Yes
813D AC 92 84    / Function $8492 - Take 2/3 materials from supply bases      No
8140 D6 EE 80    / Run 2nd half of February events
---------------------------------------------------------------------------------
June                                                                          RNG
8143 AC C0 8C    / Function $8CC0 - Produce materials & update sufficiency    None 
8146 AC DE 84    / Function $84DE - Produce factories and cannons             None   
8149 AC 28 84    / Function $8428 - Collect gold & update trade               None
814C AC 53 8D    / Function $8D53 - Consume food & adjust food sufficiency    None
814F AC F0 90    / Function $90F0 - Severe Weather Event                      Once per city without "farming halted" flag set,
                                                                              with an additional check for damage after each success.																			  
8152 AC DF 8D    / Function $8DDF - Cholera Event                             One initial check, then if passed, once per city,
                                                                              with 5 additional checks for damage after each success.
8155 AC 5B 91    / Function $915B - Plague Event #1                           One initial check, then if passed, once per city,
                 /                  (Skip if any city already infected)       with 4 additional checks for damage after each success.
				 
8158 AC D4 8E    / Function $8ED4 - Rebellions                   
815B D6 E4 80    / Exit
---------------------------------------------------------------------------------
July                                                                          RNG
815E AC F0 90    / Function $90F0 - Severe Weather Event                      Yes
8161 AC A8 88    / Function $88A8 
8164 68
8165 D6 30 81    / Run $B486 operation 8 then exit
---------------------------------------------------------------------------------
August                                                                        RNG
8168 AC 8F 8A    / Function $8A8F - Labor strikes                             Once per eligible city
816B AC F0 90    / Function $90F0 - Severe Weather Event                      Yes
816E AC EF 92    / Function $92EF
8171 D6 EE 80    / Run 2nd half of February events
---------------------------------------------------------------------------------
September                                                                     RNG
8174 AC 32 93    / Function $9332
8177 AC D5 93    / Function $84DE - Produce factories and cannons             None    
817A AC 95 93    / Function $9395
(December)       / 
817D AC C0 8C    / Function $8CC0 - Produce Materials & Update Sufficiency    None
8180 AC DE 84    / Function $84DE
8183 AC 28 84    / Function $8428 - Collect gold & update trade               None
8186 AC 53 8D    / Function $8D53 - Consume food & adjust food sufficiency    None
8189 AC 3E 94    / Function $943E - 2nd plague                                
818C D6 55 81    / Run 2nd half of June events
---------------------------------------------------------------------------------
October                                                                       RNG
818F AC 98 90    / Function $9098 - Pay upkeep for ships 
8192 AC 66 AE    / Function $AE66
8195 AC A2 86    / Function $86A2
8198 D6 61 81    / Run 2nd half of July events
---------------------------------------------------------------------------------
November                                                                      RNG
819B AC 8F 8A    / Function $8A8F - Labor strikes                             Once per eligible city
819E AC EF 92    / Function $8492 - Take 2/3 materials from supply bases      No
81A1 AC 81 85    / Function $8581 - Defection
81A4 AC 92 84    / Function $8492
81A7 AC 34 88    / Function $8834
81AA 64          / 
81AB E9 86 B4 02 / Function $B486, Operation 02
81AF D6 EE 80    / Run 2nd half of February events
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
81B0       20 09 E5 00 00 AC D3 A8 D7 D6 81 A5 EA 6F
81C0 D9 02 00 01 00 D3 81 02 00 CD 81 D6 81 AC AD AB
81D0 D7 D6 81 AC D2 A9 CF 

FUNCTION $81B2 (00 00) $81B7-$81D6

81B7 AC D3 A8    / Run function $A8D3                / Check if advancing to next Scenario
81BA D7 D6 81    / Jump to $81D6 if so               / If Scenario was changed

81BD A5 EA 6F    / Store $6FEA to $0008
81C0 D9 02 00
     01 00 D3 81 / Jump to $81D3 if Scenario 1
	 02 00 CD 81 / Jump to $81CD if Scenario 2
	       D6 81 / Else Jump to $81D6

81CD AC AD AB    / Run function $ABAD
81D0 D7 D6 81    / Jump to $81D6 if not zero
81D3 AC D2 A9    / Run function $A9D2
81D6 CF          / Exit

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
81D0                      20 09 E5 00 00 43 A9 EF 6F
81E0 60 E9 7F D2 02 A5 E8 6F D0 A9 E8 6F A5 E8 6F 5C
81F0 C8 D8 FF 81 A4 E6 6F D0 A8 E6 6F 41 A9 E8 6F A5 
8200 E8 6F 53 B8 73 53 DA A9 E9 6F 8E 27 AB 8E E0 00
8210 62 E9 79 DD 06 60 E9 7F D2 02 AC B2 81 60 E9 7F 
8220 D2 02 AC 6F AA 60 E9 7F D2 02 AC A9 80 60 E9 7F
8230 D2 02 CF

FUNCTION $81D7 (00 00) $81DC-$8232                       MAIN PAGE FUNCTION

81DC 43          / Store #$03 to M8
81DD A9 EF 6F    / Store #$0003 to $6FEF                 Set phase to pre-month
81E0 60          / Push #$0000 to metastack         (+2)
81E1 E9 7F D2 02 / Run function $D27F               (-2) Shift to full-map view
81E5 A5 E8 6F    / Store $6FE8 to $0008                  
81E8 D0          / Increment M8
81E9 A9 E8 6F    / Store $0008 to $6FE8                  Go to next month
81EC A5 E8 6F    / Store $6FE8 to $0008
81EF 5C          / Store #$0C to MC
81F0 C8          / Check if M8 > MC                      Check if month is over 12
81F1 D8 FF 81    / Jump to $81FF if not

81F4 A4 E6 6F    / Store $6FE6/$6FE7 to M8
81F7 D0          / Increment M8
81F8 A8 E6 6F    / Store M8 to $6FE6/$6fE7               Go to next year
81FB 41          / Store #$01 to M8
81FC A9 E8 6F    / Store $0008 to $6FEB                  Set to January

81FF A5 E8 6F    / Store $6FE8 to $0008
8202 53          / Store #$03 to MC
8203 B8          / Divide M8 by MC 
8204 73          / Add #$03 to M8
8205 53          / Store #$03 to MC
8206 DA          / MC AND M8
8207 A9 E9 6F    / Store $0008 to $6FE9                  Set season
820A 8E 27 AB    / Push #$AB27 to metastack         (+2)
820D 8E E0 00    / Push #$00E0 to metastack         (+2)
8210 62          / Push #$0002 to metastack         (+2)
8211 E9 79 DD 06 / Run function $DD79               (-6) Print month/year 
8215 60          / Push #$0000 to metastack         (+2)
8216 E9 7F D2 02 / Run function $D27F               (-2) Text pos #$00
821A AC B2 81    / Run function $81B2                    Attempt Scenario advance
821D 60          / Push #$0000 to metastack         (+2)
821E E9 7F D2 02 / Run function $D27F               (-2) Text pos #$00
8222 AC 6F AA    / Run function $AA6F 
8225 60          / Push #$0000 to metastack         (+2)
8226 E9 7F D2 02 / Run function $D27F               (-2) Text pos #$00
822A AC A9 80    / Run function $80A9
822D 60          / Push #$0000 to metastack         (+2)
822E E9 7F D2 02 / Run function $D27F               (-2) Text pos #$00
8232 CF          / Exit
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8230          20 09 E5 FF FF 40 A2 FF FF 0C 7B D3 D8
8240 5D 82 0C 79 D3 55 BA A2 FF FF A3 FF FF 0C 79 B4
8250 B3 D3 BC D4 0C 7B B3 0C 79 D3 55 B8 D4 0C 7A D3
8260 D8 6A 82 0C 7A B3 0C 79 D3 D4 0C 79 D3 D7 7C 82
8270 3C 8E 59 A5 8E E0 00 62 E9 79 DD 08 A0 FF FF CF

FUNCTION $8233 (FF FF) $8238-$827F

8238 40          / Store #$00 to M8
8239 A2 FF FF    / Store $0008 to meta 01

823C 0C          / Store preloaded 01/02 to M8 
823D 7B          / Add #$0B to M8
823E D3          / Replace M8 with 1-byte value
823F D8 5D 82    / Jump to $825D if zero

8242 0C          / Store preloaded 01/02 to M8
8243 79          / Add #$09 to M8
8244 D3          / Replace M8 with 1-byte value
8245 55          / Store #$05 to MC
8246 BA          / 

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8240 5D 82 0C 79 D3 55 BA A2 FF FF A3 FF FF 0C 79 B4
8250 B3 D3 BC D4 0C 7B B3 0C 79 D3 55 B8 D4 0C 7A D3
8260 D8 6A 82 0C 7A B3 0C 79 D3 D4 0C 79 D3 D7 7C 82
8270 3C 8E 59 A5 8E E0 00 62 E9 79 DD 08 A0 FF FF CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8280 20 09 E5 00 00 64 E9 7F D2 02 3D E9 4F D0 02 B3
8290 0D 8C 76 71 BC 8B 1C B8 D0 B3 3C 8E BA B4 E9 38
82A0 C6 08 CF

FUNCTION $8280 (00 00) $8285-$82A2

8285 64          / Push #$04 to metastack            / (+2)
8286 E9 7F D2 02 / Run function $D27F                / (-4) Text pos #$04
828A 3D          / Push preloaded 03/04 to metastack / (+2)
828B E9 4F D0 02 / Run function $D04F                / (-2) 
828F B3          / Push M8 to metastack              / (+2) Name of city
8290 0D          / Store preloaded 03/04 to M8
8291 8C 76 71    / Store #$7176 to MC
8294 BC          / Subtract MC from M8
8295 8B 1C       / Store #$1C to MC
8297 B8          / Divide M8 by MC
8298 D0          / Increment M8
8299 B3          / Push M8 to metastack              / (+2) City #
829A 3C          / Push preloaded 01/02 to metastack / (+2)
829B 8E BA B4    / Push #$B4BA to metastack          / (+2)
829E E9 38 C6 08 / Run function $C638                / (-8) Print
82A2 CF          / Exit

====================================================	 
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
82A0          20 09 E5 FD FF 3D 3C E9 80 82 04 A5 59
82B0 7B B3 61 3D E9 0B D1 06 A2 FF FF A5 59 7B B3 62
82C0 3D E9 0B D1 06 A2 FE FF A0 FF FF 8C FF 00 C1 D8
82D0 4A 83 A0 FE FF 8C FF 00 C1 D8 4A 83 0D 8C 76 71
82E0 BC 8B 1C B8 8C 2B 7D BB D3 A2 FD FF A0 FD FF D2
82F0 D2 8C 59 7D BB B3 A0 FE FF 53 BD D1 D4 62 A0 FD
8300 FF D2 D2 8C 5A 7D BB B3 A0 0F 00 D8 12 83 4F D6
8310 14 83 89 10 D2 8C E0 BC BB B3 8E FA 00 62 E9 A3
8320 F3 0A A0 FD FF D2 D2 8C 5C 7D BB B3 A0 FF FF 53
8330 BD D4 61 A0 FD FF B3 A0 FD FF D2 D2 8C 59 7D BB
8340 B3 6D E9 1E EF 08 41 A9 A0 76 62 E9 62 C0 02 CF
====================================================	 
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8350 20 09 E5 00 00 A5 A0 76 D8 6B 83 61 E9 62 C0 02
8360 8E C2 AB 8E E0 00 62 E9 79 DD 06 40 A9 A0 76 CF

FUNCTION $8350 (00 00) $8355-$836F

8355 A5 A0 76    / Store $76A0 to M8                 / Menu
8358 D8 6B 83    / Jump to $836B if zero
835B 61          / Push #$0001 to metastack          / (+2)
835C E9 62 C0 02 / Wait 1 time units                 / (-2)
8360 8E C2 AB    / Push #$ABC2 to metastack          / (+2)
8363 8E E0 00    / Push #$00E0 to metastack          / (+2)
8366 62          / Push #$0062 to metastack          / (+2)
8367 E9 79 DD 06 / Run function $DD79                / (-2)
836B 40          / Store #$00 to M8
836C A9 A0 76    / Store $0008 to $76A0              / Restore menu
836F CF          / Exit 

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8370 20 09 E5 00 00 61 E9 7F D2 02 3C 8D 14 8D 16 8E
8380 3A A0 8E E0 00 62 E9 79 DD 0C CF

FUNCTION $8370 (00 00) $8375-$838A
Loads event graphic (01)(02)

8375 61          / Push #$0001 to metastack          (+2)
8376 E9 7F D2 02 / Run function $D27F                (-2) Set map to NW corner?
837A 3C          / Push preloaded 01/02 to metastack (+2)
837B 8D 14       / Push #$0014 to metastack          (+2)
837D 8D 16       / Push #$0016 to metastack          (+2)
837F 8E 3A A0    / Push #$A03A to metastack          (+2)
8382 8E E0 00    / Push #$00E0 to metastack          (+2)
8385 62          / Push #$0002 to metastack          (+2)
8386 E9 79 DD 0C / Run function $DD78                (-C)
838A CF          / Exit 

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8380                                  20 09 E5 00 00
8390 61 E9 6F CF 02 3C 8E 03 A0 8E E0 00 62 E9 79 DD
83A0 08 3D E9 03 80 02 63 E9 62 C0 02 CF

FUNCTION $838B (00 00) $8390-$83AB

8390 61          / Push #$01 to metastack            / (+2)
8391 E9 6F CF 02 / Run function $CF6F                / (-2) Set palette to 1

8395 3C          / Push preloaded 01/02 to metastack / (+2)
8396 8E 03 A0    / Push #$A003 to metastack          / (+2)
8399 8E E0 00    / Push #$E0 to metastack            / (+2)
839C 62          / Push #$02 to metastack            / (+2)
839D E9 79 DD 08 / Run function $DD79                / (-8)

89A1 3D          / Push preloaded 03/04 to metastack / (+2)
89A2 E9 03 80 02 / Run function $8003                / (-2)

89A6 63          / Push #$03 to metastack            / (+2)
89A7 E9 62 C0 02 / Run function $C062                / (-2) Wait 3 time units for input

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
83A0 	                                 20 09 E5 00
83B0 00 A0 0B 00 B3 E9 C4 D1 02 A0 0B 00 D8 CB 83 66
83C0 8E 18 AC 8E E0 00 62 E9 79 DD 08 CF

FUNCTION $83AC (00 00) $83B1-$83CB

83B1 A0 0B 00    / Store preloaded 01 to $0008
83B4 B3          / Push M8 to metastack              / (+2)
83B5 E9 C4 D1 02 / Run function $D1C4                / (-2) Set palette to (1)

83B9 A0 0B 00    / Store preloaded 01 to $0008
83BC D8 CB 83    / Jump to $83CB if zero

83BF 66          / Push #$06 to metastack            / (+2)
83C0 8E 18 AC    / Push #$AC18 to metastack          / (+2)
83C3 8E E0 00    / Push #$E0 to metastack            / (+2)
83C6 62          / Push #$02 to metastack            / (+2)
83C7 E9 79 DD 08 / Run function $DD79                / (-8)

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
83C0                                     20 09 E5 F4
83D0 FF 8A 68 70 2B 40 26 0B D6 11 84 0A 75 B0 29 0A 
83E0 8F 1B D3 8B 20 DA D8 F2 83 09 53 B8 28 09 56 D6
83F0 F8 83 09 56 B8 28 09 53 B8 27 8E 50 C3 38 0B 78
8400 B3 E9 2C DE 06 8E 0F 27 37 0A 7E B3 E9 2C DE 06
8410 0A B0 2A 0A D7 DB 83 06 D0 26 D1 0B 8F 12 2B 8F
8420 EE 06 5F C6 D7 D7 83 CF

FUNCTION $83CC (F4 FF) $83D1-$8427
Tax all cities 

83D1 8A 68 70    / Store #$7068 to M8
83D4 2B          / Store M8 to meta 01/02

83D5 40          / Store #$00 to M8
83D6 26          / Store M8 to meta 11/12

83D7 0B          / Store meta 01/02 to M8
83D8 D6 11 84    / Jump to $8411

------------------
Loop

83DB 0A          / Store meta 03/04 to M8
83DC 75          / Add #$05 to M8
83DD B0          / Replace M8 with 2-byte value      / City - Population
83DE 29          / Store M8 to meta 05/06

83DF 0A          / Store meta 03/04 to M8
83E0 8F 1B       / Add #$1B to M8
83E2 D3          / Replace M8 with 1-byte value      / City - Status
83E3 8B 20       / Store #$20 to MC
83E5 DA          / M8 AND MC                         / Check if tax is set
83E6 D8 F2 83    / Jump to $83F2 if not

83E9 09          / Store meta 05/06 to M8
83EA 53          /
83EB B8          / Divide M8 by 3 
83EC 28          / Store M8 to meta 07/08

83ED 09          / Store meta 05/06 to M8
83EE 56          / Store #$06 to MC
83EF D6 F8 83    / Jump to $83F8

83F2 09          / Store meta 05/06 to M8
83F3 56          
83F4 B8          / Divide M8 by 6
83F5 28          / Store M8 to meta 07/08

83F6 09          / Store meta 05/06 to M8
83F7 53        

83F8 B8          / Divide M8 (by 3 or 6)
83F9 27          / Store M8 to meta 09/10

83FA 8E 50 C3    / Push #$C350 to metastack          / (+2)
83FD 38          / Push meta 07/08 to metastack      / (+2)
83FE 0B          / Store meta 01/02 to M8
83FF 78          / Add #$08 to M8                    / City - Industry
8400 B3          / Push M8 to metastack              / (+2)
8401 E9 2C DE 06 / Run function $DE2C                / (-6)
8405 8E 0F 27    / Push #$270F to metastack          / (+2)
8408 B3          / Push M8 to metastack              / (+2)
8409 0A          / Store meta 03/04 to M8
840A 7E          / Add #$0E to M8
840B B3
840C E9 2C DE 06
8410 0A
------------------
8411 B0          / Replace M8 with 2-byte value      / Next city in nation's list
8412 2A          / Store M8 to meta 03/04 
8413 0A          / Store 
8414 D7 DB 83
8417 06
8418 D0
8419 26
841A D1
841B 0B
841C 8F 12
841E 2B
841F 8F EE
8421 06
8422 5F C6
8424 D7 D7 83
8427 CF

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8420                         20 09 E5 F4 FF 8A 68 70
8430 2B 40 26 0B D6 7B 84 0A 79 D3 D0 29 0A 8F 1B D3
8440 58 DA D8 4A 84 09 51 BE D0 29 0A 8F 1B D3 8B 20
8450 DA D8 5E 84 09 55 B5 28 09 55 B5 D6 63 84 09 5A
8460 B5 28 40 27 8E 0F 27 38 0A 7E B3 E9 2C DE 06 8E
8470 50 C3 37 0B 78 B3 E9 2C DE 06 0A B0 2A 0A D7 37
8480 84 06 D0 26 D1 0B 8F 12 2B 8F EE 06 5F C6 D7 33
8490 84 CF

FUNCTION $8428 (F4 FF) $842D-$8491

842D 8A 68 70    / Store #$7068 to M8
8430 2B          / Store M8 to meta 01/02
8431 40          / Store #$00 to M8
8432 26          / Store M8 to meta 11/12
8433 0B          / Store meta 01/02 to M8
8434 D6 7B 84    / Jump to $847B

8437 0A          / Store meta 03/04 to M8
8438 79          / Add #$09 to M8
8439 D3          / Replace M8 with 1-byte value      / Trade
843A D0          / Increment M8
843B 29          / Store M8 to meta 05/06
843C 0A          / Store meta 03/04 to M8
843D 8F 1B       / Add #$1B to M8
843F D3          / Replace M8 with 1-byte value      / Status
8440 58          / Store #$08 to M8
8441 DA          / M8 AND MC                         / Check for Industry Halted flag
8442 D8 4A 84    / Jump to $844A if not

8445 09          / Store meta 05/06 to M8
8446 51          / 
8447 BE          / Divide M8 by 2
8448 D0          / Increment M8
8449 29          / Store M8 to meta 05/06

844A 0A          / Store meta 03/04 to M8
844B 8F 1B       / Add #$1B to M8
844D D3          / Replace M8 with 1-byte value      / Status
844E 8B 20       / Store #$20 to MC
8450 DA          / M8 AND MC                         / Check for Tax Set flag
8451 D8 5E 84    / Jump to $845E if not

8454 09          / Store meta 05/06 to M8
8455 55          / Store #$05 to MC
8456 B5          / Multiply M8 by MC
8457 28          / Store M8 to meta 07/08
8458 09          / Store meta 05/06 to M8
8459 55          / Store #$05 to MC
845A B5          / Multiply M8 by MC
845B D6 63 84    / Jump to $8463

845E 09          / Store meta 05/06 to M8
845F 5A          / Store #$0A to MC
8460 B5          / Multiply M8 by MC
8461 28          / Store M8 to meta 07/08
8462 40          / Store #$00 to M8

8463 27          / Store M8 to meta 09/10
8464 8E 0F 27    / Push #$270F to metastack          / (+2)
8467 38          / Push meta 07/08 to metastack      / (+2)
8468 0A          / Store meta 03/04 to M8
8469 7E          / Add #$0E to M8                    /      City gold
846A B3          / Push M8 to metastack              / (+2)
846B E9 2C DE 06 / Run function $DE2C                / (-6)
846F 8E 50 C3    / Push #$C350 to M8
8472 37          / Push meta 09/10 to metastack      / (+2)
8473 0B          / Store meta 01/02 to M8
8474 78          / Add #$08 to M8
8475 B3          / Push M8 to metastack              / (+2) Total gold
8476 E9 2C DE 06 / Run function $DE2C                / (-6)
847A 0A          / Store meta 03/04 to M8

847B B0          / Replace M8 with 2-byte value
847C 2A          / Store M8 to meta 03/04
847D 0A          / Store meta 03/04 to M8
847E D7 37 84    / Jump to $8437 if not zero

8481 06          / Store meta 11/12 to M8
8482 D0          / Increment M8
8483 26          / Store M8 to meta 11/12
8484 D1          / 
8485 0B          / Store meta 01/02 to M8
8486 8F 12       / Add #$12 to M8
8488 2B          / Store M8 to meta 01/02
8489 8F EE
848B 06          / Store meta 11/12 to M8
848C 5F          / Store #$0F to MC
848D C6          / Check if M8 < MC
848E D7 33 84    / Jump to $8433 if so

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8490       20 09 E5 F8 FF 8A 68 70 2B 40 28 0B D6 C7
84A0 84 0A 8F 1B D3 51 DA D8 C6 84 0A 8F 12 B0 D2 53
84B0 B8 29 39 0A 8F 12 B4 B3 B0 BC B1 8E 50 C3 39 0B
84C0 7C B3 E9 2C DE 06 0A B0 2A 0A D7 A1 84 08 D0 28
84D0 D1 0B 8F 12 2B 8F EE 08 5F C6 D7 9D 84 CF	 

FUNCTION $8492 (F8 FF) $8497-$84DD

8497 8A 68 70    / Store #$7068 to M8
849A 2B          / Store M8 to meta 01/02
849B 40          / Store #$00 to M8
849C 28          / Store M8 to meta 07/08

849D 0B          / Store meta 01/02 to M8 
849E D6 C7 84    / Jump to $84C7

84A1 0A          / Store meta 03/04 to M8 
84A2 8F 1B       / Add #$1B to M8
84A4 D3          / Replace M8 with 1-byte value      / City status
84A5 51          / Store #$01 to MC
84A6 DA          / MC AND M8                         / Check for Supply Base flag
84A7 D8 C6 84    / Jump to $84C6 if not
84AA 0A          / Store meta 03/04 to M8
84AB 8F 12       / Add #$12 to M8
84AD B0          / Replace M8 with 2-byte value      / Materials
84AE D2          / Double M8
84AF 53
84B0 B8          / Divide M8 by 3
84B1 29          / Store M8 to meta 05/06
84B2 39          / Push M8 to metastack              / (+2)
84B3 0A          / Store meta 03/04 to M8
84B4 8F 12       / Add #$12 to M8
84B6 B4          / Pull 2 meta to MC                 / (-2)
84B7 B3          / Push M8 to metastack              / (+2)
84B8 B0          / Replace M8 with 2-byte value
84B9 BC          / Subtract MC from M8                     
84BA B1          / Pull 2 meta, store M8 to address  / (-2) Take 2/3 of materials 
84BB 8E 50 C3    / Push #$C350 to metastack          / (+2)
84BE 39          / Push M8 to metastack              / (+2)
84BF 0B          / Store meta 01/02 to M8
84C0 7C          / Add #$0C to M8
84C1 B3          / Push M8 to metastack              / (+2)
84C2 E9 2C DE 06 / Run function $DE2C                / (-6) Add to Nation materials up to 50000

84C6 0A          / Store meta 03/04 to M8
84C7 B0          / Replace M8 with 2-byte value
84C8 2A          / Store M8 to meta 03/04            /      Advance to next city
84C9 0A          / Stoe meta 03/04 to M8
84CA D7 A1 84    / Jump to $84A1 if not blank
84CD 08          / Store meta 07/08 to M8
84CE D0          / Increment M8                      /      Advance nation counter
84CF 28          / Store M8 to meta 07/08
84D0 D1
84D1 0B          / Store meta 01/02 to M8
84D2 8F 12       / Add #$12 to M8 
84D4 2B          / Store M8 to meta 01/02            /      Advance to next nation
84D5 8F EE

84D7 08          / Store meta 01/02 to M8
84D8 5F          / Store #$0F to MC
84D9 C6          / Check if M8 < MC
84DA D7 9D 84    / Jump to $849D if so
84DD CF          / Exit
	 
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
84D0                                           20 09
84E0 E5 EE FF 8A 68 70 2B 40 23 40 24 25 0B D6 0E 85
84F0 8E FF 00 63 3A E9 0B D1 06 52 DA D8 0D 85 04 D0
8500 24 0A 8F 1B D3 58 DA D8 0D 85 05 D0 25 0A B0 2A
8510 0A D7 F0 84 04 8C C8 00 B5 B3 0B 8F 10 B0 B4 C8
8520 D8 2D 85 0B 8F 10 B3 04 8C C8 00 B5 B1 0B 8F 10
8530 B0 29 D8 70 85 0B 78 B0 28 09 18 C7 D8 47 85 08
8540 19 BC 27 09 D6 4D 85 08 8B 32 BA 27 08 8B 32 B8 
8550 26 0B 78 B3 07 B1 42 CD 04 B5 24 8E 0F 27 34 04
8560 15 BC B3 36 E9 CA DD 06 B3 0B 7E B3 E9 2C DE 06
8570 03 D0 23 D1 0B 8F 12 2B 8F EE 03 5F C6 D7 E9 84
8580 CF

FUNCTION $84DE (EE FF) $84E3-$8580

84E3 8A 68 70    / Store #$7068 to M8
84E6 2B          / Store M8 to meta 01/02
84E7 40          / Store #$00 to M8
84E8 23          / Store M8 to meta 17/18
84E9 40          / Store #$00 to M8
84EA 24          / Store M8 to meta 15/16
84EB 25          / Store M8 to meta 13/14
84EC 0B          / Store meta 01/02 to M8
84ED D6 0E 85    / Jump to $850E

84F0 8E FF 00    / Push #$00FF to metastack          / (+2)
84F3 63          / Push #$0003 to metastack          / (+2)
84F4 3A          / Push meta 03/04 to metastack      / (+2)
84F5 E9 0B D1 06 / Run function $D10B                / (-2) Retrieve hidden stat 3/FF for current city
84F9 52          / Store #$02 to MC
84FA DA          / M8 AND MC
84FB D8 0D 85    / Jump to $850D if zero

84FE 04          / Store meta 15/16 to M8
84FF D0          / Increment M8
8500 24          / Store M8 to meta 15/16
8501 0A          / Store meta 03/04 to M8
8502 8F 1B       / Add #$1B to M8
8504 D3          / Replace M8 with 1-byte value      /      City status
8505 58          / Store #$08 to M8
8506 DA          / M8 AND MC                         /      Check for Industry Halted flag
8507 D8 0D 85    / Jump to $850D if not

850A 05          / Store meta 13/14 to M8
850B D0          / Increment M8
850C 25          / Store M8 to meta 13/14

850D 0A          / Store meta 03/04 to M8

850E B0          / Replace M8 with 2-byte value      
850F 2A          / Store M8 to meta 03/04            /      Advance to next city
8510 0A          / Store meta 03/04 to M8
8511 D7 F0 84    / Jump to $84F0 if positive         /      Not end of list

8514 04          / Store meta 15/16 to M8
8515 8C C8 00    / Store #$00C8 to MC                /      200
8518 B5          / Multiply M8 by MC
8519 B3          / Push M8 to metastack              / (+2)
851A 0B          / Store meta 01/02 to M8
851B 8F 10       / Add #$10 to M8
851D B0          / Replace M8 with 2-byte value      /      Nation - Cannon factories
851E B4          / Pull 2 meta to MC                 / (-2)
851F C8          / Check if M8 > MC
8520 D8 2D 85    / Jump to $852D if not

8523 0B          / Store meta 01/02 to M8
8524 8F 10       / Add #$10 to M8
8526 B3          / Push M8 to metastack             /  (+2)
8527 04          / Store meta 15/16 to M8
8528 8C C8 00    / Store #$00C8 to MC
852B B5          / Multiply M8 by MC
852C B1          / Pull 2 meta and store M8         /  (-2) Increase cannon factories

852D 0B          / Store meta 01/02 to M8
852E 8F 10       / Add #$10 to M8
8530 B0          / Replace M8 with 2-byte value
8531 29          / Store M8 to meta 05/06
8532 D8 70 85    / Jump to $8570 if zero

8535 0B          / Store meta 01/02 to M8
8536 78          / Add #$08 to M8
8537 B0          / Replace M8 with 2-byte value     /       Nation - Total Gold
8538 28          / Store M8 to meta 07/08
8539 09          / Store meta 05/06 to M8
853A 18          / Store meta 07/08 to MC
853B C7          / Check if M8<=MC
853C D8 47 85    / Jump to $8547 if not

853F 08          / Store meta 07/08 to M8
8540 19          / Store meta 05/06 to MC
8541 BC          / Subtract MC from M8
8542 27          / Store M8 to meta 09/10
8543 09          / Store meta 05/06 to M8
8544 D6 4D 85    / Jump to $854D

8547 08          / Store meta 07/08 to M8
8548 8B 32       / Store #$32 to MC               /  50
854A BA          / M8 mod MC
854B 27          / Store M8 to meta 09/10
854C 08          / Store meta 07/08 to M8

854D 8B 32       / Store #$32 to MC
854F B8          / Divide M8 by MC
8550 26          / Store M8 to meta 11/12
8551 0B          / Store meta 01/02 to M8
8552 78          / Add #$08 to M8
8553 B3          / Push M8 to metastack          / (+2)
8554 07          / Store meta 09/10 to M8
8555 B1          / Pull 2 meta, store M8 to it   / (-2) Alter Nation Gold
8556 42          / Store #$02 to M8
8557 CD          / Swap M8 and MC
8558 04          / Store meta 15/16 to M8
8559 B5          / Multiply M8 by MC
855A 24          / Store M8 to meta 15/16
855B 8E 0F 27    / Push #$270F to metastack      / (+2)
855E 34          / Push meta 15/16 to metastack  / (+2)
855F 04          / Store meta 15/16 to M8
8560 15          / Store meta 13/14 to MC
8561 BC          / Subtract MC from M8
8562 B3          / Push M8 to metastack          / (+2)
8563 36          / Push meta 11/12 to metastack  / (+2)
8564 E9 CA DD 06 / Run function $DDCA            / (-6) 
8568 B3          / Push M8 to metastack          / (+2)
8569 0B          / Store meta 01/02 to M8
856A 7E          / Add #$0E to M8
856B B3          / Push M8 to metastsack         / (+2) Nation - Cannons
856C E9 2C DE 06 / Run function $DE2C            / (-6)

8570 03          / Store meta 17/18 to M8
8571 D0          / Increment M8
8572 23          / Store M8 to meta 17/18
8573 D1          / 
8574 0B          / Store meta 01/02 to M8
8575 8F 12       / Add #$12 to M8
8577 2B          / Store M8 to meta 01/02
8578 8F EE       /
857A 03          / Store meta 17/18 to M8
857B 5F          / Store #$0F to MC
857C C6          / Check if M8<MC
857D D7 E9 84    / Jump to $84E9 if so

8580 CF          / Exit

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8580    20 09 E5 F2 FF 8A 76 71 2A 40 25 0A 72 D6 8A
8590 86 09 77 D3 28 63 60 39 E9 7A D1 04 B3 E9 60 D4
85A0 04 27 8D 32 07 5F B5 8F 14 B3 38 E9 CA DD 06 26
85B0 08 8B 1E C8 D7 89 86 07 53 C0 D7 89 86 6F 09 7E
85C0 D3 B3 E9 60 D4 04 57 C0 D7 89 86 6F 09 7E D3 B3
85D0 E9 60 D4 04 56 C0 D7 89 86 06 8B 15 C8 D7 89 86
85E0 06 52 BE B3 4F B4 BC B3 8D 64 E9 D1 D7 02 B4 C6
85F0 D8 89 86 09 72 D3 B3 E9 7C B2 02 2B D8 89 86 61
8600 E9 7F D2 02 39 E9 85 D0 02 B3 8E C4 B4 E9 38 C6
8610 04 3A E9 4F D0 02 B3 05 D0 B3 8E CC B4 E9 38 C6
8620 06 3B E9 19 D0 02 B3 8E D3 B4 E9 38 C6 04 8D 1B
8630 E9 9F CD 02 62 E9 62 C0 02 3A 39 E9 4C C3 04 3B
8640 39 8E B3 A5 8E E0 00 62 E9 79 DD 0A 09 72 B3 0B
8650 8C 68 70 BC 8B 12 B8 D4 09 73 B3 0B 76 B0 B3 E9
8660 6E C2 02 8C 76 71 BC 8B 1C B8 D4 09 77 B3 09 77
8670 D3 B3 89 64 B4 BC D4 63 39 E9 F1 C2 04 3A 8E 5A
8680 B7 8E E0 00 62 E9 79 DD 08 09 B0 29 09 D7 91 85
8690 05 D0 25 D1 0A 8F 1C 2A 8F E4 05 8B 2E C6 D7 8C
86A0 85 CF

FUNCTION $8581 (F2 FF) $8586-$86A1
Checks for defections

8586 8A 76 71    / Store #$7176 to M8
8589 2A          / Store M8 to meta 03/04
858A 40          / Store #$00 to M8
858B 25          / Store M8 to meta 13/14

858C 0A          / Store meta 03/04 to M8
858D 72          / Add #$02 to M8
858E D6 8A 86    / Jump to $868A

8591 09          / Store meta 05/06 to M8            /      Current officer
8592 77          / Add #$07 to M8
8593 D3          / Replace M8 with 1-byte value      /      Loyalty 
8594 28          / Store M8 to meta 07/08
8595 63          / Push #$03 to metastack            / (+2)
8596 60          / Push #$00 to metastack            / (+2)
8597 39          / Push meta 05/06 to metastack      / (+2)
8598 E9 7A D1 04 / Run function $D17A                / (-4) Get personality stats
859C B3          / Push M8 to metastack              / (+2)
859D E9 60 D4 04 / Run function $D460                / (-4) Isolate allegiance rank
85A1 27          / Store M8 to meta 09/10

85A2 8D 32       / Push #$32 to metastack            / (+2)
85A4 07          / Store meta 09/10 to M8
85A5 5F          / Store #$0F to MC
85A6 B5          / Multiply M8 by MC
85A7 8F 14       / Add #$14 to M8
85A9 B3          / Push M8 to metastack              / (+2)
85AA 38          / Push meta 07/08 to metastack      / (+2)
85AB E9 CA DD 06 / Run function $DDCA                / (-6)
85AF 26          / Store M8 to meta 11/12

85B0 08          / Store meta 07/08 to M8 
85B1 8B 1E       / Store #$1E to MC
85B3 C8          / Check if M8 > MC
85B4 D7 89 86    / Jump to $8689 if so 

85B7 07          / Store meta 09/10 to M8 
85B8 53          / Store #$03 to MC
85B9 C0          / Check if M8=MC
85BA D7 89 86    / Jump to $8689 if so

85BD 6F          / Push #$0F to metastack            / (+2)
85BE 09          / Store meta 05/06 to M8                   Current officer
85BF 7E          / Add #$0E to M8 
85C0 D3          / Replace M8 with 1-byte value             Status
85C1 B3          / Push M8 to metastack              / (+2)
85C2 E9 60 D4 04 / Run function $D460                / (-4) Isolate lower bits
85C6 57          / Store #$07 to MC 
85C7 C0          / Check if M8=MC
85C8 D7 89 86    / Jump to $8689 if so              

85CB 6F          / Push #$0F to metastack            / (+2)
85CC 09          / Store meta 05/06 to M8
85CD 7E          / Add #$0E to M8
85CE D3          / Replace M8 with 1-byte value      
85CF B3          / Push M8 to metastack              / (+2)
85D0 E9 60 D4 04 / Run function $D460                / (-4) Isolate lower bits
85D4 56          / Store #$06 to MC                  
85D5 C0          / Check if M8=MC
85D6 D7 89 86    / Jump to $8689 if so

85D9 06          / Store meta 11/12 to M8
85DA 8B 15       / Store #$15 to MC
85DC C8          / Check if M8 > MC
85DD D7 89 86    / Jump to $8689 if so

85E0 06          / Store meta 11/12 to M8
85E1 52
85E2 BE          / Divide M8 by 4
85E3 B3          / Push M8 to metastack              / (+2)
85E4 4F          / Store #$0F to M8
85E5 B4          / Pull 2 from meta to MC            / (-2)
85E6 BC          / Subtract MC from M8
85E7 B3          / Push M8 to metastack              / (+2)
85E8 8D 64       / Push #$64 to metastack            / (+2)
85EA E9 D1 D7 02 / Run function $D7D1                / (-2)
85EE B4          / Pull 2 meta to MC                 / (-2)
85EF C6          / Check if M8 < MC
85F0 D8 89 86    / Jump to $8689 if not     

85F3 09          / Store meta 05/06 to M8            
85F4 72          / Add #$02 to M8
85F5 D3          / Replace M8 with 1-byte value
85F6 B3          / Push M8 to metastack              / (+2) Nation
85F7 E9 7C B2 02 / Run function $B27C                / (-2)
85FB 2B          / Store M8 to meta 01/02
85FC D8 89 86    / Jump to $8689 if zero

85FF 61          / Push #$01 to metastack            / (+2)
8600 E9 7F D2 02 / Run function $D27F                / (-2) Text pos #$01

8604 39          / Push meta 05/06 to metastack      / (+2)
8605 E9 85 D0 02 / Run function $D085                / (-2) Name of officer
8609 B3          / Push M8 to metastack              / (+2)
860A 8E C4 B4    / Push $B4C4 to metastack           / (+2)
860D E9 38 C6 04 / Run function $C638                / (-2) Print "[Officer] of"

8611 3A          / Push meta 03/04 to metastack      / (+2)
8612 E9 4F D0 02 / Run function $D04F                / (-2) Name of city
8616 B3          / Push M8 to metastack              / (+2)
8617 05          / Store meta 13/14 to M8
8618 D0          / Increment M8
8619 B3          / Push M8 to metastack              / (+2)
861A 8E CC B4    / Push #$B4CC to metastack          / (+2)
861D E9 38 C6 06 / Run function $C638                / (-6) Print "[#]:[City]"

8621 3B          / Push meta 01/02 to metastack      / (+2)
8622 E9 19 D0 02 / Run function $D019                / (-2) Retrieve name of nation
8626 B3          / Push M8 to metastack              / (+2)
8627 8E D3 B4    / Push #$B4D3 to metastack          / (+2)
862A E9 38 C6 04 / Run function $C638                / (-4) Print "has rebelled and defected to [nation]"

862E 8D 1B       / Push #$1B to metastack            / (+2)
8630 E9 9F CD 02 / Run function $CD9F                / (-2) Play sound effect #$1B
8634 62          / Push #$02 to metastack            / (+2)
8635 E9 62 C0 02 / Run function $C062                / (-2) Wait 2 time units for input

8639 3A          / Push meta 03/04 to metastack      / (+2)
863A 39          / Push meta 05/06 to metastack      / (+2)
863B E9 4C C3 04 / Run function $C34C                / (-4) Remove officer from city

863F 3B          / Push meta 01/02 to metastack      / (+2) 
8640 39          / Push meta 05/06 to metastack      / (+2)
8641 8E B3 A5    / Push #$A5B3 to metastack          / (+2)
8644 8E E0 00    / Push #$E0 to metastack            / (+2)
8647 62          / Push #$02 to metastack            / (+2)
8648 E9 79 DD 0A / Run function $DD79                / (-A) Add to target nation's reserve list

864C 09          / Store meta 05/06 to M8
864D 72          / Add #$02 to M8
864E B3          / Push M8 to metastack              / (+2)
864F 0B          / Store meta 01/02 to M8
8650 8C 68 70    / Store #$7068 to MC
8653 BC          / Subtract MC from M8
8654 8B 12       / Store #$12 to MC
8656 B8          / Divide M8 by MC
8657 D4          / Pull 2 meta, store MC to M8       / (-2) Change officer's nation stat

8658 09          / Store meta 05/06 to M8
8659 73          / Add #$03 to M8
865A B3          / Push M8 to metastack              / (+2)
865B 0B          / Store meta 01/02 to M8
865C 76          / Add #$06 to M8
865D B0          / Replace M8 with 2-byte value      /      Nation ruler
865E B3          / Push M8 to metastack              / (+2)
865F E9 6E C2 02 / Run function $C26E                / (-2) Get city of officer
8663 8C 76 71    / Store #$7176 to MC
8666 BC          / Subtract MC from M8
8667 8B 1C       / Store #$1C to MC
8669 B8          / Divide M8 by MC
866A D4          / Pull 2 meta, store M8 to it       / (-2) Change city to that of nation ruler

866B 09          / Store meta 05/06 to M8
866C 77          / Add #$07 to M8
866D B3          / Push M8 to metastack              / (+2) Officer - Loyalty
866E 09          / Store meta 05/06 to M8
866F 77          / Add #$07 to M8
8670 D3          / Replace M8 with 1-byte value
8671 B3          / Push M8 to metastack              / (+2)
8672 89 64       / Store #$64 to M8
8674 B4          / Pull 2 meta to MC                 / (-2)
8675 BC          / Subtract MC from M8
8676 D4          / Pull 2 meta, store M8 to it       / (-2) New Loyalty = 100-(Old Loyalty)

8677 63          / Push #$03 to metastack            / (+2)
8678 39          / Push meta 05/06 to metastack      / (+2)
8679 E9 F1 C2 04 / Run function $C2F1                / (-4) Set Rank to #$03 (Reserve officer)

867D 3A          / Push meta 03/04 to metastack      / (+2)
867E 8E 5A B7    / Push #$B75A to metastack          / (+2)
8681 8E E0 00    / Push #$E0 to metastack            / (+2)
8684 62          / Push #$02 to metastack            / (+2)
8685 E9 79 DD 08 / Run function $DD79                / (-8)

8689 09          / Store meta 05/06 to M8
868A B0          / Replace M8 with 2-byte value      /      Advance to next officer
868B 29          / Store M8 to meta 05/06

868C 09          / Store meta 05/06 to M8
868D D7 91 85    / Jump to $8591 if not zero

8690 05          / Store meta 13/14 to M8            /      Nation counter 


     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8680 B7 8E E0 00 62 E9 79 DD 08 09 B0 29 09 D7 91 85
8690 05 D0 25 D1 0A 8F 1C 2A 8F E4 05 8B 2E C6 D7 8C
86A0 85 CF
	 
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
86A0       20 09 E5 B8 FF 8A 76 71 2B 40 85 C0 0B 72
86B0 B0 50 C0 D7 1F 88 0B 8F 14 B0 85 C8 3B E9 02 D4
86C0 02 83 C8 BB 51 BE 85 C6 0B 8F 10 B0 85 C4 81 C6
86D0 83 C4 C7 D8 E3 86 0B 8F 10 B3 81 C4 83 C6 BC B1
86E0 D6 1F 88 81 C6 83 C4 BC 85 C2 0B 8F 10 B3 40 B1
86F0 81 C8 D8 19 87 81 C8 83 C2 C9 D8 0B 87 0B 8F 14
8700 B3 81 C8 83 C2 BC B1 40 D6 17 87 0B 8F 14 B3 40
8710 B1 81 C8 CD 81 C2 BC 85 C2 81 C2 D8 04 88 DE CB
8720 FF 85 DA DE DC FF 29 40 85 BA 0B 72 D6 67 87 0A
8730 79 D3 D8 66 87 81 DA D0 85 DA D1 B3 8D 32 68 60
8740 3A E9 7A D1 04 B3 E9 60 D4 04 8B 19 B5 8F 32 B3
8750 0A 7D D3 B3 E9 CA DD 06 D4 09 72 29 8F FE B3 0A
8760 B1 81 BA D0 85 BA 0A B0 2A 0A D7 2F 87 40 D6 FA
8770 87 DE CB FF 85 DA D3 A2 CA FF 40 85 B8 40 85 BC
8780 D6 A5 87 A0 CA FF B3 81 DA D3 B4 C6 D8 99 87 81
8790 BC 85 B8 81 DA D3 A2 CA FF 81 BC D0 85 BC D1 81
87A0 DA D0 85 DA D1 81 BC 83 BA C6 D7 83 87 DE CB FF
87B0 B3 81 B8 B4 BB B3 8A FF 00 D4 DE DC FF B3 81 B8
87C0 D2 B4 BB B0 2A 0A 79 D3 B3 81 C2 B4 C7 D8 E2 87
87D0 81 C2 B3 0A 79 B3 E9 77 DE 04 3A E9 33 82 02 D6
87E0 04 88 0A 79 D3 CD 81 C2 BC 85 C2 3A 8E 59 A5 8E
87F0 E0 00 62 E9 79 DD 08 81 BE D0 85 BE 81 BE 83 BA
8800 C6 D7 71 87 0B 72 D6 19 88 8D 5B E9 D1 D7 02 7A
8810 B3 0A 7D B3 E9 B6 D3 04 0A B0 2A 0A D7 09 88 81
8820 C0 D0 85 C0 D1 0B 8F 1C 2B 8F E4 81 C0 8B 2E C6
8830 D7 AE 86 CF

FUNCTION $86A2 (B8 FF) $86A7-$8833

86A7 8A 76 71    / Store #$7176 to M8
86AA 2B          / Store M8 to meta 01/02

86AB 40          / Store #$00 to M8
86AC 85 C0       / Store M8 to meta 63/64
86AE 0B          / Store meta 01/02 to M8
86AF 72          / Add #$02
86B0 B0          / Replace M8 with 2-byte value
86B1 50          / Store #$00 to MC
86B2 C0          / Check if M8 = MC                  / Check if city empty
86B3 D7 1F 88    / Jump to $881F if so

86B6 0B          / Store meta 01/02 to M8
86B7 8F 14       / Add #$14 to M8
86B9 B0          / Replace M8 with 2-byte value      / Soldier reserves
86BA 85 C8       / Store M8 to meta 55/56

86BC 3B          / Push meta 01/02 to metastack      / (+2)
86BD E9 02 D4 02 / Run function $D402                / (-2) # of men assigned
86C1 83 C8       / 
86C3 BB          / Add MC to M8
86C4 51   
86C5 BE          / Divide M8 by 2
86C6 85 C6       / Store M8 to meta 57/58            /      Total men / 2

86C8 0B          / Store meta 01/02 to M8
86C9 8F 10       / Add #$10 to M8
86CB B0          / Replace M8 with 2-byte value      /      Food
86CC 85 C4       / Store M8 to meta 59/60

86CE 81 C6       / Store meta 57/58 to M8
86D0 83 C4       / Store meta 59/60 to MC            /   
86D2 C7          / Check if M8 ≤ MC                  / (Men/2) ≤ Food
86D3 D8 E3 86    / Jump to $86E3 if not

86D6 0B          / Store meta 01/02 to M8
86D7 8F 10       / Add #$10 to M8  
86D9 B3          / Push M8 to metastack              / (+2)
86DA 81 C4       / Store meta 59/60 to M8
86DC 83 C6       / Store meta 57/58 to MC
86DE BC          / Subtract MC from M8
86DF B1          / Pull 2 meta, store M8 to address  / (-2) Consume food 
86E0 D6 1F 88    / Jump to $881F

86E3 81 C6       / Store meta 57/58 to M8
86E5 83 C4       / Store meta 59/60 to MC
86E7 BC          / Subtract MC from M8
86E8 85 C2       / Store M8 to meta 61/62

86EA 0B          / Store meta 01/02 to M8
86EB 8F 10       / Add #$10 to M8
86ED B3          / Push M8 to metastack              / (+2)
86EE 40          / Store #$00 to M8
86EF B1          / Pull 2 meta, store M8 to address  / (-2) Deplete all food

86F0 81 C8       / Store meta 55/56 to M8            /      Reserves
86F2 D8 19 87    / Jump to $8719 if zero

86F5 81 C8       / Store meta 55/56 to M8
86F7 83 C2       / Store meta 61/62 to MC
86F9 C9          / Check if M8 ≥ MC
86FA D8 0B 87    / Jump to $870B if not

86FD 0B          / Store meta 01/02 to M8
86FE 8F 14       / Add #$14 to M8
8700 B3          / Push M8 to metastack              / (+2)
8701 81 C8       / Store meta 55/56 to M8
8703 83 C2       / Store meta 61/62 to MC
8705 BC          / Subtract MC from M8
8706 B1          / Pull 2 meta, store M8 to address  / (-2) Reduce reserves
8707 40          / Store #$00 to M8
8708 D6 17 87    / Jump to $8717

870B 0B          / Store meta 01/02 to M8
870C 8F 14       / Add #$14 to M8
870E B3          / Push M8 to metastack              / (+2)
870F 40          / Store #$00 to M8
8710 B1          / Pull 2 meta, store M8 to address  / (-2) Deplete reserves
8711 81 C8       / Store meta 55/56 to M8
8713 CD          / Swap M8 and MC
8714 81 C2       / Store meta 61/62 to M8
8716 BC          / Subtract MC from M8 
8717 85 C2       / Store M8 to meta 61/62

8719 81 C2       / Store meta 61/62 to M8
871B D8 04 88    / Jump to $8804 if zero

871E DE CB FF    / Store address of meta 52/53 to M8
8721 85 DA       / Store M8 to meta 37/38

8723 DE DC FF    / Store address of meta 35/36 to M8
8726 29          / Store M8 to meta 05/06

8727 40          / Store #$00 to M8
8728 85 BA       / Store M8 to meta 53/54

872A 0B          / Store meta 01/02 to M8
872B 72          / Add #$02 to M8
872C D6 67 87    / Jump to $8767

------------------
Loop

872F 0A          / Store meta 03/04 to M8            / Current officer
8730 79          / Add #$09 to M8
8731 D3          / Replace M8 with 1-byte value      / Men
8732 D8 66 87    / Jump to $8766 if zero

8735 81 DA       / Store meta 37/38 to M8
8737 D0          / Increment M8
8738 85 DA       / Store M8 to meta 37/38
873A D1          / Decrement M8
873B B3          / Push M8 to metastack              / (+2)
873C 8D 32       / Push #$32 to metastack            / (+2)
873E 68          / Push #$08 to metastack            / (+2)
873F 60          / Push #$00 to metastack            / (+2)
8740 3A          / Push preloaded 03/04 to metastack / (+2)
8741 E9 7A D1 04 / Run function $D17A                / (-4) Personality stat
8745 B3          / Push M8 to metastack              / (+2)
8746 E9 60 D4 04 / Run function $D460                / (-4) Charm stat
874A 8B 19       / Store #$19 to MC
874C B5          / Multiply M8 by MC                 /    
874D 8F 32       / Add #$32 to M8                    /      50 (+25 if charm)
874F B3          / Push M8 to metastack              / (+2)
8750 0A          / Store meta 03/04 to M8
8751 7D          / Add #$0D to M8
8752 D3          / Replace M8 with 1-byte value      /      Morale
8753 B3          / Push M8 to metastack              / (+2)
8754 E9 CA DD 06 / Run function $DDCA                / (-6)
8758 D4          / Pull 2 meta, store $0008          / (-2)
8759 09          / Store meta 05/06 to M8
875A 72          / Add #$02 to M8
875B 29          / Store M8 to meta 05/06
875C 8F FE       / Add #$FE to M8
875E B3          / Push M8 to metastack              / (+2)
875F 0A          / Store meta 03/04 to M8
8760 B1          / Pull 2 meta, store 2-byte value   / (-2)

8761 81 BA       / Store meta 69/70 to M8
8763 D0          / Increment M8
8764 85 BA       / Store M8 to meta 69/70
8766 0A          / Store meta 03/04 to M8
------------------
8767 B0          / Replace M8 with 2-byte value
8768 2A          / Store M8 to meta 03/04
8769 0A          / Store meta 03/04 to M8
876A D7 2F 87    / Jump to $872F if nonzero

876D 40          / Store #$00 to M8
876E D6 FA 87    / Jump to $87FA
------------------
Loop 1

8771 DE CB FF    / Store address of meta 52/53 to M8
8774 85 DA       / Store M8 to meta 37/38
8776 D3          / Replace M8 with 1-byte value
8777 A2 CA FF    / Store $0008 to meta 54
877A 40          / Store #$00 to M8
877B 85 B8       / Store M8 to meta 71/72
877D 40          / Store #$00 to M8
877E 85 BC       / Store M8 to meta 67/68
8780 D6 A5 87    / Jump to $87A5
-------------------
Loop 2

8783 A0 CA FF    / Store meta 54 to $0008
8786 B3          / Push M8 to metastack              / (+2)
8787 81 DA       / Store meta 37/38 to M8
8789 D3          / Replace M8 with 1-byte value
878A B4          / Pull 2 meta to MC                 / (-2)
878B C6          / Check if M8 < MC
878C D8 99 87    / Jump to $8799 if not

878F 81 BC       / Store meta 67/68 to M8
8791 85 B8       / Store M8 to meta 71/72
8793 81 DA       / Store meta 37/38 to M8
8795 D3          / Replace M8 with 1-byte value
8796 A2 CA FF    / Store $0008 to meta 54

8799 81 BC       / Store meta 67/68 to M8
879B D0          / Increment M8
879C 85 BC       / Store M8 to meta 67/68
879E D1          / Decrement M8

879F 81 DA       / Store meta 37/38 to M8
87A1 D0          / Increment M8
87A2 85 DA       / Store M8 to meta 37/38
87A4 D1          / Decrement M8
-------------------
87A5 81 BC       / Store meta 67/68 to M8
87A7 83 BA       / Store meta 69/70 to MC
87A9 C6          / Check if M8 < MC
87AA D7 83 87    / Jump to $8783 if so

87AD DE CB FF    / Store address of meta 52/53 to M8
87B0 B3          / Push M8 to metastack              / (+2)
87B1 81 B8       / Store meta 71/72 to M8
87B3 B4          / Pull 2 meta to MC                 / (-2)
87B4 BB          / Add M8 to MC
87B5 B3          / Push M8 to metastack              / (+2)
87B6 8A FF 00    / Store #$FF to M8
87B9 D4          / Pull 2 meta, store $0008 to it

87BA DE DC FF    / Store address of meta 35/36 to M8 
87BD B3          / Push M8 to metastack              / (+2)
87BE 81 B8       / Store meta 71/72 to M8
87C0 D2          / Double M8
87C1 B4          / Pull 2 meta to MC                 / (-2)
87C2 BB          / Add M8 to MC
87C3 B0          / Replace M8 with 2-byte value
87C4 2A          / Store M8 to meta 03/04

87C5 0A          / Store meta 03/04 to M8
87C6 79          / Add #$09 to M8
87C7 D3          / Replace M8 with 1-byte value
87C8 B3          / Push M8 to metastack              / (+2)
87C9 81 C2       / Store meta 61/62 to M8
87CB B4          / Pull 2 meta to MC                 / (-2)
87CC C7          / Check if M8 ≤ MC
87CD D8 E2 87    / Jump to $87E2 if not

87D0 81 C2       / Store meta 61/62 to M8
87D2 B3          / Push M8 to metastack              / (+2)
87D3 0A          / Store meta 03/04 to M8
87D4 79          / Add #$09 to M8
87D5 B3          / Push M8 to metastack              / (+2)
87D6 E9 77 DE 04 / Run functon $DE77                 / (-4)

87DA 3A          / Push meta 03/04 to metastack      / (+2)
87DB E9 33 82 02 / Run function $8233                / (-2)
87DF D6 04 88    / Jump to $8804

87E2 0A          / Store meta 03/04 to M8
87E3 79          / Add #$09 to M8
87E4 D3          / Replace M8 with 1-byte value
87E5 CD          / Swap M8 and MC

87E6 81 C2       / Store meta 61/62 to M8
87E8 BC          / Subtract MC from M8
87E9 85 C2       / Store M8 to meta 61/62 

87EB 3A          / Push preloaded 03/04 to metastack / (+2)
87EC 8E 59 A5    / Push #$A559 to metastack          / (+2)
87EF 8E E0 00    / Push #$E0 to metastack            / (+2)
87F2 62          / Push #$02 to metastack            / (+2)
87F3 E9 79 DD 08 / Run function $DD79                / (-8)

87F7 81 BE       / Store meta 65/66 to M8 
87F9 D0          / Increment M8
------------------
87FA 85 BE       / Store M8 to meta 65/66

87FC 81 BE       / Store meta 65/66 to M8
87FE 83 BA       / Store meta 69/70 to MC
8800 C6          / Check if M8 < MC
8801 D7 71 87    / Jump to $8771 if so 

8804 0B          / Store meta 01/02 to M8
8805 72          / Add #$02 to M8
8806 D6 19 88    / Jump to $8819
------------------
Loop
8809 8D 5B       / Push #$5B to metastack
880B E9 D1 D7 02 / Run function $D7D1                / (-2)
880F 7A          / Add #$0A to M8                    /      RNG 10-100
8810 B3          / Push M8 to metastack              / (+2)
8811 0A          / Store meta 03/04 to M8
8812 7D          / Add #$0D to M8
8813 B3          / Push M8 to metastack              / (+2)
8814 E9 B6 D3 04 / Run function $D3B6                / (-2) Reduce by %
8818 0A          / Store meta 03/04 to M8
------------------
8819 B0          / Replace M8 with 2-byte value
881A 2A          / Store M8 to meta 03/04
881B 0A          / Store meta 03/04 to M8
881C D7 09 88    / Jump to $8809 if nonzero
881F 81 C0       / Store meta 63/64 to M8
8821 D0          / Increment M8
8822 85 C0       / Store M8 to meta 63/64
8824 D1          / Decrement M8
8825 0B          / Store meta 01/02 to M8
8826 8F 1C       / Add #$1C to M8
8828 2B          / Store M8 to meta 01/02
8829 8F E4       / Add #$E4 to M8
882B 81 C0       / Store meta 63/64 to M8
882D 8B 2E       / Store #$2E to MC
882F C6          / Check if M8 < MC
8830 D7 AE 86    / Jump to $86AE if nonzero

8833 CF          / Exit

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8830             20 09 E5 F2 FF 8A 68 70 2B 40 25 0B
8840 D6 91 88 0A 8F 1B D3 51 DA D8 90 88 0A 8F 10 B0
8850 29 0A 8F 14 B0 B3 3A E9 02 D4 02 B3 64 65 0A 75
8860 B0 B3 E9 CA DD 06 B4 BB B4 BB 28 38 DE FA FF B3
8870 E9 6E DE 04 65 64 39 E9 CA DD 06 26 36 0A 8F 10
8880 B3 E9 6E DE 04 8E 50 C3 36 0B 7A B3 E9 2C DE 06
8890 0A B0 2A 0A D7 43 88 05 D0 25 D1 0B 8F 12 2B 8F
88A0 EE 05 5F C6 D7 3F 88 CF

FUNCTION $8834 (F2 FF) $8839-$88A7



====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
88A0                         20 09 E5 F5 FF 8A 76 71
88B0 2B 40 2A 0B 7B D3 A2 FB FF 0B 7C D3 A2 FA FF 0B
88C0 7D D3 A2 F8 FF A0 FB FF 8B 55 C8 D8 E5 88 8D 64
88D0 A0 FB FF 7F B3 A0 F8 FF B3 E9 0F DE 04 B3 E9 D6
88E0 DC 04 D6 02 89 A0 FB FF 8B 4B C8 D8 F4 88 A0 F8
88F0 FF D6 02 89 A0 FB FF 8F 19 B3 A0 F8 FF B3 E9 0F
8900 DE 04 A2 F7 FF A0 FA FF 8B 5F C8 D8 25 89 8D 64
8910 A0 FA FF 75 B3 A0 F8 FF B3 E9 0F DE 04 B3 E9 D6
8920 DC 04 D6 42 89 A0 FA FF 8B 41 C8 D8 34 89 A0 F8
8930 FF D6 42 89 A0 FA FF 8F 23 B3 A0 F8 FF B3 E9 0F
8940 DE 04 A2 F6 FF 42 CD A0 F8 FF B8 A2 F8 FF A0 F8
8950 FF B3 0B 77 D3 B4 C8 D8 66 89 A0 F8 FF B3 0B 77
8960 D3 B4 BC D6 67 89 40 A2 F5 FF 47 CD A0 F5 FF B8
8970 A2 F5 FF 0B 7D B3 8D 64 A0 F5 FF B3 A0 F6 FF B3
8980 A0 F7 FF B4 BB 51 BE B4 BB B3 E9 D6 DC 04 D4 0A
8990 D0 2A D1 0B 8F 1C 2B 8F E4 0A 8B 2E C6 D7 B3 88
89A0 CF

FUNCTION $88A8 (F5 FF) $88AD-$89A0

88AD 8A 76 71    / Store #$7176 to M8
88B0 2B          / Store M8 to meta 01/02

88B1 40          / Store #$00 to M8
88B2 2A          / Store M8 to meta 03/04

88B3 0B          / Store meta 01/02 to M8
88B4 7B          / Add #$0B to M8 
88B5 D3          / Replace M8 with 1-byte value      / Food sufficiency
88B6 A2 FB FF    / Store $0008 to meta 05

88B9 0B          / Store meta 01/02 to M8
88BA 7C          / Add #$0C to M8
88BB D3          / Replace M8 with 1-byte value      / Material sufficiency
88BC A2 FA FF    / Store $0008 to meta 06

88BF 0B          / Store meta 01/02 to M8
88C0 7D          / Add #$0D to M8
88C1 D3          / Replace M8 with 1-byte value      / Medical Development
88C2 A2 F8 FF    / Store $0008 to meta 08

88C5 A0 FB FF    / Store meta 05 to $0008
88C8 8B 55       / Store #$55 to MC
88CA C8          / Check if M8 > MC                  / Check if food suff > 85
88CB D8 E5 88    / Jump to $88E5 if not

88CE 8D 64       / Push #$64 to metastack            / (+2)
88D0 A0 FB FF    / Store meta 05 to $0008
88D3 7F          / Add #$0F to M8
88D4 B3          / Push M8 to metastack              / (+2)
88D5 A0 F8 FF    / Store meta 08 to $0008            /      Medical Development
88D8 B3          / Push M8 to metastack              / (+2)
88D9 E9 0F DE 04 / Run function $DE0F                / (-4) [Food suff+15]% of med dev
88DD B3          / Push M8 to metastack              / (+2)
88DE E9 D6 DC 04 / Run function $DCD6                / (-4) Get smaller value
88E2 D6 02 89    / Jump to $8902

88E5 A0 FB FF    / Store meta 05 to $0008
88E8 8B 4B       / Store #$4B to MC
88EA C8          / Check if M8 > MC                  / Check if food suff > 75
88EB D8 F4 88    / Jump to $88F4 if not

88EE A0 F8 FF    / Store meta 08 to $0008            / Med dev
88F1 D6 02 89    / Jump to $8902

88F4 A0 FB FF    / Store meta 05 to $0008
88F7 8F 19       / Add #$19 to M8
88F9 B3          / Push M8 to metastack              / (+2)
88FA A0 F8 FF    / Store meta 08 to $0008
88FD B3          / Push M8 to metastack              / (+2)
88FE E9 0F DE 04 / Run function $DE0F                / (-4)

8902 A2 F7 FF    / Store $0008 to meta 09

8905 A0 FA FF    / Store meta 06 to $0008

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8900 DE 04 A2 F7 FF A0 FA FF 8B 5F C8 D8 25 89 8D 64
8910 A0 FA FF 75 B3 A0 F8 FF B3 E9 0F DE 04 B3 E9 D6
8920 DC 04 D6 42 89 A0 FA FF 8B 41 C8 D8 34 89 A0 F8
8930 FF D6 42 89 A0 FA FF 8F 23 B3 A0 F8 FF B3 E9 0F
8940 DE 04 A2 F6 FF 42 CD A0 F8 FF B8 A2 F8 FF A0 F8
8950 FF B3 0B 77 D3 B4 C8 D8 66 89 A0 F8 FF B3 0B 77
8960 D3 B4 BC D6 67 89 40 A2 F5 FF 47 CD A0 F5 FF B8
8970 A2 F5 FF 0B 7D B3 8D 64 A0 F5 FF B3 A0 F6 FF B3
8980 A0 F7 FF B4 BB 51 BE B4 BB B3 E9 D6 DC 04 D4 0A
8990 D0 2A D1 0B 8F 1C 2B 8F E4 0A 8B 2E C6 D7 B3 88
89A0 CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
89A0    20 09 E5 F6 FF 8A 76 71 2B 40 28 67 0B 77 B3
89B0 E9 B6 D3 04 0B 74 D3 5E C0 D7 ED 89 64 0B 8F 1A 
89C0 B3 E9 B6 D3 04 0B 78 29 0B 75 B0 8C FA 00 B8 2A
89D0 09 D3 1A C8 D8 DD 89 66 39 E9 B6 D3 04 09 D0 29
89E0 09 D3 1A C8 D8 ED 89 63 39 E9 B6 D3 04 08 D0 28 
89F0 D1 0B 8F 1C 2B 8F E4 08 8B 2E C6 D7 AC 89 CF

FUNCTION $89A1 (F6 FF) $89A6-$89FE

89A6 8A 76 71    / Store #$7176 to M8
89A9 2B          / Store M8 to meta 01/02
89AA 40          / Store #$00 to M8
89AB 28          / Store M8 to meta 07/08
89AC 67          / Push #$07 to metastack            (+2)
89AD 0B          / Store meta 01/02 to M8
89AE 77          / Add #$07 to M8
89AF B3          / Push M8 to metastack              (+2) City - Hospital address
89B0 E9 B6 D3 04 / Run function $D3B6                (-4) Reduce by 7%

89B4 0B          / Store meta 01/02 to M8
89B5 74          / Add #$04 to M8
89B6 D3          / Replace M8 with 1-byte value           Nation
89B7 5E          / Store #$0E to MC
89B8 C0          / Check if M8=MC                         Check if England
89B9 D7 ED 89    / Jump to $89ED                    

89BC 64          / Push #$04 to metastack            (+2)
89BD 0B          / Store meta 01/02 to M8
89BE 8F 1A       / Add #$1A to M8
89C0 B3          / Push M8 to metastack              (+2)
89C1 E9 B6 D3 04 / Run function $D3B6                (-4) Reduce by 4%

89C5 0B          / Store meta 01/02 to M8
89C6 78          / Add #$08 to M8
89C7 29          / Store M8 to meta 05/06                 Industry Address

89C8 0B          / Store meta 01/02 to M8
89C9 75          / Add #$05 to M8
89CA B0          / Replace M8 with 2-byte value           Population
89CB 8C FA 00    / Store #$00FA to MC                     250
89CE B8          / Divide M8 by MC                        
89CF 2A          / Store M8 to meta 03/04

89D0 09          / Store meta 05/06 to M8
89D1 D3          / Replace M8 with 1-byte value           Industry
89D2 1A          / Store meta 03/04 to MC
89D3 C8          / Check if M8 > MC                       Industry > Population/250
89D4 D8 DD 89    / Jump to $89DD if not

89D7 66          / Push #$06 to metastack            (+2)
89D8 39          / Push meta 05/06 to metastack      (+2) Industry address
89D9 E9 B6 D3 04 / Run function $D3B6                (-4) Reduce by 6%

89DD 09          / Store meta 05/06 to M8
89DE D0          / Increment M8
89DF 29          / Store M8 to meta 05/06                 Advance to trade

89E0 09          / Store meta 05/06 to M8
89E1 D3          / Replace M8 with 1-byte value           Trade
89E2 1A          / Store meta 03/04 to MC                 
89E3 C8          / Check if M8 > MC                       Trade > Population/250
89E4 D8 ED 89    / Jump to $89ED if not
89E7 63          / Push #$03 to metastack            (+2)
89E8 39          / Push meta 05/06 to metastack      (+2)
89E9 E9 B6 D3 04 / Run function $D3B6                (-4) Reduce by 3%

89ED 08          / Store meta 07/08 to M8 
89EE D0          / Increment M8
89EF 28          / Store M8 to meta 07/08
89F0 D1
89F1 0B          / Store meta 01/02 to M8
89F2 8F 1C       / Add #$1C to M8
89F4 2B          / Store M8 to meta 01/02
89F5 8F E4

89F7 08          / Store meta 07/08 to M8
89F8 8B 2E       / Store #$2E to MC
89FA C6          / Check if M8 < MC
89FB D7 AC 89    / Jump to $89AC if so
89FE CF          / Exit

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
89F0                                              20
8A00 09 E5 F6 FF 41 D6 7F 8A A0 F6 FF 8B 12 B5 8C 68
8A10 70 BB 2B 0B B0 50 C1 D8 7B 8A A0 F6 FF 5E C0 D8
8A20 26 8A 42 D6 27 8A 41 85 FB A0 F6 FF 5F B5 8C F6
8A30 6E BB D3 A2 FD FF 45 85 F9 A0 FD FF 8C F0 00 DA
8A40 D9 02 00 10 00 4D 8A 20 00 8B 8A 58 8A A0 FD FF
8A50 5F DA D8 8B 8A 42 85 F9 8D 64 A5 EA 6F 83 FB B5
8A60 83 F9 B5 B3 E9 D6 DC 04 85 F7 8D 64 81 F7 B3 A0
8A70 F6 FF 8C D7 6F BB B3 E9 3B DE 06 A0 F6 FF D0 A2
8A80 F6 FF A0 F6 FF 5F C6 D7 08 8A CF 43 D6 56 8A	

FUNCTION $89FF (F6 FF) $8A04-$8A8E

8A04 41          / Store #$01 to M8
8A05 D6 7F 8A    / Jump to $8A7F
------------------
Loop

8A08 A0 F6 FF    / Store meta 10 to $0008
8A0B 8B 12       / Store #$12 to MC
8A0D B5          / Multiply M8 by MC
8A0E 8C 68 70    / Store #$7068 to MC
8A11 BB          / Add MC to M8
8A12 2B          / Store M8 to meta 01/02            / Current nation
8A13 0B          / Store meta 01/02 to M8
8A14 B0          / Replace M8 with 2-byte value      / First city
8A15 50          / Store #$00 to MC
8A16 C1          / Check if M8 is different than MC  / Check if nation exists
8A17 D8 7B 8A    / Jump to $8A7B if not

8A1A A0 F6 FF    / Store meta 10 to $0008
8A1D 5E          / Store #$0E to M8
8A1E C0          / Check if M8 = MC                  / Check if England
8A1F D8 26 8A    / Jump to $8A26 if not

8A22 42          / Store #$02 to M8
8A23 D6 27 8A    / Jump to $8A27

8A26 41          / Store #$01 to M8

8A27 85 FB       / Store M8 to meta 04/05 

8A29 A0 F6 FF    / Store meta 10 to $0008
8A2C 5F          / Store #$0F to MC
8A2D B5          / Multiply M8 by MC
8A2E 8C F6 6E    / Store #$6EF6 to MC 
8A31 BB          / Add MC to M8
8A32 D3          / Replace M8 with 1-byte value      / Diplomacy w/ France
8A33 A2 FD FF    / Store M8 to meta 03

8A36 45          / Store #$05 to M8
8A37 85 F9       / Store M8 to meta 06/07

8A39 A0 FD FF    / Store meta 03 to $0008
8A3C 8C F0 00    / Store #$F0 to MC
8A3F DA          / M8 AND MC                         
8A40 D9 02 00    /
     10 00 4D 8A / Jump to $8A4D if nation is friendly w/ France 
	 20 00 8B 8A / Jump to $8A8B if nation if hostile w/ France
	       58 8A / Else jump to $8A58
		   
8A4D A0 FD FF    / Store meta 03 to $0008
8A50 5F          / Store #$0F to MC
8A51 DA          / M8 AND MC                         / Check for alliance timer
8A52 D8 8B 8A    / Jump to $8A8B if zero            

8A55 42          / Store #$02 to M8
8A56 85 F9       / Store M8 to meta 06/07

8A58 8D 64       / Push #$64 to metastack            / (+2)
8A5A A5 EA 6F    / Store $6FEA to $0008              /      Scenario
8A5D 83 FB 
8A5F B5          / Multiply M8 by MC
8A60 83 F9       
8A62 B5          / Multiply M8 by MC
8A63 B3          / Push M8 to metastack              / (+2)
8A64 E9 D6 DC 04 / Run function $DCD6                / (-4) Max at 100
8A68 85 F7       / Store M8 to meta 08/09

8A6A 8D 64       / Push #$64 to metastack            / (+2)
8A6C 81 F7       / Store meta 08/09 to M8
8A6E B3          / Push M8 to metastack              / (+2)
8A6F A0 F6 FF    / Store meta 10 to $0008
8A72 8C D7 6F    / Store #$6FD7 to MC
8A75 BB          / Add MC to M8
8A76 B3          / Push M8 to metastack              / (+2)
8A77 E9 3B DE 06 / Run function $DE3B                / (-6) Increase up to max
8A7B A0 F6 FF    / Store meta 10 to $0008
8A7E D0          / Increment M8
------------------
8A7F A2 F6 FF    / Store $0008 to meta 10            / Nation counter
8A82 A0 F6 FF    / Store meta 10 to $0008
8A85 5F          / Store #$0F to MC
8A86 C6          / Check if M8 < MC
8A87 D7 08 8A    / Jump to $8A08 if so
8A8A CF          / Exit

8A8B 43          / Store #$03 to M8
8A8C D6 56 8A    / Jump to $8A56

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8A70 F6 FF 8C D7 6F BB B3 E9 3B DE 06 A0 F6 FF D0 A2

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8A80                                              20
8A90 09 E5 F9 FF 41 A2 FB FF 8A 76 71 2B 40 85 F9 0B
8AA0 72 B0 50 C0 D7 12 8B 0B 7B D3 A2 FD FF 0B 7C D3
8AB0 A2 FC FF A0 FD FF 8B 32 C7 D8 D2 8A A0 FD FF 55
8AC0 B8 B3 89 14 B4 BC B3 8D 64 E9 D1 D7 02 B4 C6 D7
8AD0 F1 8A A0 FC FF 8B 28 C7 D8 12 8B A0 FC FF 55 B8
8AE0 B3 89 12 B4 BC B3 8D 64 E9 D1 D7 02 B4 C6 D8 12
8AF0 8B 68 0B 8F 1B B4 B3 D3 DB D4 A0 FB FF D8 09 8B
8B00 67 E9 70 83 02 40 A2 FB FF 60 3B 8E F3 B4 E9 A3
8B10 82 06 81 F9 D0 85 F9 D1 0B 8F 1C 2B 8F E4 81 F9
8B20 8B 2E C6 D7 9F 8A AC 50 83 CF

FUNCTION $8A8F (F9 FF) $8A94-$8B29

Meta 01/02 = Current City
Meta 03    = City food sufficiency
Meta 04    = City material sufficiency
Meta 05    = Flagged if graphics haven't been loaded yet
Meta 06/07 = City counter

8A94 41          / Store #$01 to M8
8A95 A2 FB FF    / Store $0008 to meta 05
8A98 8A 76 71    / Store #$7671 to M8
8A9B 2B          / Store M8 to meta 01/02
8A9C 40          / Store #$00 to M8
8A9D 85 F9       / Store M8 to meta 06/07

8A9F 0B          / Store meta 01/02 to M8
8AA0 72          / Add #$02 to M8
8AA1 B0          / Replace M8 with 2-byte value       / City commander
8AA2 50          / Store #$00 to MC
8AA3 C0          / Check if M8 = MC                   / Check if city is deserted
8AA4 D7 12 8B    / Jump to $8B12 if so

8AA7 0B          / Store meta 01/02 to M8
8AA8 7B          / Add #$0B to M8
8AA9 D3          / Replace M8 with 1-byte value       / City food sufficiency
8AAA A2 FD FF    / Store $0008 to meta 03
8AAD 0B          / Store meta 01/02 to M8
8AAE 7C          / Add #$0B to M8
8AAF D3          / Replace M8 with 1-byte value       / City material suffiency
8AB0 A2 FC FF    / Store $0008 to meta 04
8AB3 A0 FD FF    / Store meta 03 to $0008
8AB6 8B 32       / Store #$32 to MC                   / 50
8AB8 C7          / Check if M8 <= MC                  / Check if food suffiency is 50 or less
8AB9 D8 D2 8A    / Jump to $8AD2 if not

8ABC A0 FD FF    / Store meta 03 to $0008
8ABF 55          / Store #$05 to MC
8AC0 B8          / Divide M8 by MC
8AC1 B3          / Push M8 to metastack               / (+2)
8AC2 89 14       / Store #$14 to M8
8AC4 B4          / Pull 2 values from meta to MC      / (-2)
8AC5 BC          / Subtract MC from M8                /      20 - (Food suffiency/5)
8AC6 B3          / Push M8 to metastack               / (+2)
8AC7 8D 64       / Push #$0064 to metastack           / (+2)
8AC9 E9 D1 D7 02 / Run function $D7D1                 / (-2) RNG #$00-#$63
8ACD B4          / Pull 2 values from meta to MC      / (-2)
8ACE C6          / Check if M8 < MC    
8ACF D7 F1 8A    / Jump to $8AF1 if so                

8AD2 A0 FC FF    / Store meta 04 to $0008
8AD5 8B 28       / Store #$28 to MC                   / 40
8AD7 C7          / Check if M8 <= MC                  / Check if material sufficiency is 40 or less
8AD8 D8 12 8B    / Jump to $8B12 if not

8ADB A0 FC FF    / Store meta 04 to $0008
8ADE 55          / Store #$05 to MC
8ADF B8          / Divide M8 by MC
8AE0 B3          / Push M8 to metastack               / (+2)
8AE1 89 12       / Store #$12 to M8
8AE3 B4          / Pull 2 values from meta to MC      / (-2)
8AE4 BC          / Subtract MC from M8                /      18 - (Mat sufficiency/5)
8AE5 B3          / Push M8 to metastack               / (+2)
8AE6 8D 64       / Push #$0064 to metastack           / (+2)
8AE8 E9 D1 D7 02 / Run function $D7D1                 / (-2) RNG #$00-#$63
8AEC B4          / Pull 2 values from meta to MC      / (-2)
8AED C6          / Check if M8 < MC
8AEE D8 12 8B    / Jump to $8B12 if not

8AF1 68          / Push #$0008 to metastack           / (+2)
8AF2 0B          / Store meta 01/02 to M8
8AF3 8F 1B       / Add #$1B to M8
8AF5 B4          / Pull 2 values from meta to MC      / (-2)
8AF6 B3          / Push M8 to metastsack              / (+2)
8AF7 D3          / Replace M8 with 1-byte value       /      City status
8AF8 DB          / MC ORA M8
8AF9 D4          / Pull 2 meta, store M8 to it        / (-2) Turn on 0000 0100 flag
8AFA A0 FB FF    / Store meta 05 to $0008
8AFD D8 09 8B    / Jump to $8B09 if it's zero         /      If graphics already loaded

8B00 67          / Push #$0007 to metastack           / (+2)
8B01 E9 70 83 02 / Run function $8370                 / (-2) Load event icon #$07
8B05 40          / Store #$00 to M8
8B06 A2 FB FF    / Store M8 to meta 05                /      Turn off flag

8B09 60          / Push #$0000 to metastack           / (+2)
8B0A 3B          / Push meta 01/02 to metastack       / (+2)
8B0B 8E F3 B4    / Push #$B4F3 to metastack           / (+2)
8B0E E9 A3 82 06 / Run function $82A3                 / (-6) Print "Labor strike in (#):(City)"
8B12 81 F9       / Store meta 06/07 to M8 
8B14 D0          / Increment M8
8B15 85 F9       / Store M8 to meta 06/07
8B17 D1          / Decrement M8 

8B18 0B          / Store meta 01/02 to M8
8B19 8F 1C       / Add #$1C to M8
8B1B 2B          / Store M8 to meta 01/02
8B1C 8F E4       / Add #$E4 to M8

8B1E 81 F9       / Store M8 to meta 06/07
8B20 8B 2E       / Store #$2E to MC
8B22 C6          / Check if MC>M8
8B23 D7 9F 8A    / Jump to $8A9F if so

8B26 AC 50 83    / Run function $8350

8B29 CF          / Exit
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8B20                               20 09 E5 F4 FF 8A
8B30 76 71 2B 40 26 0B 7A D3 D0 2A 0B 75 B0 8B 4B B8
8B40 D0 29 6F 39 65 3A E9 CA DD 06 B3 E9 D6 DC 04 28
8B50 8E 0F 27 38 0B 75 B0 B3 E9 0F DE 04 B3 0B 75 B3
8B60 E9 2C DE 06 06 D0 26 D1 0B 8F 1C 2B 8F E4 06 8B
8B70 2E C6 D7 35 8B CF

FUNCTION $8B2A (F4 FF) $8B2F-$8B75

Increase the population of every city by an amount
determined by its farming stat & current population.

8B2F 8A 76 71    / Store #$7176 to M8
8B32 2B          / Store M8 to meta 01/02            / Current city

8B33 40          / Store #$00 to M8
8B34 26          / Store M8 to meta 11/12

8B35 0B          / Store meta 01/02 to M8
8B36 7A          / Add #$0A to M8
8B37 D3          / Replace M8 with 1-byte value      / Farming
8B38 D0          / Increment M8
8B39 2A          / Store M8 to meta 03/04

8B3A 0B          / Store meta 01/02 to M8 
8B3B 75          / Add #$05 to M8
8B3C B0          / Replace M8 with 2-byte value      / Population
8B3D 8B 4B       / Store #$4B to MC                  / 75
8B3F B8          / Divide M8 by MC
8B40 D0          / Increment M8
8B41 29          / Store M8 to meta 05/06

8B42 6F          / Push #$0F to metastack            / (+2)
8B43 39          / Push meta 05/06 to metastack      / (+2)
8B44 65          / Push #$05 to metastack            / (+2)
8B45 3A          / Push meta 03/04 to metastack      / (+2)
8B46 E9 CA DD 06 / Run function $DDCA                / (-6) (5*(Farming+1))/((Population/75)+1)
8B4A B3          / Push M8 to metastack              / (+2)
8B4B E9 D6 DC 04 / Run function $DCD6                / (-4) Find smaller value
8B4F 28          / Store M8 to meta 07/08

8B50 8E 0F 27    / Push #$270F to metastack          / (+2)
8B53 38          / Push meta 07/08 to metastack      / (+2)
8B54 0B          / Store meta 01/02 to M8
8B55 75          / Add #$05 to M8
8B56 B0          / Replace M8 with 2-byte value
8B57 B3          / Push M8 to metastack              / (+2)
8B58 E9 0F DE 04 / Run function $DE0F                / (-4) Take percentage of population
8B5C B3          / Push M8 to metastack              / (+2)
8B5D 0B          / Store meta 01/02 to M8
8B5E 75          / Add #$05 to M8
8B5F B3          / Push M8 to metastack              / (+2)
8B60 E9 2C DE 06 / Run function $DE2C                / (-6) Add to population up to 9999

8B64 06          / Store meta 11/12 to M8
8B65 D0          / Increment M8
8B66 26          / Store M8 to meta 11/12
8B67 D1          / Decrement M8

8B68 0B          / Store meta 01/02 to M8
8B69 8F 1C       / Add #$1C to M8
8B6B 2B          / Store M8 to meta 01/02
8B6C 8F E4       / Add #$E4 to M8 (subtract #$1C)

8B6E 06          / Store meta 11/12 to M8
8B6F 8B 2E       / Store #$2E to MC
8B71 C6          / Check if M8 < MC
8B72 D7 35 8B    / Jump to $8B35 if so

8B75 CF          / Exit

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8B70                   20 09 E5 F2 FF 8A 05 60 28 40
8B80 25 6F 08 7E D3 B3 E9 60 D4 04 50 C0 D8 AE 8C A4
8B90 E6 6F 90 02 F9 B3 61 38 E9 7A D1 04 B4 C7 D8 AE
8BA0 8C 38 E9 6E C2 02 29 08 72 D3 8B 12 B5 8C 68 70
8BB0 BB 2B 63 60 38 E9 7A D1 04 B3 E9 60 D4 04 A2 F7
8BC0 FF 40 A2 F4 FF 09 72 B0 50 C0 D8 E8 8B 0B B0 50
8BD0 C1 D8 2B 8C A0 F7 FF 8B 19 B5 8F 19 B3 8D 64 E9
8BE0 D1 D7 02 B4 C6 D6 28 8C 39 E9 D2 C2 02 2A 1B C1
8BF0 D8 27 8C 8D 64 E9 D1 D7 02 A2 F6 FF A0 F7 FF 8C
8C00 09 B5 BB D3 B3 A0 F6 FF B4 C6 D8 2B 8C A0 F7 FF
8C10 8C 05 B5 BB D3 B3 A0 F6 FF B4 C6 D8 20 8C 0A 2B
8C20 0B B0 50 C1 D8 2B 8C 41 A2 F4 FF A0 F4 FF D8 AE
8C30 8C 0B 72 B0 B3 E9 3B D4 02 5F C6 D8 AE 8C 08 77
8C40 D3 B3 8D 64 E9 D1 D7 02 B4 C6 D8 AE 8C 3B 38 8E
8C50 B3 A5 8E E0 00 62 E9 79 DD 0A 63 38 E9 F1 C2 04
8C60 0B 8C 68 70 C0 D8 AE 8C 08 73 D3 A2 F5 FF 61 E9
8C70 7F D2 02 38 E9 85 D0 02 B3 8E 0D B5 E9 27 C6 04
8C80 A0 F5 FF 8B 1C B5 8C 76 71 BB B3 E9 4F D0 02 B3
8C90 A0 F5 FF D0 B3 8E 14 B5 E9 27 C6 06 8E 21 B5 E9
8CA0 E9 C3 02 8D 1A E9 9F CD 02 62 E9 62 C0 02 05 D0
8CB0 25 D1 08 7F 28 8F F1 05 8C FF 00 C6 D7 81 8B CF

Meta 01/02 Nation of officer's city

Meta 05/06 Current officer city
Meta 07/08 Current officer
Meta 09    Current officer allegiance


Meta 12
Meta 13/14 Current officer #

FUNCTION $8B76 (F2 FF) $8B7B-$8BCF
8B7B 8A 05 60    / Store #$6005 to M8
8B7E 28          / Store M8 to meta 07/08
8B7F 40          / Store #$0000 to M8
8B80 25          / Store M8 to meta 13/14            
8B81 6F          / Push #$000F to metastack          / (+2)
8B82 08          / Store meta 07/08 to M8            
8B83 7E          / Add #$0E to M8                    
8B84 D3          / Replace M8 with 1-byte value      /      Officer Status
8B85 B3          / Push M8 to metastack              / (+2)
8B86 E9 60 D4 04 / Run function $D460                / (-4) Isolate 00001111
8B8A 50          / Store #$00 to MC                  /      Free Agent?
8B8B C0          / Check if M8=MC
8B8C D8 AE 8C    / Jump to $8CAE if not
8B8F A4 E6 6F    / Store $6FE6/$6FE7 to M8           /      Year
8B92 90 02 F9    / Add #$F902 to M8                  /      Subtract 1790
8B95 B3          / Push M8 to metastack              / (+2) Years passed
8B96 61          / Push #$0001 to metastack          / (+2) #$01
8B97 38          / Push meta 07/08 to metastack      / (+2) Current officer
8B98 E9 7A D1 04 / Run function $D17A                / (-4) Retrieve appearance date
8B9C B4          / Pull 2 meta values to MC          / (-2)
8B9D C7          / Check if M8 ≤ MC                         Determine if Officer should appear yet
8B9E D8 AE 8C    / Jump to $8CAE if not
8BA1 38          / Push meta 07/08 to metastack      / (+2)
8BA2 E9 6E C2 02 / Run function $C26E                / (-2) Retrieve city address of officer
8BA6 29          / Store M8 to meta 05/06
8BA7 08          / Store meta 07/08 to M8
8BA8 72          / Add #$02 to M8
8BA9 D3          / Replace M8 with 1-byte value      /      Nation
8BAA 8B 12       / Store #$12 to MC
8BAC B5          / Multiply M8 by MC
8BAD 8C 68 70    / Store #$7068 to MC
8BB0 BB          / Add MC to M8
8BB1 2B          / Store M8 to meta 01/02           
8BB2 63          / Push #$0003 to metastack          / (+2)
8BB3 60          / Push #$0000 to metastack          / (+2)
8BB4 38          / Push meta 07/08 to metastack      / (+2) Officer
8BB5 E9 7A D1 04 / Run function $D17A                / (-4) Retrieve personality stat
8BB9 B3          / Push M8 to metastack              / (+2) 
8BBA E9 60 D4 04 / Run function $D460                / (-2) Get allegiance value
8BBE A2 F7 FF    / Store $0008 to meta 09
8BC1 40          / Store #$0000 to M8
8BC2 A2 F4 FF    / Store $0008 to meta 12
8BC5 09          / Store meta 05/06 to M8            /      Officer city
8BC6 72          / Add #$02 to M8
8BC7 B0          / Replace M8 with 2-byte value      /      City commander
8BC8 50          / Store #$00 to MC
8BC9 C0          / Check M8 = MC                     /      Check if city deserted
8BCA D8 E8 8B    / Jump to $8BE8 if not
8BCD 0B          / Store meta 01/02 to M8
8BCE B0          / Replace M8 with 2-byte value      /      Nation first city
8BCF 50          / Store #$00 to MC
8BD0 C1          / Check if M8 is different than MC  /      If Nation doesnt exist
8BD1 D8 2B 8C    / Jump to $8C2B if not
8BD4 A0 F7 FF    / Store meta 09 to $0008
8BD7 8B 19       / Store #$19 to MC
8BD9 B5          / Multiply M8 by MC
8BDA 8F 19       / Add #$19 to M8
8BDC B3          / Push M8 to metastack              / (+2)
8BDD 8D 64       / Push #$0064 to metastack          / (+2)
8BDF E9 D1 D7 02 / Run function $D7D1                / (-2) RNG #$00-#$63
8BE3 B4          / Pull 2 values from meta to MC     / (-2)
8BE4 C6          / Check if M8 < MC
8BE5 D6 28 8C    / Jump to $8C28
8BE8 39          / Push preloaded 05/06 to metastack / (+2) If city is not deserted
8BE9 E9 D2 C2 02 / Run function $C2D2                / (-2) Retrieve nation of city
8BED 2A          / Store M8 to meta 03/04
8BEE 1B          / Store meta 01/02 to MC
8BEF C1          / Check if M8 is different than MC
8BF0 D8 27 8C    / Jump to $8C27 if not
8BF3 8D 64       / Push #$0064 to metastack          / (+2)
8BF5 E9 D1 D7 02 / Run function $D7D1                / (-2) RNG #$00-#$63
8BF9 A2 F6 FF    / Store $0008 to meta 10
8BFC A0 F7 FF    / Store meta 09 to $0008
8BFF 8C 09 B5    / Store #$B509 to MC
8C02 BB          / Add MC to M8
8C03 D3          / Replace M8 with 1-byte value             Allegiance - Recruit %
8C04 B3          / Push M8 to metastack              / (+2)
8C05 A0 F6 FF    / Store meta 10 to $0008
8C08 B4          / Pull 2 values from meta to MC     / (-2)
8C09 C6          / Check if M8 < MC
8C0A D8 2B 8C    / Jump to $8C2B if not
8C0D A0 F7 FF    / Store meta 09 to $0008
8C10 8C 05 B5    / Store #$B505 to MC
8C13 BB          / Add MC to M8 
8C14 D3          / Replace M8 with 1-byte value
8C15 B3          / Push M8 to metastack              / (+2)
8C16 A0 F6 FF    / Store meta 10 to $0008
8C19 B4          / Pull 2 values from meta to MC     / (-2)
8C1A C6          / Check if M8 < MC
8C1B D8 20 8C    / Jump to $8C20 if not
8C1E 0A          / Store meta 03/04 to M8
8C1F 2B          / Store M8 to meta 01/02
8C20 0B          / Store meta 01/02 to M8
8C21 B0          / Replace M8 with 2-byte value
8C22 50          / Store #$00 to MC
8C23 C1          / Check if M8 is different than MC
8C24 D8 2B 8C    / Jump to $8C2B if not
8C27 41          / Store #$01 to M8
8C28 A2 F4 FF    / Store $0008 to meta 12
8C2B A0 F4 FF    / Store meta 12 to $0008
8C2E D8 AE 8C    / Jump to $8CAE if zero
8C31 0B          / Store meta 01/02 to M8
8C32 72          / Add #$02 to M8
8C33 B0          / Replace M8 with 2-byte value
8C34 B3          / Push M8 to metastack              / (+2)
8C35 E9 3B D4 02 / Run function $D43B                / (-2) # of officers
8C39 5F          / Store #$0F to M8
8C3A C6          / Check if M8 < MC
8C3B D8 AE 8C    / Jump to $8CAE if not
8C3E 08          / Store meta 07/08 to M8
8C3F 77          / Add #$07 to M8
8C40 D3          / Replace M8 with 1-byte value
8C41 B3          / Push M8 to metastack              / (+2)
8C42 8D 64       / Push #$0064 to metastack          / (+2)
8C44 E9 D1 D7 02 / Run function $D7D1                / (-2) RNG #$00-#$63
8C48 B4          / Pull 2 meta to MC                 / (-2)
8C49 C6          / Check if M8 < MC
8C4A D8 AE 8C    / Jump to $8CAE if not      
8C4D 3B          / Push meta 01/02 to metastack      / (+2)
8C4E 38          / Push meta 07/08 to metastack      / (+2)
8C4F 8E B3 A5    / Push #$A5B3 to metastack          / (+2)
8C52 8E E0 00    / Push #$00E0 to metastack          / (+2)
8C55 62          / Push #$0002 to metastack          / (+2)
8C56 E9 79 DD 0A / Run function $DD79                / (-A)
8C5A 63          / Push #$0003 to metastack          / (+2)
8C5B 38          / Push meta 07/08 to metastack      / (+2)
8C5C E9 F1 C2 04 / Run function $C2F1                / (-4) Set upper flags of officer
8C60 0B          / Store meta 01/02 to M8
8C61 8C 68 70    / Store #$7068 to MC
8C64 C0          / Check if M8 = MC
8C65 D8 AE 8C    / Jump to $8CAE if not
8C68 08          / Store meta 07/08 to M8
8C69 73          / Add #$03 to M8
8C6A D3          / Replace M8 with 1-byte value
8C6B A2 F5 FF    / Store $0008 to meta 11
8C6E 61          / Push #$0001 to metastack         / (+2)
8C6F E9 7F D2 02 / Run function $D27F               / (-2)
8C73 38          / Push meta 07/08 to metastack     / (+2)
8C74 E9 85 D0 02 / Run function $D085               / (-2) Officer name
8C78 B3          / Push M8 to metastack             / (+2)
8C79 8E 0D B5    / Push #$B50D to metastack         / (+2)
8C7C E9 27 C6 04 / Run function $C627               / (-4) Print "(Name) of "
8C80 A0 F5 FF    / Store meta 11 to $0008
8C83 8B 1C       / Store #$1C to MC
8C85 B5          / Multiply M8 by MC
8C86 8C 76 71    / Store #$7176 to MC
8C89 BB          / Add MC to M8
8C8A B3          / Push M8 to metastack             / (+2)
8C8B E9 4F D0 02 / Run function $D04F               / (-2)
8C8F B3          / Push M8 to metastack             / (+2) Name of city
8C90 A0 F5 FF    / Store meta 11 to $0008
8C93 D0          / Increment M8
8C94 B3          / Push M8 to metastack             / (+2)  # of city
8C95 8E 14 B5    / Push #$B514 to metastack         / (+2) 
8C98 E9 27 C6 06 / Run function $C627               / (-6) Print "(City #):(City) joined "
8C9C 8E 21 B5    / Push #$B521 to metastack         / (+2) 
8C9F E9 E9 C3 02 / Run function $C3E9               / (-2) Print "the French reserves"
8CA3 8D 1A       / Push #$001A to metastack         / (+2)
8CA5 E9 9F CD 02 / Run function $CD9F               / (-2) Play sound effect #$1A
8CA9 62          / Push #$0002 to metastack         / (+2)
8CAA E9 62 C0 02 / Run function $C062               / (-2) Wait 2 time units for input
8CAE 05          / Store meta 13/14 to M8
8CAF D0          / Increment M8
8CB0 25          / Store M8 to meta 13/14
8CB1 D1          / Decrement M8
8CB2 08          / Store meta 07/08 to M8
8CB3 7F          / Add #$0F to M8
8CB4 28          / Store M8 to meta 07/08
8CB5 8F F1       / Add #$F1 to M8                     (??)
8CB7 05          / Store meta 13/14 to M8
8CB8 8C FF 00    / Store #$00FF to MC
8CBB C6          / Check if M8 < MC
8CBC D7 81 8B    / Jump to $8B81 if so
8CBF CF          / Exit

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8CC0 20 09 E5 F0 FF 8A 76 71 2B 40 2A 0B 78 D3 D0 29
8CD0 0B 8F 1B D3 58 DA D8 DE 8C 09 51 BE D0 29 0B 75
8CE0 B0 28 0B 7C D3 B3 38 E9 0F DE 04 27 0B 72 B0 50
8CF0 C0 D7 22 8D 0B 8F 1B D3 8C 80 00 DA D8 0A 8D 09
8D00 8B 11 B5 26 09 53 BD D6 12 8D 09 53 BD 26 09 8B
8D10 11 B5 25 8E 0F 27 36 0B 8F 12 B3 E9 2C DE 06 D6
8D20 27 8D 09 8B 11 B5 25 07 D2 53 B8 15 BB 24 0B 7C
8D30 B3 8D 64 38 8D 64 34 E9 CA DD 06 B3 E9 D6 DC 04
8D40 D4 0A D0 2A D1 0B 8F 1C 2B 8F E4 0A 8B 2E C6 D7
8D50 CB 8C CF

FUNCTION $8CC0 (F0 FF) $8CC5-$8DC2

8CC5 8A 76 71    / Store $7176 to M8
8CC8 2B          / Store M8 to meta 01/02            / City
8CC9 40          / Store #$00 to M8
8CCA 2A          / Store M8 to meta 03/04            / City Counter
8CCB 0B          / Store meta 01/02 to M8
8CCC 78          / Add #$08 to M8
8CCD D3          / Replace M8 with 1-byte value      / City - Industry
8CCE D0          / Increment M8
8CCF 29          / Store M8 to meta 05/06            / Industry+1
8CD0 0B          / Store meta 01/02 to M8
8CD1 8F 1B       / Add #$1B to M8
8CD3 D3          / Replace M8 with 1-byte value      / City - Status
8CD4 58          / Store #$08 to MC
8CD5 DA          / M8 AND MC                         
8CD6 D8 DE 8C    / Jump to $8CDE if zero             / Check if "Industry halted" flag is set

 8CD9 09         / Store meta 05/06 to M8
 8CDA 51         / 
 8CDB BE         / Divide M8 by 2
 8CDC D0         / Increment M8                      
 8CDD 29         / Store M8 to meta 05/06            / floor((Industry+1)/2)+1

8CDE 0B          / Store meta 01/02 to M8
8CDF 75          / Add #$05 to M8
8CE0 B0          / Replace M8 with 2-byte value      /
8CE1 28          / Store M8 to meta 07/08            / City - Population
8CE2 0B          / Store meta 01/02 to M8
8CE3 7C          / Add #$0C to M8
8CE4 D3          / Replace M8 with 1-byte value      / City - Material Sufficiency
8CE5 B3          / Push M8 to metastack              / (+2) Material Sufficiency
8CE6 38          / Push meta 07/08 to metastack      / (+2) Population
8CE7 E9 0F DE 04 / Run function $DE0F                / (-4) (Population*Material Suffiency)/100
8CEB 27          / Store M8 to meta 09/10
8CEC 0B          / Store meta 01/02 to M8
8CED 72          / Add #$02 to M8
8CEE B0          / Replace M8 with 2-byte value
8CEF 50          / Store #$00 to MC
8CF0 C0          / Check if M8=MC                   / Check if city is deserted
8CF1 D7 22 8D    / Jump to $8D22 if so
 
 8CF4 0B         / Store meta 01/02 to M8
 8CF5 8F 1B      / Add #$1B to M8
 8CF7 D3         / Replace M8 with 1-byte value     / City - Status
 8CF8 8C 80 00   / Store #$0080 to MC
 8CFB DA         / M8 AND MC                        / Check if "Material supply low" flag is set
 8CFC D8 0A 8D   / Jump to $8D0A if not
 
  8CFF 09        / Store meta 05/06 to M8           / Adjusted industry value
  8D00 8B 11     / Store #$11 to MC
  8D02 B5        / Multiply M8 by MC
  8D03 26        / Store M8 to meta 11/12
  8D04 09        / Store M8 to meta 05/06
  8D05 53        / 
  8D06 BD        / Multiply M8 by 8
  8D07 D6 12 8D  / Jump to $8D12
  
 8D0A 09         / Store meta 05/06 to M8
 8D0B 53         / 
 8D0C BD         / Multiply M8 by 8
 8D0D 26         / Store M8 to meta 11/12
 8D0E 09         / Store M8 to meta 05/06
 8D0F 8B 11      / Store #$11 to MC
 8D11 B5         / Multiply M8 by MC
 
 8D12 25         / Store M8 to meta 13/14
 8D13 8E 0F 27   / Push #$270F to metastack          / (+2) 9999
 8D16 36         / Push meta 11/12 to metastack      / (+2) Multiplied industry value
 8D17 0B         / Store meta 01/02 to M8
 8D18 8F 12      / Add #$12 to M8
 8D1A B3         / Push M8 to metastack              / (+2) Materials
 8D1B E9 2C DE 06/ Run function $DE2C                / (-6) Add adjusted industry value to city materials up to a max of 9999
 8D1F D6 27 8D   / Jump to $8D27

8D22 09          / Store meta 05/06 to M8
8D23 8B 11       / Store #$11 to MC
8D25 B5          / Multiply M8 by MC
8D26 25          / Store M8 to meta 13/14

8D27 07          / Store meta 09/10 to M8            / (Population * Material Sufficiency)/100
8D28 D2          / Double M8
8D29 53          / Store #$3 to MC
8D2A B8          / Divide M8 by MC
8D2B 15          / Store meta 13/14 to MC          
8D2C BB          / Add MC to M8
8D2D 24          / Store M8 to meta 15/16

8D2E 0B          / Store meta 01/02 to M8
8D2F 7C          / Add #$0C to M8
8D30 B3          / Push M8 to metastack              / (+2) City - Material Sufficiency
8D31 8D 64       / Push #$0064 to metastack          / (+2)
8D33 38          / Push meta 07/08 to metastack      / (+2)\ City Population
8D34 8D 64       / Push #$0064 to metastack          / (+2)\
8D36 34          / Push meta 15/16 to metastack      / (+2)\ Adjusted industry value + (Population * Material Sufficiency)/150
8D37 E9 CA DD 06 / Run function $DDCA                / (-6)/ 
8D3A 06          / Store meta 11/12 to M8            /       Adjusted industry value
8D3B B3          / Push M8 to metastack              / (+2)
BD3C E9 D6 DC 04 / Run function $DCD6                / (-4) Find smaller of two values
BD40 D4          / Pull 2 meta, store M8 to address  / (-2) Update Material Sufficiency
BD41 0A          / Store meta 03/04 to M8
BD42 D0          / Increment M8
BD43 2A          / Store M8 to meta 03/04            /      Update counter
BD44 D1          / 
BD45 0B          / Store meta 01/02 to M8
BD46 8F 1C       / Add #$1C to M8
BD48 2B          / Store M8 to meta 01/02            /      Update city
BD49 8F E4       /
BD4B 0A          / Store meta 03/04 to M8
BD4C 8B 2E       / Store #$2E to MC
BD4E C6          / Check if M8<MC
BD4F D7 CB 8C    / Jump to $CBD7 if so
BD52 CF          / Exit

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8D50          20 09 E5 EC FF 8A 76 71 2B 40 2A 0B 75
8D60 B0 29 0B 7B D3 28 38 39 E9 0F DE 04 27 0B 8F 10
8D70 B0 26 0B 72 B0 50 C0 D7 8C 8D 0B 8F 1B D3 8B 40
8D80 DA D8 8C 8D 09 51 BE 25 05 D6 8D 8D 09 52 BE D0
8D90 24 07 53 B5 52 BE 14 BB 23 06 14 C9 D8 AC 8D 34
8DA0 0B 8F 10 B4 B3 B0 BC B1 03 D6 B9 8D 0B 8F 10 B3
8DB0 40 B1 07 53 B5 52 BE 16 BB 22 0B 7B B3 39 8D 64
8DC0 32 E9 CA DD 06 B3 8D 64 E9 D6 DC 04 D4 0A D0 2A
8DD0 D1 0B 8F 1C 2B 8F E4 0A 8B 2E C6 D7 5E 8D CF

FUNCTION $8D53 (EC FF) $8D58-$8DDE

Meta 01/02 Current City
Meta 03/04 City Counter
Meta 05/06 Population
Meta 07/08 Food Suffiency
Meta 09/10 Fed Population (Population * Food Sufficiency)/100
Meta 11/12 Food 
Meta 13/14 Population / 2 (if city is unoccupied or food supply is low)
Meta 15/16 Population / (4 or 8)

8D58 8A 76 71    / Store #$7176 to M8
8D5B 2B          / Store M8 to meta 01/02
8D5C 40          / Store #$00 to M8
8D5D 2A          / Store M8 to meta 03/04

8D5E 0B          / Store meta 01/02 to M8
8D5F 75          / Add #$05 to M8
8D60 B0          / Replace M8 with 2-byte value       /      Population
8D61 29          / Store M8 to meta 05/06

8D62 0B          / Store meta 01/02 to M8
8D63 7B          / Add #$0B to M8
8D64 D3          / Replace M8 with 1-byte value       /      Food Sufficiency
8D65 28          / Store M8 to meta 07/08

8D66 38          / Push meta 07/08 to metastack       / (+2)
8D67 39          / Push meta 05/06 to metastack       / (+2)
8D68 E9 0F DE 04 / Run function $DE0F                 / (-4)
8D6C 27          / Store M8 to meta 09/10

8D6D 0B          / Store meta 01/02 to M8
8D6E 8F 10       / Add #$10 to M8
8D70 B0          / Replace M8 with 2-byte value       /      Food
8D71 26          / Store M8 to meta 11/12

8D72 0B          / Store meta 01/02 to M8
8D73 72          / Add #$02 to M8
8D74 B0          / Replace M8 with 2-byte value       /      Commander
8D75 50          / Store #$00 to MC
8D76 C0          / Check if M8=MC                     /      Check if city is unoccupied
8D77 D7 8C 8D    / Jump to $8D8C if so

8D7A 0B          / Store meta 01/02 to M8
8D7B 8F 1B       / Add #$1B to M8                
8D7D D3          / Replace M8 with 1-byte value       /      City Status   
8D7E 8B 40       / Store #$40 to MC
8D80 DA          / M8 AND MC                          /      Check for "Food Supply low" flag
8D81 D8 8C 8D    / Jump to $8D8C if so
   
8D84 09          / Store meta 05/06 to M8             /      Population
8D85 51          /
8D86 BE          / Divide M8 by 2
8D87 25          / Store M8 to meta 13/14             /      Population/2
8D88 05          / Store meta 13/14 to M8
8D89 D6 8D 8D    / Jump to $8D8D

8D8C 09          / Store meta 05/06 to M8             /      Population

8D8D 52          / 
8D8E BE          / Divide M8 by 4
8D8F D0          / Increment M8
8D90 24          / Store M8 to meta 15/16

8D91 07          / Store meta 09/10 to M8             /      Fed Population
8D92 53          / 
8D93 B5          / Multiply M8 by 3
8D94 52          / 
8D95 BE          / Divide M8 by 4
8D96 14          / Store meta 15/16 to MC             /      Population / (4 or 8)
8D97 BB          / Add MC to M8
8D98 23          / Store M8 to meta 17/18

8D99 06          / Store meta 11/12 to M8             /      Food
8D9A 14          / Store meta 15/16 to MC
8D9B C9          / Check if M8 >= MC
8D9C D8 AC 8D    / Jump to $8DAC if not

8D9F 34          / Push meta 15/16 to metastack       / (+2)
8DA0 0B          / Store meta 01/02 to M8
8DA1 8F 10       / Add #$10 to M8
8DA3 B4          / Pull 2 values from meta to MC      / (-2)
8DA4 B3          / Push M8 to metastack               / (+2)
8DA5 B0          / Replace M8 with 2-byte value       /      Food
8DA6 BC          / Subtract MC from M8                /      Food - Population/(4 or 8)
8DA7 B1          / Pull 2 meta, store M8 to it        / (-2) Reduce food
8DA8 03          / Store meta 17/18 to M8             /      (3/4)Fed Population + Population/(4/8)
8DA9 D6 B9 8D    / Jump to $8DB9

8DAC 0B          / Store meta 01/02 to M8
8DAD 8F 10       / Add #$10 to M8
8DAF B3          / Push M8 to metastack               / (+2)
8DB0 40          / Store #$00 to M8
8DB1 B1          / Pull 2 meta, store M8 to it        / (-2) Reduce food to zero
8DB2 07          / Store meta 09/10 to M8             /      Fed population
8DB3 53          / 
8DB4 B5          / Multiply M8 by 3
8DB5 52          /
8DB6 BE          / Divide M8 by 4
8DB7 16          / Store meta 11/12 to MC             /      Original food
8DB8 BB          / Add M8 to MC

8DB9 22          / Store M8 to meta 19/20
8DBA 0B          / Store meta 01/02 to M8
8DBB 7B          / Add #$0B to M8
8DBC B3          / Push M8 to metastack               / (+2) Food Suff (address)
8DBD 39          / Push meta 05/06 to metastack       / (+2) Population
8DBE 8D 64       / Push #$0064 to metastack           / (+2)
8DC0 32          / Push meta 19/20 to M8              / (+2)
8DC1 E9 CA DD 06 / Run function $DDCA                 / (-6)  
8DC5 B3          / Push M8 to metastack               / (+2) 
8DC6 8D 64       / Push #$0064 to metastack           / (+2) 
8DC8 E9 D6 DC 04 / Run function $DCD6                 / (-4) Find lesser of two values
8DCC D4          / Pull 2 meta, store M8 to address   / (-2) Update Food Sufficiency

8DCD 0A          / Store meta 03/04 to M8
8DCE D0          / Increment M8
8DCF 2A          / Store M8 to meta 03/04
8DD0 D1
8DD1 0B          / Store meta 01/02 to M8
8DD2 8F 1C       / Add #$1C to M8
8DD4 2B          / Store M8 to meta 01/02
8DD5 8F E4

8DD7 0A          / Store meta 03/04 to M8
8DD8 8B 2E       / Store #$2E to MC
8DDA C6          / Check if M8 < MC
8DDB D7 5E 8D    / Jump to $8D5E if so
8DDE CF          / Exit                               

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8DD0                                              20
8DE0 09 E5 F2 FF 8D 64 E9 D1 D7 02 8B 46 C6 D8 F1 8D
8DF0 CF 41 A2 F4 FF 8A 76 71 2B 40 25 0B 7D D3 B3 89
8E00 6E B4 BC 8B 19 B8 B3 8D 64 E9 D1 D7 02 B4 C6 D8
8E10 BF 8E A0 F4 FF D8 21 8E 69 E9 70 83 02 40 A2 F4
8E20 FF 60 3B 8E 36 B5 E9 A3 82 06 0B 75 B0 85 F7 0B
8E30 77 D3 B3 8D 15 E9 D1 D7 02 8F 64 B4 BC B3 8D 64
8E40 E9 D6 DC 04 85 F5 0B 75 B3 8E E8 03 87 F5 87 F7
8E50 E9 CA DD 06 B3 81 F7 B4 BC B3 8D 19 E9 F6 DC 04
8E60 B1 66 E9 D1 D7 02 B3 0B 7B B3 E9 77 DE 04 66 E9
8E70 D1 D7 02 B3 0B 7C B3 E9 77 DE 04 66 E9 D1 D7 02
8E80 75 B3 0B 7D B3 E9 77 DE 04 0B 77 D3 5A B8 B3 4A
8E90 B4 BC A2 F9 FF 0B 72 D6 B9 8E A0 F9 FF B3 0A 79
8EA0 B3 E9 B6 D3 04 3A E9 33 82 02 66 E9 D1 D7 02 75
8EB0 B3 0A 7D B3 E9 77 DE 04 0A B0 2A 0A D7 9A 8E 05
8EC0 D0 25 D1 0B 8F 1C 2B 8F E4 05 8B 2E C6 D7 FB 8D
8ED0 AC 50 83 CF

FUNCTION $8DDF (F2 FF) $8DE4-$8ED3

8DE4 8D 64       / Push #$04 to metastack            / (+2)
8DE6 E9 D1 D7 02 / Run function $D7D1                / (-2)
8DEA 8B 46       / Store #$70 to MC
8DEC C6          / Check if M8<MC                    /      70% chance
8DED D8 F1 8D    / Jump to $8DF1 if not
8DF0 CF          / Exit

8DF1 41          / Store #$01 to M8
8DF2 A2 F4 FF    / Store $0008 to meta 12            /      Graphic flag
8DF5 8A 76 71    / Store #$7176 to M8
8DF8 2B          / Store M8 to meta 01/02            /      Current City
8DF9 40          / Store #$00 to M8              
8DFA 25          / Store M8 to meta 13/14

8DFB 0B          / Store meta 01/02 to M8
8DFC 7D          / Add #$0D to M8
8DFD D3          / Replace M8 with 1-byte value      /      Medical Development
8DFE B3          / Push M8 to metastack              / (+2)
8DFF 89 6E       / Store #$6E to M8                  /      110
8E01 B4          / Pull 2 values from meta to MC     / (-2)
8E02 BC          / Subtract MC from M8               /      110 - Med Dev
8E03 8B 19       / Store #$19 to MC                  /       25
8E05 B8          / Divide M8 by MC                   /    (110-Med Dev)/25
8E06 B3          / Push M8 to metastack              / (+2)
8E07 8D 64       / Push #$64 to metastack            / (+2)
8E09 E9 D1 D7 02 / Run function $D7D1                / (-2) RNG #$00-#$63
8E0D B4          / Pull 2 values from meta to MC     / (-2)
8E0E             / Check if M8 < MC                  
8E0F D8 BF 8E    / Jump to $8EBF if not

8E12 A0 F4 FF    / Store meta 12 to $0008
8E15 D8 21 8E    / Jump to $8E21 if zero             /      If graphic already set

8E18 69          / Push #$09 to metastack            / (+2)
8E19 E9 70 83 02 / Run function $8370                / (-2) Print Event Graphic 09
8E1D 40          / Store #$00 to M8
8E1E A2 F4 FF    / Store $0008 to meta 12

8E21 60          / Push #$00 to metastack            / (+2)
8E22 3B          / Push meta 01/02 to metastack      / (+2)
8E23 8E 36 B5    / Push #$B536 to metastack          / (+2)
8E26 E9 A3 82 06 / Run function $82A3                / (-6) Print "Cholera outbreak in (#):(City)"
8E2A 0B          / Store meta 01/02 to M8
8E2B 75          / Add #$05 to M8
8E2C B0          / Replace M8 with 2-byte value      /      City Population
8E2D 85 F7       / Store M8 to meta 08/09

8E2F 0B          / Store meta 01/02 to M8
8E30 77          / Add #$07 to M8
8E31 D3          / Replace M8 with 1-byte value      /      Hospitals
8E32 B3          / Push M8 to metastack              / (+2)
8E33 8D 15       / Push #$0015 to metastack          / (+2) 21
8E35 E9 D1 D7 02 / Run function $D7D1                / (-2) RNG #$00-#$14
8E39 8F 64       / Add #$64 to M8                    /      100-120
8E3B B4          / Pull 2 values from meta to MC     / (-2) Hospitals
8E3C BC          / Subtract MC from M8               /      (100 to 120) - Hospitals
8E3D B3          / Push M8 to metastack              / (+2)
8E3E 8D 64       / Push #$0064 to metastack          / (+2)
8E40 E9 D6 DC 04 / Run function $DCD6                / (-4) Smaller of 2 values
8E44 85 F5       / Store M8 to meta 10/11

8E46 0B          / Store meta 01/02 to M8
8E47 75          / Add #$05 to M8
8E48 B3          / Push M8 to metastack              / (+2)
8E49 8E E8 03    / Push #$8703 to metastack          / (+2) 1000
8E4C 87 F5       / Push meta 10/11 to metastack      / (+2)
8E4E 87 F7       / Push meta 08/09 to metastack      / (+2)
8E50 E9 CA DD 06 / Run function $DDCA                / (-6) (Population*(100-120 - Hospitals))/1000)
8E54 B3          / Push M8 to metastack              / (+2)
8E55 81 F7       / Store meta 08/09 to M8
8E57 B4          / Pull 2 meta to MC                 / (-2)
8E58 BC          / Subtract MC from M8
8E59 B3          / Push M8 to metastack              / (+2)
8E5A 8D 19       / Push #$0019 to metastack          / (+2)
8E5C E9 F6 DC 04 / Run function $DCF6                / (-4) Find larger of two values
8E60 B1          / Pull 2 meta, store M8 to it       / (-2) Reduce population

8E61 66          / Push #$06 to metastack            / (+2)
8E62 E9 D1 D7 02 / Run function $D7D1                / (-2) RNG #$00-#$05
8E66 B3          / Push M8 to metastack              / (+2)
8E67 0B          / Store meta 01/02 to M8
8E68 7B          / Add #$0B to M8
8E69 B3          / Push M8 to metastack              / (+2) City - Food Sufficiency
8E6A E9 77 DE 04 / Run function $DE77                / (-4) Reduce Food Sufficiency by 00-05

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8E60 B1 66 E9 D1 D7 02 B3 0B 7B B3 E9 77 DE 04 66 E9
8E70 D1 D7 02 B3 0B 7C B3 E9 77 DE 04 66 E9 D1 D7 02
8E80 75 B3 0B 7D B3 E9 77 DE 04 0B 77 D3 5A B8 B3 4A
8E90 B4 BC A2 F9 FF 0B 72 D6 B9 8E A0 F9 FF B3 0A 79
8EA0 B3 E9 B6 D3 04 3A E9 33 82 02 66 E9 D1 D7 02 75
8EB0 B3 0A 7D B3 E9 77 DE 04 0A B0 2A 0A D7 9A 8E 05
8EC0 D0 25 D1 0B 8F 1C 2B 8F E4 05 8B 2E C6 D7 FB 8D
8ED0 AC 50 83 CF



====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8ED0             20 09 E5 E2 FF 41 A2 E6 FF 8A 76 71
8EE0 2B 40 85 E4 0B 72 B0 50 C0 D7 80 90 0B 7B D3 A2
8EF0 FB FF 0B 7C D3 A2 FA FF A0 FB FF 8B 28 C8 D7 16
8F00 8F A0 FB FF 53 B8 B3 4F B4 BC B3 8D 64 E9 D1 D7
8F10 02 B4 C6 D7 34 8F A0 FA FF 8B 23 C8 D7 80 90 A0
8F20 FA FF 53 B8 B3 4C B4 BC B3 8D 64 E9 D1 D7 02 B4
8F30 C6 D8 80 90 A0 E6 FF D8 43 8F 66 E9 70 83 02 40
8F40 A2 E6 FF 60 3B 8E 4D B5 E9 A3 82 06 0B 75 B0 85
8F50 F5 6B E9 D1 D7 02 8F 28 85 ED 87 ED 0B 7E B0 B3
8F60 E9 0F DE 04 85 F3 87 ED 0B 8F 10 B0 B3 E9 0F DE
8F70 04 85 F1 87 ED 0B 8F 12 B0 B3 E9 0F DE 04 85 EF
8F80 81 F1 55 B5 B3 A0 FB FF B3 87 F5 E9 0F DE 04 B4
8F90 BB 85 EB 81 EF 55 B5 B3 A0 FA FF B3 87 F5 E9 0F
8FA0 DE 04 B4 BB B3 8E A0 0F E9 D6 DC 04 85 E9 87 F5
8FB0 E9 6B DC 02 B3 81 F3 8B 14 B8 B4 B8 B3 8D 1E E9
8FC0 D6 DC 04 85 E7 87 F3 0B 7E B3 E9 6E DE 04 87 F1
8FD0 0B 8F 10 B3 E9 6E DE 04 87 EF 0B 8F 12 B3 E9 6E
8FE0 DE 04 66 E9 D1 D7 02 75 B3 0B 75 B3 E9 85 CD 04
8FF0 0B 7B B3 87 F5 8D 19 87 EB E9 CA DD 06 83 E7 BB
9000 B3 8D 64 E9 D6 DC 04 D4 0B 7C B3 87 F5 8D 19 87
9010 E9 E9 CA DD 06 83 E7 BB B3 8D 64 E9 D6 DC 04 D4
9020 0B 78 85 F7 40 85 E2 64 E9 D1 D7 02 B3 87 F7 E9
9030 77 DE 04 81 E2 D0 85 E2 D1 81 F7 D0 85 F7 D1 81
9040 E2 53 C6 D7 27 90 6A 0B 8F 1A B3 E9 B6 D3 04 0B
9050 72 D6 7A 90 8D 29 E9 D1 D7 02 75 A2 F9 FF A0 F9
9060 FF B3 0A 79 B3 E9 B6 D3 04 3A E9 33 82 02 A0 F9
9070 FF B3 0A 7D B3 E9 B6 D3 04 0A B0 2A 0A D7 54 90
9080 81 E4 D0 85 E4 D1 0B 8F 1C 2B 8F E4 81 E4 8B 2E
9090 C6 D7 E4 8E AC 50 83 CF

FUNCTION $8ED4 (E2 FF) $8ED9-$9097

8ED9 41          / Store #$01 to M8
8EDA A2 E6 FF    / Store $0008 to meta 26

8EDD 8A 76 71    / Store #$7176 to M8
8EE0 2B          / Store M8 to meta 01/02

8EE1 40          / Store #$00 to M8
8EE2 85 E4       / Store M8 to meta 27/28

8EE4 0B          / Store meta 01/02 to M8            / Current city
8EE5 72          / Add #$02 to M8
8EE6 B0          / Replace M8 with 2-byte value      / Current City - Commander
8EE7 50          / Store #$00 to MC
8EE8 C0          / Check if M8=MC                    / Check if city is empty
8EE9 D7 80 90    / Jump to $9080 if so

8EEC 0B          / Store meta 01/02 to M8
8EED 7B          / Add #$0B to M8
8EEE D3          / Replace M8 with 1-byte value      / Food sufficiency
8EEF A2 FB FF    / Store $0008 to meta 05

8EF2 0B          / Store meta 01/02 to M8
8EF3 7C          / Add #$0C to M8
8EF4 D3          / Replace M8 wtih 1-byte value      / Material sufficiency
8EF5 A2 FA FF    / Store $0008 to meta 06

8EF8 A0 FB FF    / Store meta 05 to $0008
8EFB 8B 28       / Store #$28 to MC
8EFD C8          / Check if M8 > MC                  / Check if food suff > 40
8EFE D7 16 8F    / Jump to $8F16 if so

8F01 A0 FB FF    / Store meta 05 to $0008
8F04 53          / Store #$03 to MC
8F05 B8          / Divide M8 by MC
8F06 B3          / Push M8 to metastack              / (+2)
8F07 4F          / Store #$0F to M8
8F08 B4          / Pull 2 meta to MC                 / (-2)
8F09 BC          / Subtract MC from M8
8F0A B3          / Push M8 to metastack              / (+2)
8F0B 8D 64       / Push #$64 to metastack            / (+2)
8F0D E9 D1 D7 02 / Run function $D7D1                / (-2) RNG #$00-#$63
8F11 B4          / Pull 2 meta to MC                 / (-2)
8F12 C6          / Check if M8 < MC                  / 15 - floor(food suff/3)%
8F13 D7 34 8F    / Jump to $8F34 if so

8F16 A0 FA FF    / Store meta 06 to $0008
8F19 8B 23       / Store #$23 to MC
8F1B C8          / Check if M8 > MC                 / Check if mat suff > 35
8F1C D7 80 90    / Jump to $9080 if so

8F1F A0 FA FF    / Store meta 06 to $0008
8F22 53          / Store #$03 to MC
8F23 B8          / Divide M8 by MC
8F24 B3          / Push M8 to metastack             / (+2)
8F25 4C          / Store #$0C to M8
8F26 B4          / Pull 2 meta to MC                / (-2)
8F27 BC          / Subtract MC from M8
8F28 B3          / Push M8 to metastack             / (+2)
8F29 8D 64       / Push #$64 to metastack           / (+2)
8F2B E9 D1 D7 02 / Run function $D7D1               / (-2)
8F2F B4          / Pull 2 meta to MC                / (-2)
8F30 C6          / Check if M8 < MC                 / 12 - floor(mat suff/3)%
8F31 D8 80 90    / Jump to $9080 if not

8F34 A0 E6 FF    / Store meta 26 to $0008
8F37 D8 43 8F    / Jump to $8F43 if zero

8F3A 66          / Push #$06 to metastack           / (+2)
8F3B E9 70 83 02 / Run function $8370               / (-2) Display event icon #$06
8F3F 40          / Store #$00 to M8
8F40 A2 E6 FF    / Store M8 to meta 26

8F43 60          / Push #$00 to metastack           / (+2)
8F44 3B          / Push meta 01/02 to metastack     / (+2)
8F45 8E 4D B5    / Push #$B54D to metastack         / (+2)
8F48 E9 A3 82 06 / Run function $82A3               / (-6) Print "Rebellion in [#]:[City]"

8F4C 0B          / Store meta 01/02 to M8
8F4D 75          / Add #$05 to M8
8F4E B0          / Replace M8 with 2-byte value     /      Population
8F4F 85 F5       / Store M8 to meta 10/11

8F51 6B          / Push #$0B to metastack           / (+2)
8F52 E9 D1 D7 02 / Run function $D1D7               / (-2)
8F56 8F 28       / Add #$28 to M8                   /      RNG 40-50
8F58 85 ED       / Store M8 to meta 18/19
8F5A 87 ED       / Push meta 18/19 to metastack     / (+2)
8F5C 0B          / Store meta 01/02 to M8
8F5D 7E          / Add #$0E to M8
8F5E B0          / Replace M8 with 2-byte value     /      City - Gold
8F5F B3          / Push M8 to metastack             / (+2)
8F60 E9 0F DE 04 / Run function $DE0F               / (-4) Take percentage of gold
8F64 85 F3       / Store M8 to meta 12/13 

8F66 87 ED       / Push meta 18/19 to metastack     / (+2)
8F68 0B          / Store meta 01/02 to M8
8F69 8F 10       / Add #$10 to M8
8F6B B0          / Replace M8 with 2-byte value     /      City - Food
8F6C B3          / Push M8 to metastack             / (+2)
8F6D E9 0F DE 04 / Run function $DE0F               /      Take percentage of food
8F71 85 F1       / Store M8 to meta 14/15

8F73 87 ED       / Push meta 18/19 to metastack     / (+2)
8F75 0B          / Store meta 01/02 to M8
8F76 8F 12       / Add #$12 to M8
8F78 B0          / Replace M8 with 2-byte value     /      City - Materials
8F79 B3          / Push M8 to metastack             / (+2)
8F7A E9 0F DE 04 / Run function $DE0F               / (-2) Take percentage of materials
8F7E 85 EF       / Store M8 to meta 16/17

8F80 81 F1       / Store meta 14/15 to M8           /      RNG% of food
8F82 55          / Store #$05 to MC
8F83 B5          / Multiply M8 by MC
8F84 B3          / Push M8 to metastack             / (+2)
8F85 A0 FB FF    / Store meta 05 to $0008           /      Food sufficiency
8F88 B3          / Push M8 to metastack             / (+2)
8F89 87 F5       / Push meta 10/11 to metastack     / (+2) Population
8F8B E9 0F DE 04 / Run function $DE0F               / (-4) [Food sufficiency]% of population
8F8F B4          / Pull 2 meta to MC                / (+2)
8F90 BB          / Add MC to M8 
8F91 85 EB       / Store M8 to meta 20/21

8F93 81 EF       / Store meta 16/17 to M8           /      RNG% of materials
8F95 55          / Store #$05 to MC
8F96 B5          / Multiply M8 by MC
8F97 B3          / Push M8 to metastack             / (+2)
8F98 A0 FA FF    / Store meta 06 to $0008           /      Material sufficiency
8F9B B3          / Push M8 to metastack             / (+2)
8F9C 87 F5       / 
 
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8F90 BB 85 EB 81 EF 55 B5 B3 A0 FA FF B3 87 F5 E9 0F
8FA0 DE 04 B4 BB B3 8E A0 0F E9 D6 DC 04 85 E9 87 F5
8FB0 E9 6B DC 02 B3 81 F3 8B 14 B8 B4 B8 B3 8D 1E E9
8FC0 D6 DC 04 85 E7 87 F3 0B 7E B3 E9 6E DE 04 87 F1
8FD0 0B 8F 10 B3 E9 6E DE 04 87 EF 0B 8F 12 B3 E9 6E
8FE0 DE 04 66 E9 D1 D7 02 75 B3 0B 75 B3 E9 85 CD 04
8FF0 0B 7B B3 87 F5 8D 19 87 EB E9 CA DD 06 83 E7 BB
9000 B3 8D 64 E9 D6 DC 04 D4 0B 7C B3 87 F5 8D 19 87
9010 E9 E9 CA DD 06 83 E7 BB B3 8D 64 E9 D6 DC 04 D4
9020 0B 78 85 F7 40 85 E2 64 E9 D1 D7 02 B3 87 F7 E9
9030 77 DE 04 81 E2 D0 85 E2 D1 81 F7 D0 85 F7 D1 81
9040 E2 53 C6 D7 27 90 6A 0B 8F 1A B3 E9 B6 D3 04 0B
9050 72 D6 7A 90 8D 29 E9 D1 D7 02 75 A2 F9 FF A0 F9
9060 FF B3 0A 79 B3 E9 B6 D3 04 3A E9 33 82 02 A0 F9
9070 FF B3 0A 7D B3 E9 B6 D3 04 0A B0 2A 0A D7 54 90
9080 81 E4 D0 85 E4 D1 0B 8F 1C 2B 8F E4 81 E4 8B 2E
9090 C6 D7 E4 8E AC 50 83 CF

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9090                         20 09 E5 F4 FF 8A 76 71
90A0 2B 40 26 0B 8F 1A D3 2A 0A D8 DE 90 0A 55 B5 29
90B0 0B 7E B0 28 08 19 C9 D8 C4 90 0B 7E B3 08 19 BC
90C0 B1 D6 DE 90 0B 7E B3 40 B1 08 55 B8 27 0B 8F 1A
90D0 B3 8D 4B 0A 17 BC B3 E9 0F DE 04 17 BB D4 06 D0
90E0 26 D1 0B 8F 1C 2B 8F E4 06 8B 2E C6 D7 A3 90 CF

FUNCTION $9098 (F4 FF) $909D-$90EF

909D 8A 76 71    / Store #$7176 to M8
90A0 2B          / Store M8 to meta 01/02
90A1 40          / Store #$00 to M8
90A2 26          / Store M8 to meta 11/12

90A3 0B          / Store meta 01/02 to M8
90A4 8F 1A       / Add #$1A to M8
90A6 D3          / Replace M8 with 1-byte value      / Fleet
90A7 2A          / Store M8 to meta 03/04

90A8 0A          / Store meta 03/04 to M8
90A9 D8 DE 90    / Jump to $90DE if zero

90AC 0A          / Store meta 03/04 to M8
90AD 55          / Store #$05 to MC
90AE B5          / Multiply M8 by MC
90AF 29          / Store M8 to meta 05/06            / New Fleet - Running Value

90B0 0B          / Store meta 01/02 to M8
90B1 7E          / Add #$0E to M8
90B2 B0          / Replace M8 with 2-byte value      / Gold
90B3 28          / Store M8 to meta 07/08

90B4 08          / Store meta 07/08 to M8
90B5 19          / Store meta 05/06 to MC 
90B6 C9          / Check if M8 >= MC                 / Gold >= 5xFleet
90B7 D8 C4 90    / Jump to $90C4 if not

90BA 0B          / Store meta 01/02 to M8
90BB 7E          / Add #$0E to M8 
90BC B3          / Push M8 to metastack              / (+2)
90BD 08          / Store meta 07/08 to M8
90BE 19          / Store meta 05/06 to MC 
90BF BC          / Subtract MC from M8

90C0 B1          / Pull 2 meta, store M8 to address  / (-2)
90C1 D6 DE 90    / Jump to $90DE

90C4 0B          / Store meta 01/02 to M8
90C5 7E          / Add #$0E to M8
90C6 B3          / Push M8 to metastack              / (+2)
90C7 40          / Store #$00 to M8
90C8 B1          / Pull 2 meta, store M8 to address  / (-2)
90C9 08          / Store meta 07/08 to M8 
90CA 55          / Multiply 

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
90C0 B1 D6 DE 90 0B 7E B3 40 B1 08 55 B8 27 0B 8F 1A
90D0 B3 8D 4B 0A 17 BC B3 E9 0F DE 04 17 BB D4 06 D0
90E0 26 D1 0B 8F 1C 2B 8F E4 06 8B 2E C6 D7 A3 90 CF

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
90F0 20 09 E5 FB FF 41 A2 FD FF 8A 76 71 2B 40 85 FB
9100 0B 8F 1B D3 54 DA D7 43 91 8D 64 E9 D1 D7 02 51
9110 C6 D8 43 91 A0 FD FF D8 23 91 68 E9 70 83 02 40
9120 A2 FD FF 60 3B 8E 5C B5 E9 A3 82 06 6B E9 D1 D7
9130 02 75 B3 0B 7A B3 E9 B6 D3 04 64 0B 8F 1B B4 B3
9140 D3 DB D4 81 FB D0 85 FB D1 0B 8F 1C 2B 8F E4 81
9150 FB 8B 2E C6 D7 00 91 AC 50 83 CF

FUNCTION $90F0 (FB FF) $90F5-$915A

90F5 41          / Store #$01 to M8                  
90F6 A2 FD FF    / Store $008 to meta 03             / Graphic flag
90F9 8A 76 71    / Store #$7176 to M8                
90FC 2B          / Store M8 to meta 01/02            / Current city
90FD 40          / Store #$00 to M8                  
90FE 85 FB       / Store M8 to meta 04/05            / City counter

9100 0B          / Store meta 01/0 to M8
9101 8F 1B       / Add #$1B to M8
9103 D3          / Replace M8 with 1-byte value      / City - Status
9104 54          / Store #$04 to MC
9105 DA          / MC AND M8                         / Check if "Farming Halted" flag is set
9106 D7 43 91    / Jump to $9143 if so

9109 8D 64       / Push #$64 to metastack            / (+2)
910B E9 D1 D7 02 / Run function $D7D1                / (-2) RNG #$00-#$63
910F 51          / Store #$01 to MC
9110 C6          / Check if M8<MC                    / 1% chance
9111 D8 43 91    / Jump to $9143 if not

9114 A0 FD FF    / Store meta 03 to $0008
9117 D8 23 91    / Jump to $9123 if zero             / If graphic is already on

911A 68          / Push #$0008 to metastack          / (+2)
911B E9 70 83 02 / Run function $8370                / (-2) Load event icon 8
911F 40          / Store #$0000 to M8
9120 A2 FD FF    / Store $0008 to meta 03            / Turn off graphic flag

9123 60          / Push #$0000 to metastack          / (+2)
9124 3B          / Push meta 01/02 to metastack      / (+2)
9125 8E 5C B5    / Push #$B55C to metastack          / (+2)
9128 E9 A3 82 06 / Run function $82A3                / (-6) Print "Severe weather in (#):(City)"
912C 6B          / Push #$000B to metastack          / (+2)
912D E9 D1 D7 02 / Run function $


     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9120 A2 FD FF 60 3B 8E 5C B5 E9 A3 82 06 6B E9 D1 D7
9130 02 75 B3 0B 7A B3 E9 B6 D3 04 64 0B 8F 1B B4 B3
9140 D3 DB D4 81 FB D0 85 FB D1 0B 8F 1C 2B 8F E4 81
9150 FB 8B 2E C6 D7 00 91 AC 50 83 CF

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9150                                  20 09 E5 EC FF
9160 8A 76 71 2B 40 85 EF 0B 8F 1B D3 52 DA D8 71 91
9170 CF 81 EF D0 85 EF D1 0B 8F 1C 2B 8F E4 81 EF 8B
9180 2E C6 D7 67 91 A4 E6 6F 55 BA 27 07 D7 93 91 40
9190 D6 95 91 07 D1 26 06 53 B5 B3 8D 64 E9 D1 D7 02
91A0 B4 C6 D7 A6 91 CF 41 A2 EC FF 8A 76 71 2B 40 85
91B0 EF 0B 7D D3 B3 89 6E B4 BC 8B 14 B8 B3 8D 64 E9
91C0 D1 D7 02 B4 C6 D8 D7 92 A0 EC FF D8 ED 91 60 E9
91D0 7F D2 02 69 E9 70 83 02 64 E9 7F D2 02 8E 70 B5
91E0 E9 E9 C3 02 62 E9 62 C0 02 40 A2 EC FF 60 3B 8E
91F0 8C B5 E9 A3 82 06 0B 75 B0 29 0B 77 D3 B3 8D 15
9200 E9 D1 D7 02 8F 64 B4 BC B3 8D 64 E9 D6 DC 04 28
9210 0B 75 B3 8E E8 03 08 53 B5 B3 39 E9 CA DD 06 B3 
9220 09 B4 BC B3 8D 19 E9 F6 DC 04 B1 0B 78 85 F1 40
9230 85 ED 66 E9 D1 D7 02 73 B3 87 F1 E9 B6 D3 04 81
9240 ED D0 85 ED D1 81 F1 D0 85 F1 D1 81 ED 53 C6 D7
9250 32 92 66 E9 D1 D7 02 B3 81 F1 D0 85 F1 D1 B3 E9
9260 77 DE 04 66 E9 D1 D7 02 B3 81 F1 D0 85 F1 D1 B3
9270 E9 77 DE 04 66 E9 D1 D7 02 7A B3 87 F1 E9 77 DE
9280 04 62 0B 8F 1B B4 B3 D3 DB D4 0B 77 D3 51 BE 8F
9290 23 A2 F3 FF 0B 72 D6 BF 92 0A 79 B3 A0 F3 FF B3
92A0 0A 79 D3 B3 E9 0F DE 04 D4 3A E9 33 82 02 0A 7D
92B0 B3 A0 F3 FF B3 0A 7D D3 B3 E9 0F DE 04 D4 0A B0
92C0 2A 0A D7 99 92 0B 8F 14 B3 A0 F3 FF B3 0B 8F 14
92D0 B0 B3 E9 0F DE 04 B1 81 EF D0 85 EF D1 0B 8F 1C
92E0 2B 8F E4 81 EF 8B 2E C6 D7 B1 91 AC 50 83 CF

FUNCTION $915B (EC FF) $9160-$92EE

9160 8A 76 71    / Store #$7176 to M8
9163 2B          / Store M8 to meta 01/02
9164 40          / Store #$00 to M8
9165 85 EF       / Store M8 to meta 17/18
9167 0B          / Store meta 01/02 to M8
9168 8F 1B       / Add #$1B to M8                    / City status
916A D3          / Replace M8 with 1-byte value
916B 52          / Store #$02 to MC
916C DA          / MC AND M8                         
916D D8 71 91    / Jump to $9171 if not set
9170 CF          / Exit                              / Exits if the plague is already set in any city


9171 81 EF       / Store meta 17/18 to M8            
9173 D0          / Increment M8
9174 85 EF       / Store M8 to meta 17/18
9176 D1          / 
9177 0B          / Store meta 01/02 to M8
9178 8F 1C       / Add #$1C to M8
917A 2B          / Store M8 to meta 01/02           / Advance to next city
917B 8F E4       / 
917D 81 EF       / Store meta 17/18 to M8
917F 8B 2E       / Store #$2E to MC
9181 C6          / Check if M8 < MC                 / End of list
9182 D7 67 91    / Jump to $9167 if so




9185 A4 E6 6F    / Store $6FE6/$6FE7 to M8          / Year
9188 55          / Store #$05 to MC
9189 BA          / M8 MOD MC                        / Year mod 5 (#$00-#$04)
918A 27          / Store M8 to meta 09/10
918B 07          / Store meta 09/10 to M8
918C D7 93 91    / Jump to $9193 if positive
918F 40          / Store #$00 to M8
9190 D6 95 91    / Jump to $9195
9193 07          / Store meta 09/10 to M8           / 0->0 1->0 2->1 3->2 4->3
9194 D1          / Decrement M8                     
9195 26          / Store M8 to meta 11/12
9196 06          / Store meta 11/12 to M8
9197 53          / Store #$03 to MC
9198 B5          / Multiply M8 by MC                / 0->0 1->0 2->3 3->6 4->9

9199 B3          / Push M8 to metastack             / (+2)
919A 8D 64       / Push #$64 to metastack           / (+2)
919C E9 D1 D7 02 / Run function $D7D1               / (-2) RNG #$00-#$63
91A0 B4          / Pull 2 meta to MC                / (-2)
91A1 C6          / Check if M8 < MC
91A2 D7 A6 91    / Jump to $91A6 if so
91A5 CF          / Exit


91A6 41          / Store #$01 to M8
91A7 A2 EC FF    / Store $0008 to meta 20           / Graphics flag
91AA 8A 76 71    / Store #$7176 to M8
91AD 2B          / Store M8 to meta 01/02           / Current City
91AE 40          / Store #$00 to M8
91AF 85 EF       / Store M8 to meta 17/18           / City Counter

91B1 0B          / Store meta 01/02 to M8
91B2 7D          / Add #$0D to M8
91B3 D3          / Replace M8 with 1-byte value     / Med Dev
91B4 B3          / Push M8 to metastack             / (+2)
91B5 89 6E       / Store #$6E to M8
91B7 B4          / Pull 2 meta values to MC         / (-2)
91B8 BC          / Subtract MC from M8              / 110 - Med Dev
91B9 8B 14       / Store #$14 to MC
91BB B8          / Divide M8 by MC
91BC B3          / Push M8 to metastack             / (+2)
91BD 8D 64       / Push #$0064 to metastack         / (+2)
91BF E9 D1 D7 02 / Run function $D7D1               / (-2)
91C3 B4          / Pull 2 meta values to MC         / (-2)
91C4 C6          / Check if M8 < MC                 
91C5 D8 D7 92    / Jump to $92D7 if not             / Jump = no plague

91C8 A0 EC FF    / Store meta 20 to $0008
91CB D8 ED 91    / Jump to $91ED if zero

91CE 60          / Push #$0000 to metastack         / (+2)
91CF E9 7F D2 02 / Run function $D27F               / (-2) Adjust map
91D3 69          / Push #$0009 to metastack         / (+2)
91D4 E9 70 83 02 / Run function $8370               / (-2) Load event icon
91D8 64          / Push #$0004 to metastack         / (+2)
91D9 E9 7F D2 02 / Run function $D27F               / (-2) Adjust map
91DD 8E 70 B5    / Push #$B570 to metastack         / (+2)
91E0 E9 E9 C3 02 / Run function $C3E9               / (-2) Print "The plague has broken out!!"
91E4 62          / Push #$0002 to metastack         / (+2)
91E5 E9 62 C0 02 / Run function $C062               / (-2) Wait 2 time units for input
91E9 40          / Store #$00 to M8
91EA A2 EC FF    / Store $0008 to meta 20

91ED 60          / Push #$0000 to metastack         / (+2)
91EE 3B          / Push meta 01/02 to metastack     / (+2)
91EF 8E 8C B5    / Push #$B58C to metastack         / (+2) 
91F2 E9 A3 82 06 / Run function $82A3               / (-6) Print "The plague is devastating (city)"
91F6 0B          / Store meta 01/02 to M8
91F7 75          / Add #$05 to M8
91F8 B0          / Replace M8 with 2-byte value     / City Population
91F9 29          / Store M8 to meta 05/06
91FA 0B          / Store meta 01/02 to M8
91FB 77          / Add #$07 to M8
91FC D3          / Replace M8 with 1-byte value     /      City Hospitals
91FD B3          / Push M8 to metastack             / (+2)
91FE 8D 15       / Push #$0015 to metastack         / (+2)
9200 E9 D1 D7 02 / Run function $D7D1               / (-2) RNG #$00-#$20
9204 8F 64       / Add #$64 to M8                   /      100-120
9206 B4          / Pull 2 meta to MC                / (-2)
9207 BC          / Subtract MC from M8              
9208 B3          / Push M8 to metastack             / (+2)
9209 8D 64       / Push #$0064 to metastack         / (+2)
920B E9 D6 DC 04 / Run function $DCD6               / (-4) Pick smaller of two
920F 28          / Store M8 to meta 07/08
9210 0B          / Store meta 01/02 to M8
9211 75          / Add #$05 to M8
9212 B3          / Push M8 to metastack             / (+2) City Population Address
9213 8E E8 03    / Push #$03E8 to metastack         / (+2)
9216 08          / Store meta 07/08 to M8                
9217 53          / Store #$03 to MC
9218 B5          / Multiply M8 by MC
9219 B3          / Push M8 to metastack             / (+2) Plague Damage Value
921A 39          / Push meta 05/06 to metastack     / (+2) City Population
921B E9 CA DD 06 / Run function $DDCA               / (-6)  
921F B3          / Push M8 to metastack             / (+2)
9220 09          / Store meta 05/06 to M8           /      Population
9221 B4          / Pull 2 meta to MC                / (-2) 
9222 BC          / Subtract MC from M8              /
9223 B3          / Push M8 to metastack             / (+2) New pop
9224 8D 19       / Push #$19 to metastack           / (+2) 25
9226 E9 F6 DC 04 / Run function $DCF6               / (-4) 
922A B1          / Pull 2 values, store M8 to it    / (-2)
922B 0B          / Store meta 01/02 to M8
922C 78          / Add #$08 to M8
922D 85 F1       / Store M8 to meta 14/15           / City Industry
922F 40          / Store #$00 to M8
9230 85 ED       / Store M8 to meta 18/19
9232 66          / Push #$0006 to metastack         / (+2)
9233 E9 D1 D7 02 / Run function $D7D1               / (-2) RNG #$00-#$05
9237 73          / Add #$03 to M8                   /      RNG #$03-#$08
9238 B3          / Push M8 to metastack             / (+2)
9239 87 F1       / Address meta 14/15 to metastack  / (+2)
923B E9 B6 D3 04 / Run function $D3B6               / (-4) Reduce by 3-8%
923F 81 ED       / Store meta 18/19 to M8
9241 D0          / Increment M8               
9242 85 ED       / Store M8 to meta 18/19
9244 D1          / Decrement M8
9245 81 F1       / Store meta 14/15 to M8
9247 D0          / Increment M8                     /      Round up
9248 85 F1       / Store M8 to meta 14/15
924A D1          / Decrement M8
924B 81 ED       / Store meta 18/19 to M8
924D 53          / Store #$03 to MC
924E C6          / Check if M8 < MC
924F D7 32 92    / Jump to $9232 if not
9252 66          / Push #$0006 to metastack         / (+2)
9253 E9 D1 D7 02 / Run function $D7D1               / (-2) RNG #$00-#$05
9257 B3          / Push M8 to metastack             / (+2)
9258 81 F1       / Store meta 14/15 to M8 
925A D0          / Increment M8
925B 85 F1       / Store M8 to meta 14/15
925D D1          / Decrement M8
925E B3          / Push M8 to metastack             / (+2)
925F E9 77 DE 04 / Run function $DE77               / (-4) Reduce by #$00-#$05

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9250 32 92 66 E9 D1 D7 02 B3 81 F1 D0 85 F1 D1 B3 E9
9260 77 DE 04 66 E9 D1 D7 02 B3 81 F1 D0 85 F1 D1 B3
9270 E9 77 DE 04 66 E9 D1 D7 02 7A B3 87 F1 E9 77 DE
9280 04 62 0B 8F 1B B4 B3 D3 DB D4 0B 77 D3 51 BE 8F
9290 23 A2 F3 FF 0B 72 D6 BF 92 0A 79 B3 A0 F3 FF B3
92A0 0A 79 D3 B3 E9 0F DE 04 D4 3A E9 33 82 02 0A 7D
92B0 B3 A0 F3 FF B3 0A 7D D3 B3 E9 0F DE 04 D4 0A B0
92C0 2A 0A D7 99 92 0B 8F 14 B3 A0 F3 FF B3 0B 8F 14
92D0 B0 B3 E9 0F DE 04 B1 81 EF D0 85 EF D1 0B 8F 1C
92E0 2B 8F E4 81 EF 8B 2E C6 D7 B1 91 AC 50 83 CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
92E0                                              20
92F0 09 E5 FC FF 8A 76 71 2B 40 2A 0B 8F 1B D3 52 DA
9300 D8 20 93 0B 77 D3 53 B8 D0 B3 8D 64 E9 D1 D7 02
9310 B4 C6 D8 20 93 8E FD 00 0B 8F 1B B4 B3 D3 DA D4
9320 0A D0 2A D1 0B 8F 1C 2B 8F E4 0A 8B 2E C6 D7 FA
9330 92 CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9330       20 09 E5 FB FF 41 A2 FD FF 8A 76 71 2B 40
9340 85 FB 0B 8F 1B D3 54 DA D8 7D 93 8D 64 E9 D1 D7
9350 02 8B 32 C6 D8 65 93 8E FB 00 0B 8F 1B B4 B3 D3
9360 DA D4 D6 7D 93 A0 FD FF D8 74 93 68 E9 70 83 02
9370 40 A2 FD FF 60 3B 8E A8 B5 E9 A3 82 06 81 FB D0
9380 85 FB D1 0B 8F 1C 2B 8F E4 81 FB 8B 2E C6 D7 42
9390 93 AC 50 83 CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9390                20 09 E5 FA FF 8A 76 71 2B 40 29
93A0 0B 7A D3 D0 2A 0B 8F 1B D3 54 DA D8 B3 93 0A 51
93B0 BE D0 2A 8E 0F 27 0A 8B 64 B5 B3 0B 8F 10 B3 E9
93C0 2C DE 06 09 D0 29 D1 0B 8F 1C 2B 8F E4 09 8B 2E
93D0 C6 D7 A0 93 CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
93D0                20 09 E5 F9 FF 41 A2 FB FF 8A 76
93E0 71 2B 40 85 F9 0B 8F 1B D3 54 DA D7 26 94 8D 64
93F0 E9 D1 D7 02 52 C6 D8 26 94 A0 FB FF D8 08 94 6A
9400 E9 70 83 02 40 A2 FB FF 61 3B 8E B9 B5 E9 A3 82
9410 06 0B 7A D3 D0 2A 8E 0F 27 0A 8B 64 B5 B3 0B 8F
9420 10 B3 E9 2C DE 06 81 F9 D0 85 F9 D1 0B 8F 1C 2B
9430 8F E4 81 F9 8B 2E C6 D7 E5 93 AC 50 83 CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9430                                           20 09
9440 E5 B8 FF 60 8D 2E DE B8 FF B3 E9 23 F4 06 40 A2
9450 EA FF 8A 76 71 2B 40 20 0B 8F 1B D3 52 DA D8 B8
9460 94 41 A2 EA FF DE B8 FF B3 00 B4 BB B3 41 D4 DE
9470 EF FF B3 3B E9 D6 D0 04 DE EF FF D6 AE 94 09 D3
9480 8B 1C B5 8C 83 71 BB D3 A2 F7 FF A0 F7 FF B3 89
9490 67 B4 BC 53 B8 B3 8D 64 E9 D1 D7 02 B4 C6 D8 AC
94A0 94 DE B8 FF B3 09 D3 B4 BB B3 41 D4 09 D0 29 09
94B0 D3 8C FF 00 C1 D7 7E 94 00 D0 20 D1 0B 8F 1C 2B
94C0 8F E4 00 8B 2E C6 D7 58 94 A0 EA FF D7 D0 94 CF
94D0 69 E9 70 83 02 64 E9 7F D2 02 8E D0 B5 E9 F5 C3
94E0 02 62 E9 62 C0 02 8A 76 71 2B 40 20 DE B8 FF B3 
94F0 00 B4 BB D3 D8 DB 95 62 0B 8F 1B B4 B3 D3 DB D4
9500 60 3B 8E FF B5 E9 A3 82 06 0B 75 B0 85 ED 0B 77
9510 D3 B3 8D 15 E9 D1 D7 02 8F 64 B4 BC B3 8D 64 E9
9520 D6 DC 04 85 EB 0B 75 B3 8E E8 03 81 EB D2 B3 87
9530 ED E9 CA DD 06 B3 81 ED B4 BC B3 8D 19 E9 F6 DC
9540 04 B1 0B 78 28 40 85 E6 66 E9 D1 D7 02 D0 B3 08
9550 D0 28 D1 B3 E9 B6 D3 04 81 E6 D0 85 E6 81 E6 53
9560 C6 D7 48 95 66 E9 D1 D7 02 B3 08 D0 28 D1 B3 E9
9570 77 DE 04 66 E9 D1 D7 02 B3 08 D0 28 D1 B3 E9 77
9580 DE 04 66 E9 D1 D7 02 75 B3 38 E9 77 DE 04 0B 77
9590 D3 51 BE 8F 2D A2 F6 FF 0B 72 D6 C3 95 0A 79 B3
95A0 A0 F6 FF B3 0A 79 D3 B3 E9 0F DE 04 D4 3A E9 33
95B0 82 02 0A 7D B3 A0 F6 FF B3 0A 7D D3 B3 E9 0F DE
95C0 04 D4 0A B0 2A 0A D7 9D 95 0B 8F 14 B3 A0 F6 FF
95D0 B3 0B 8F 14 B0 B3 E9 0F DE 04 B1 00 D0 20 D1 0B
95E0 8F 1C 2B 8F E4 00 8B 2E C6 D7 EC 94 AC 50 83 CF 

FUNCTION $943E (B8 FF) $9443-$95EF

Meta 01/02 = Current City

9443 60          / Push #$0000 to metastack          / (+2)
9444 8D 2E       / Push #$002E to metastack          / (+2)
9446 DE B8 FF    / Store address of meta 72 to M8
9449 B3          / Push M8 to metastack              / (+2)
944A E9 23 F4 06 / Run function $F423                / (-6) Clear 46 meta values starting at 72
944E 40          / Store #$0000 to M8
944F A2 EA FF    / Store M8 to meta 22
9452 8A 76 71    / Store #$7176 to M8
9455 2B          / Store M8 to meta 01/02
9456 40          / Store #$0000 to M8
9457 20          / Store M8 to meta 23/24
9458 0B          / Store meta 01/02 to M8
9459 8F 1B       / Add #$1B to M8
945B D3          / Replace M8 with 1-byte value      /      City status
945C 52          / Store #$02 to MC
945D DA          / MC AND M8                         /      Check if #$02 flag is set
945E D8 B8 94    / Jump to $94B8 if not

9461 41          / Store #$01 to M8
9462 A2 EA FF    / Store M8 to meta 22
9465 DE B8 FF    / Store address of meta 72 to M8
9468 B3          / Push M8 to metastack              / (+2)
9469 00          / Store meta 23/24 to M8
946A B4          / Pull 2 meta to MC                 / (-2)
946B BB          / Add MC to M8
946C B3          / Push M8 to metastack              / (+2)
946D 41          / Store #$01 to M8
946E D4          / Pull 2 meta, store M8 to address  / (-2)
946F DE EF FF    / Store address of meta 17 to M8
9472 B3          / Push M8 to metastack              / (+2)
9473 3B          / Push preloaded 01/02 to metastack / (+2)
9474 E9 D6 D0 04 / Run function $D0D6                / (-4)


     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9470 EF FF B3 3B E9 D6 D0 04 DE EF FF D6 AE 94 09 D3
9480 8B 1C B5 8C 83 71 BB D3 A2 F7 FF A0 F7 FF B3 89
9490 67 B4 BC 53 B8 B3 8D 64 E9 D1 D7 02 B4 C6 D8 AC
94A0 94 DE B8 FF B3 09 D3 B4 BB B3 41 D4 09 D0 29 09
94B0 D3 8C FF 00 C1 D7 7E 94 00 D0 20 D1 0B 8F 1C 2B
94C0 8F E4 00 8B 2E C6 D7 58 94 A0 EA FF D7 D0 94 CF
94D0 69 E9 70 83 02 64 E9 7F D2 02 8E D0 B5 E9 F5 C3
94E0 02 62 E9 62 C0 02 8A 76 71 2B 40 20 DE B8 FF B3 
94F0 00 B4 BB D3 D8 DB 95 62 0B 8F 1B B4 B3 D3 DB D4
9500 60 3B 8E FF B5 E9 A3 82 06 0B 75 B0 85 ED 0B 77
9510 D3 B3 8D 15 E9 D1 D7 02 8F 64 B4 BC B3 8D 64 E9
9520 D6 DC 04 85 EB 0B 75 B3 8E E8 03 81 EB D2 B3 87
9530 ED E9 CA DD 06 B3 81 ED B4 BC B3 8D 19 E9 F6 DC
9540 04 B1 0B 78 28 40 85 E6 66 E9 D1 D7 02 D0 B3 08
9550 D0 28 D1 B3 E9 B6 D3 04 81 E6 D0 85 E6 81 E6 53
9560 C6 D7 48 95 66 E9 D1 D7 02 B3 08 D0 28 D1 B3 E9
9570 77 DE 04 66 E9 D1 D7 02 B3 08 D0 28 D1 B3 E9 77
9580 DE 04 66 E9 D1 D7 02 75 B3 38 E9 77 DE 04 0B 77
9590 D3 51 BE 8F 2D A2 F6 FF 0B 72 D6 C3 95 0A 79 B3
95A0 A0 F6 FF B3 0A 79 D3 B3 E9 0F DE 04 D4 3A E9 33
95B0 82 02 0A 7D B3 A0 F6 FF B3 0A 7D D3 B3 E9 0F DE
95C0 04 D4 0A B0 2A 0A D7 9D 95 0B 8F 14 B3 A0 F6 FF
95D0 B3 0B 8F 14 B0 B3 E9 0F DE 04 B1 00 D0 20 D1 0B
95E0 8F 1C 2B 8F E4 00 8B 2E C6 D7 EC 94 AC 50 83 CF 

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
95F0 20 09 E5 FB FF 0C 72 D3 A2 FD FF 8A 05 60 2B 40
9600 85 FB A0 FD FF B3 0B 72 D3 B4 C0 D8 1E 96 6F 0B
9610 7E D3 B3 E9 60 D4 04 51 C0 D8 1E 96 0B CF 81 FB 
9620 D0 85 FB D1 0B 7F 2B 8F F1 81 FB 8C FF 00 C6 D7
9630 02 96 40 CF

FUNCTION $95F0 (FB FF) $95F5-$9633
For a given officer, searches for an officer of the same Nation with stat flags XXXX0001
Returns the address of that officer.

95F5 0C          / Store preloaded 01/02 to M8       / Officer
95F6 72          / Add #$02 to M8
95F7 D3          / Replace M8 with 1-byte value      / Nation
95F8 A2 FD FF    / Store M8 to meta 03
95FB 8A 05 60    / Store #$6005 to M8
95FE 2B          / Store M8 to meta 01/02
95FF 40          / Store #$00 to M8
9600 85 FB       / Store M8 to meta 04/05
9602 A0 FD FF    / Store meta 03 to M8
9605 B3          / Push M8 to metastack              / (+2)
9606 0B          / Store meta 01/02 to M8
9607 72          / Add #$02 to M8
9608 D3          / Replace M8 with 1-byte value
9609 B4          / Pull 2 meta to MC                 / (-2)
960A C0          / Check if M8=MC
960B D8 1E 96    / Jump to $961E if not

960E 6F          / Push #$0F to metastack            / (+2)
960F 0B          / Store meta 01/02 to M8
9610 7E          / Add #$0E to M8                
9611 D3          / Replace M8 with 1-byte value
9612 B3          / Push M8 to metastack              / (+2)
9613 E9 60 D4 04 / Run function $D460                / (-4) Isolate last 4 bits of status
9617 51          / Store #$01 to MC
9618 C0          / Check if M8=MC
9619 D8 1E 96    / Jump to $961E if not

961C 0B          / Store meta 01/02 to M8
961D CF          / Exit

961E 81 FB       / Store meta 04/05 to M8
9620 D0          / Increment M8
9621 85 FB       / Store M8 to meta 04/05
9623 D1
9624 0B          / Store meta 01/02 to M8
9625 7F          / Add #$0F to M8
9626 2B          / Store M8 to meta 01/02
9627 8F F1     
9629 81 FB       / Store M8 to meta 04/05
962B 8C FF 00    / Store #$00FF to MC
962E C6          / Check if M8<MC
962F D7 02 96    / Jump to $9602 if so
9633 CF          / Exit
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9630             20 09 E5 FA FF 8A 68 70 2B 40 29 0B
9640 74 D6 4D 96 0A 1C C0 D8 4C 96 0B CF 0A B0 2A 0A
9650 D7 44 96 09 D0 29 D1 0B 8F 12 2B 8F EE 09 5F C6
9660 D7 3F 96 40 CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9660                20 09 E5 00 00 3C 3D E9 4C C3 04
9670 8E 0F 27 0D 79 D3 B3 0C 8F 14 B3 E9 2C DE 06 8E
9680 E7 03 0D 7B D3 B3 0C 8F 18 B3 E9 2C DE 06 8E E7
9690 03 0D 7A D3 B3 0C 8F 16 B3 E9 2C DE 06 CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9690                                           20 09
96A0 E5 F7 FF 0C 72 B0 2B D8 0A 97 3C 3B E9 5A C3 04
96B0 60 3B E9 F1 C2 04 0B 77 B3 6A E9 D1 D7 02 D0 D4
96C0 D6 A3 96 60 3B E9 F1 C2 04 D6 0A 97 3C 3B E9 68
96D0 C3 04 0B 72 D3 8B 12 B5 8C 68 70 BB 29 0B 73 B3
96E0 09 76 B0 B3 E9 6E C2 02 8C 76 71 BC 8B 1C B8 D4
96F0 09 72 B0 B3 E9 3B D4 02 5F C6 D8 C3 96 39 3B 8E
9700 B3 A5 8E E0 00 62 E9 79 DD 0A 0C 74 B0 2B D7 CC
9710 96 0C 8C 68 70 BC 8B 12 B8 A2 F9 FF 8A 68 70 29
9720 40 85 F7 09 74 D6 52 97 A0 F9 FF B3 0B 72 D3 B4
9730 C0 D8 51 97 0B B0 2A 39 3B E9 68 C3 04 60 3B E9
9740 F1 C2 04 0B 77 B3 6A E9 D1 D7 02 D0 D4 0A D6 53
9750 97 0B B0 2B 0B D7 28 97 81 F7 D0 85 F7 D1 09 8F
9760 12 29 8F EE 81 F7 5F C6 D7 23 97 40 85 F7 A0 F9
9770 FF 5F B5 83 F7 BB 8C F6 6E BB B3 40 D4 81 F7 5F
9780 B5 B3 A0 F9 FF B4 BB 8C F6 6E BB B3 40 D4 81 F7
9790 D0 85 F7 81 F7 5F C6 D7 6E 97 CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9790                                  20 09 E5 9F FF
97A0 3E E9 F0 95 02 85 A0 D8 E5 97 0C 76 B3 81 A0 B1
97B0 87 A0 0D 72 B0 B1 0D 72 B3 81 A0 B1 81 A0 73 B3
97C0 0D 8C 76 71 BC 8B 1C B8 D4 A0 11 00 B3 87 A0 E9
97D0 F1 C2 04 61 E9 7F D2 02 87 A0 E9 85 D0 02 B3 8E
97E0 1C B6 D6 6F 98 3D 8E 5A B7 8E E0 00 62 E9 79 DD
97F0 08 3D E9 33 CD 02 40 A2 9F FF 0C D6 13 98 DE A2
9800 FF B3 A0 9F FF D2 B4 BB B3 0B B1 A0 9F FF D0 A2
9810 9F FF 0B B0 2B 0B D7 FE 97 A0 9F FF D7 3A 98 3C
9820 E9 9E 96 02 0C 76 B3 40 B1 61 E9 7F D2 02 3C E9
9830 19 D0 02 B3 8E 30 B6 D6 6F 98 DE A2 FF B3 A0 9F
9840 FF B3 E9 D1 D7 02 D2 B4 BB B0 2B 0C 76 B3 0B 72
9850 B0 B1 A0 11 00 B3 0C 76 B0 B3 E9 F1 C2 04 61 E9
9860 7F D2 02 0B 72 B0 B3 E9 85 D0 02 B3 8E 41 B6 E9
9870 27 C6 04 62 E9 62 C0 02 CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9870                            20 09 E5 F8 FF 40 2A
9880 40 28 0C D6 9C 98 63 0B 74 D3 B3 E9 60 D4 04 D0
9890 29 18 C8 D8 9A 98 09 28 0B 2A 0B B0 2B 0B D7 86
98A0 98 0A CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
98A0          20 09 E5 FA FF 8A 6A 74 2A 0A 72 B0 B3
98B0 E9 79 98 02 29 8A 68 70 2B 09 D7 EB 98 0B 72 B0
98C0 B3 E9 79 98 02 29 09 D7 D5 98 8A 05 60 29 43 A9
98D0 EA 6F D6 FB 98 3B 39 E9 5A C3 04 3A 39 8E 78 A5
98E0 8E E0 00 62 E9 79 DD 0A D6 FB 98 3A 39 E9 4C C3
98F0 04 39 0A 72 B0 B1 0A 72 B3 09 B1 66 39 E9 F1 C2
9900 04 0B 76 B3 09 B1 3A 8E 5A B7 8E E0 00 62 E9 79
9910 DD 08 3A E9 33 CD 02 CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9910                         20 09 E5 00 00 61 E9 7F
9920 D2 02 3C E9 85 D0 02 B3 8E 70 B6 E9 27 C6 04 0C
9930 72 D3 8B 12 B5 8C 68 70 BB B3 E9 19 D0 02 B3 8E
9940 77 B6 E9 27 C6 04 8D 1B E9 9F CD 02 62 E9 62 C0
9950 02 CF

4a 32
40 9c

FUNCTION $9918 (00 00) $991D-$9951

991D 61          / Push #$01 to metastack            / (+2)
991E E9 7F D2 02 / Run function $D27F                / (-2) Adjust map?
9922 3C          / Push preloaded 01/02 to metastack / (+2)
9923 E9 85 D0 02 / Run function $D085                / (-2) Retrieve name of officer 
9927 B3          / Push M8 to metastack              / (+2)
9928 8E 70 B6    / Push #$B670 to metastack          / (+2)
992B E9 27 C6 04 / Run function $C627                / (-4) Print "(Officer) of "
992F 0C          / Store preloaded 01/02 to M8
9930 72          / Add #$02 to M8
9931 D3          / Replace M8 with 1-byte value      /      Officer - Nation
9932 8B 12       / Store #$12 to MC
9934 B5          / Multiply M8 by MC
9935 8C 68 70    / Store #$7068 to MC
9938 BB          / Add MC to M8
9939 B3          / Push M8 to metastack              / (+2)
993A E9 19 D0 02 / Run function $D019                / (-2) Retrieve name of nation
993E B3          / Push M8 to metastack              / (+2)
993F 8E 77 B6    / Push #$B677 to metastack          / (+2)
9942 E9 27 C6 04 / Run function $C627                / (-4) Print "(Nation) has died"
9946 8D 1B       / Push #$1B to metastack            / (+2)
9948 E9 9F CD 02 / Run function $CD9F                / (-2) Play audio cue #1B
994C 62          / Push #$02 to metastack            / (+2)
994D E9 62 C0 02 / Run function $C062                / (-2) Wait 2 time units
9951 CF          / Exit

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9950       20 09 E5 FB FF 0C 8C 05 60 C0 D8 64 99 44
9960 A9 EB 6F CF 0C 72 D3 8B 12 B5 8C 68 70 BB 2B 3C 
9970 E9 6E C2 02 2A 6F 0C 7E D3 B3 E9 60 D4 04 A2 FB
9980 FF 68 3C E9 F1 C2 04 A0 FB FF D5 00 00 08 00 B3
9990 99 A1 99 A1 99 A2 99 B4 99 C3 99 D2 99 F2 99 1F
99A0 9A CF 3B 3C E9 18 99 04 3C E9 34 96 02 B3 3C E9
99B0 68 C3 04 CF 3B 3C E9 18 99 04 3B 3C E9 5A C3 04
99C0 D6 B3 99 3B 3C E9 18 99 04 3C 3A E9 65 96 04 D6
99D0 B3 99 3B 3C E9 18 99 04 3C 3A E9 65 96 04 3A 8E
99E0 5A B7 8E E0 00 62 E9 79 DD 08 3A E9 33 CD 02 D6
99F0 B3 99 3B 3C E9 18 99 04 3C 3A E9 65 96 04 0B 76
9A00 B0 1C C0 D8 B3 99 0B 8C 68 70 C0 D8 14 9A AC A3
9A10 98 D6 B3 99 66 3C 3A 3B E9 9B 97 08 D6 B3 99 3B
9A20 3C E9 18 99 04 3C 3A E9 65 96 04 0B 76 B0 1C C0
9A30 D8 B3 99 67 D6 15 9A

FUNCTION $9952 (FB FF) $9957-$9A36

9957 0C          / Store preloaded 01/02 to M8
9958 8C 05 60    / Store #$6005 to MC                / Check if deceased officer is Napoleon
995B C0          / Check if M8=MC
995C D8 64 99    / Jump to $9964 if not
995F 44          / Store #$04 to M8
9960 A9 EB 6F    / Store M8 to $6FEB                 / Set game state to Game Over (Death)
9963 CF          / Exit

9964 0C          / Store preloaded 01/02 to M8
9965 72          / Add #$02 to M8
9966 D3          / Replace M8 with 1-byte value      
9967 8B 12       / Store #$12 to MC
9969 B5          / Multiply M8 by MC
996A 8C 68 70    / Store #$7068 to MC
996D BB          / Add MC to M8
996E 2B          / Store M8 to meta 01/02            /      Deceased Officer - Nation

996F 3C          / Push preloaded 01/02 to M8
9970 E9 6E C2 02 / Run function $C26E                / (-2)
9974 2A          / Store M8 to meta 03/04            /      Deceased Officer - City

9975 6F          / Push #$0F to metastack            / (+2)
9976 0C          / Store preloaded 01/02 to M8
9977 7E          / Add #$0E to M8
9978 D3          / Replace M8 with 1-byte value      /      Deceased Officer - Status
9979 B3          / Push M8 to metastack              / (+2)
997A E9 60 D4 04 / Run function $D460                / (-4) Isolate bits XXXX1111 of status
997E A2 FB FF    / Store $0008 to meta 05

9981 68          / Push #$08 to metastack            / (+2)
9982 3C          / Push preloaded 01/02 to metastack / (+2)
9983 E9 F1 C2 04 / Run function $C2F1                / (-4) Set officer's bottom status flags to 1000 (dead flag)
9987 A0 FB FF    / Store meta 05 to $0008
998A D5 00 00    
        08 00
		B3 99    / If none of the above, go to $99B3
		A1 99    / 
		A1 99    / If bits =  0000/0001, go to $99A1 /      Exit
		A2 99    / If bits =       0010, go to $99A2 / 
		B4 99    / If bits =       0011, go to $99B4 / 
		C3 99    / If bits =       0100, go to $99C3 / 
		D2 99    / If bits =       0101, go to $99D2 / 
		F2 99    / If bits =       0110, go to $99F2 / 
		1F 9A    / If bits =       0111, go to $9A1F / 

99A1 CF          / Exit

99A2 3B          / Push meta 01/02 to metastack      / (+2) Deceased Officer - Nation
99A3 3C          / Push preloaded 01/02 to metastack / (+2) Deceased Officer
99A4 E9 18 99 04 / Run function $9918                / (-4) 		
		
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F	 
99A0 9A CF 3B 3C E9 18 99 04 3C E9 34 96 02 B3 3C E9
99B0 68 C3 04 CF 3B 3C E9 18 99 04 3B 3C E9 5A C3 04
99C0 D6 B3 99 3B 3C E9 18 99 04 3C 3A E9 65 96 04 D6
99D0 B3 99 3B 3C E9 18 99 04 3C 3A E9 65 96 04 3A 8E
99E0 5A B7 8E E0 00 62 E9 79 DD 08 3A E9 33 CD 02 D6
99F0 B3 99 3B 3C E9 18 99 04 3C 3A E9 65 96 04 0B 76
9A00 B0 1C C0 D8 B3 99 0B 8C 68 70 C0 D8 14 9A AC A3
9A10 98 D6 B3 99 66 3C 3A 3B E9 9B 97 08 D6 B3 99 3B
9A20 3C E9 18 99 04 3C 3A E9 65 96 04 0B 76 B0 1C C0
9A30 D8 B3 99 67 D6 15 9A

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9A30                      20 09 E5 FB FF 8A 05 60 85
9A40 FB 40 2B 81 FB 7E D3 58 DA D7 F0 9A 81 FB 78 D3
9A50 A2 FD FF 8B 63 C0 D7 EA 9A 81 FB 73 B3 D3 D0 D4
9A60 A0 FD FF 8B 63 C6 D8 F0 9A 66 E9 D1 D7 02 CD A0
9A70 FD FF BB A2 FD FF A0 FD FF 8B 41 C8 D8 88 9A A0
9A80 FD FF 8F BF D2 D6 89 9A 40 A2 FD FF 64 60 87 FB
9A90 E9 7A D1 04 B3 E9 60 D4 0F D8 A5 9A 6A DE FD FF
9AA0 B3 E9 77 DE 04 A0 FD FF B3 8D 64 E9 D1 D7 02 B4
9AB0 C6 D8 F0 9A A5 EC 6F 8C 80 00 DA 50 C1 D8 C9 9A
9AC0 81 FB 8C 05 60 C0 D7 F0 9A 6F 81 FB 7E D3 B3 E9
9AD0 60 D4 04 57 C0 D8 EA 9A 87 FB E9 F0 95 02 D7 EA
9AE0 9A 81 FB 8C 05 60 C1 D7 F0 9A 87 FB E9 52 99 02
9AF0 0B D0 2B D1 81 FB 7F 85 FB 8F F1 0B 8C FF 00 C6
9B00 D7 43 9A CF

FUNCTION $9A37 (FB FF) $9A3C-$9B03

9A3C 8A 05 60    / Store #$6005 to M8
9A3F 85 FB       / Store M8 to meta 04/05           
9A41 40          / Store #$00 to M8
9A42 2B          / Store M8 to meta 01/02           / Officer #
9A43 81 FB       / Store meta 04/05 to M8           / Current officer
9A45 7E          / Add #$0E to M8
9A46 D3          / Replace M8 with 1-byte value     / Officer status
9A47 58          / Store #$08 to MC
9A48 DA          / MC AND M8                        / Check for death flag
9A49 D7 F0 9A    / Jump to $9AF0 if officer is dead
9A4C 81 FB       / Store meta 04/05 to M8
9A4E 78          / Add #$08 to M8
9A4F D3          / Replace M8 with 1-byte value     / Officer age
9A50 A2 FD FF    / Store $0008 to meta 03 
9A53 8B 63       / Store #$63 to MC                  
9A55 C0          / Check if M8=MC                   / Check if officer is turning 100
9A56 D7 EA 9A    / Jump to $9AEA if so             
9A59 81 FB       / Store meta 04/05 to M8
9A5B 78          / Add #$08 to M8
9A5C B3          / Push M8 to metastack                (+2)
9A5D D3          / Replace M8 with 1-byte value
9A5E D0          / Increment M8
9A5F D4          / Pull 2 meta, store $0008 to address (-2) / Age up
9A60 A0 FD FF    / Store meta 03 to $0008                   / Original age
9A63 8B 63       / Store #$63 to MC
9A65 C6          / Check if M8 < MC
9A66 D8 F0 9A    / Jump to $9AF0 if not             / Skip officer if age is somehow 100+
9A69 66          / Push #$0006 to metastack            (+2)
9A6A E9 D1 D7 02 / Run function $D7D1                  (-2) Random number #$00-#$05
9A6E CD          / Swap MC and M8
9A6F A0 FD FF    / Store meta 03 to $0008
9A72 BB          / Add MC to M8                        Advance age by random value
9A73 A2 FD FF    / Store $0008 to meta 03
9A76 A0 FD FF    / Store meta 03 to $0008
9A79 8B 41       / Store #$41 to MC
9A7B C8          / Check if M8 > MC                    See if adjusted age > 65
9A7C D8 88 9A    / Jump to $9A88 if not                Must be 62 or older to die
9A7F A0 FD FF    / Store meta 03 to $0008
9A82 8F BF       / Subtract #$41 from $0008            Subtract 65 from adjusted age
9A84 D2          / Double M8
9A85 D6 89 9A    / Jump to $9A89
9A88 40          / Store #$00 to M8
9A89 A2 FD FF    / Store $0008 to meta 03
9A8C 64          / Push #$04 to metastack              (+2)
9A8D 60          / Push #$00 to metastack              (+2) 
9A8E 87 FB       / Push meta 04/05 to metastack        (+2)
9A90 E9 7A D1 04 / Run function $D17A                  (-4) Examine hidden stat 1
9A94 B3          / Push M8 to metastack                (+2)
9A95 E9 60 D4 04 / Run function $D460                  (-4) Isolate #$04 flag     (Fortune)
9A99 D8 A5 9A    / Jump to $9AA5 if zero
9A9C 6A          / Push #$0A to metastack              (+2)
9A9D DE FD FF    / Store address of meta 03 to M8
9AA0 B3          / Push M8 to metastack                (+2) 
9AA1 E9 77 DE 04 / Run function $DE77                  (-4) Reduce by #$00-#$10
9AA5 A0 FD FF    / Store meta 03 to $0008
9AA8 B3          / Push M8 to metastack                (+2)
9AA9 8D 64       / Push #$0064 to metastack            (+2)
9AAB E9 D1 D7 02 / Run function $D7D1                  (-2) RNG #$00-#$63
9AAF B4          / Pull 2 meta to MC                   (-2)
9AB0 C6          / Check if M8 < MC
9AB1 D8 F0 9A    / Jump to $9AF0 if not

9AB4 A5 EC 6F    / Store $6FEC to $0008
9AB7 8C 80 00    / Store #$0080 to MC
9ABA DA          / MC AND M8                               
9ABB 50          / Store #$00 to MC
9ABC C1          / Check if M8 is different than MC         Check if autoplay is on
9ABD D8 C9 9A    / Jump to $9AC9 if not

9AC0 81 FB       / Store meta 04/05 to M8
9AC2 8C 05 60    / Store #$6005 to MC
9AC5 C0          / Check if M8=MC                           Check if officer is Napoleon
9AC6 D7 F0 9A    / Jump to $9AF0 if so

9AC9 6F          / Push #$0F to metastack             (+2)
9ACA 81 FB       / Store meta 04/05 to M8
9ACC 7E          / Add #$0E to M8
9ACD D3          / Replace M8 with 1-byte value             Officer - Status
9ACE B3          / Push M8 to metastack               (+2)
9ACF E9 60 D4 04 / Run function $D460                 (-4)  Isolate last 4 bits
9AD3 57          / Store #$07 to MC
9AD4 C0          / Check if M8=MC
9AD5 D8 EA 9A    / Jump to $9AEA if not

9AD8 87 FB       / Push meta 04/05 to metastack       (+2)
9ADA E9 F0 95 02 / Run function $95F0                 (-2) 
9ADE D7 EA 9A    / Jump to $9AEA if positive

9AE1 81 FB       / Store meta 04/05 to M8
9AE3 8C 05 60    / Store #$6005 to MC
9AE6 C1          / Check if M8 is different than MC       
9AE7 D7 F0 9A    / Jump to $9AF0 if so

9AEA 87 FB       / Push meta 04/05 to metastack       (+2)
9AEC E9 52 99 02 / Run function $9952                 (-2) 

9AF0 0B          / Store meta 01/02 to M8
9AF1 D0          / Increment M8
9AF2 2B          / Store M8 to meta 01/02
9AF3 D1        
9AF4 81 FB       / Store meta 04/05 to M8
9AF6 7F          / Add #$0F to M8
9AF7 85 FB       / Store M8 to meta 04/05
9AF9 8F F1
9AFB 0B          / Store meta 01/02 to M8
9AFC 8C FF 00    / Store #$00FF to MC
9AFF C6          / Check if M8<MC
9B00 D7 43 9A    / Jump to $9A43 if so

9B03 CF          / Exit

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9B00             20 09 E5 00 00 8E FF 00 63 3C E9 0B
9B10 D1 06 8B 40 DA CF

FUNCTION $9B04 (00 00) $9B09-$9B15
Check if city is protected by guerrillas

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9B10                   20 09 E5 00 00 8E FF 00 63 3C
9B20 E9 0B D1 06 8B 20 DA CF

FUNCTION $9B16 (00 00) $9B1B-$9B27
Check if city is protected by Cossacks

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9B20                         20 09 E5 FC FF 8A 76 71
9B30 2B 40 2A 3B E9 D2 C2 02 8C 68 70 C0 D8 48 9B 3B
9B40 0C EA 02 D8 48 9B 41 CF 0A D0 2A D1 0B 8F 1C 2B
9B50 8F E4 0A 8B 2E C6 D7 33 9B 40 CF

FUNCTION $9B28 (FC FF) $9B2D-$9B5A

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9B50                                  20 09 E5 FB FF
9B60 8A 76 71 2B 40 85 FB 0B 74 D3 A2 FD FF 3B E9 04
9B70 9B 02 D8 9D 9B A0 FD FF 5A C1 D8 9D 9B A0 FD FF
9B80 8B 12 B5 8C 68 70 BB 8C 68 70 BC 8B 12 B8 5F B5
9B90 8C 00 6F BB D3 8B 20 DA D8 9D 9B 41 CF 81 FB D0
9BA0 85 FB D1 0B 8F 1C 2B 8F E4 81 FB 8B 2E C6 D7 67
9BB0 9B 40 CF

FUNCTION $9B5B (FB FF) $9B60-$9BB2

9B60 8A 76 71    / Store #$7176 to M8
9B63 2B          / Store M8 to meta 01/02
9B64 40          / Store #$00 to M8
9B65 85 FB       / Store M8 to meta 04/05

9B67 0B          / Store meta 01/02 to M8 
9B68 74          / Add #$04 to M8
9B69 D3          / Replace M8 with 1-byte value      / City - Nation
9B6A A2 FD FF    / Store $0008 to meta 03

9B6D 3B          / Push meta 01/02 to M8 
9B6E E9 04 9B 02 / Run function $9B04                / Check if protected by guerrillas
9B72 D8 9D 9B    / Jump to $9B9D if not

9B75 A0 FD FF    / Store meta 03 to $0008
9B78 5A          / Store #$0A to MC
9B79 C1          / Check if M8 is different than M8  / Not Spain
9B7A D8 9D 9B    / Jump to $9B9D if not

9B7D A0 FD FF    / Store meta 03 to $0008
9B80 8B 12       / Store #$12 to MC
9B82 B5          / Multiply M8 by MC
9B83 8C 68 70    / Store #$7068 to MC
9B86 BB          / Add MC to M8
9B87 8C 68 70    / Store #$7068 to MC
9B8A BC          / Subtract MC from M8 
9B8B 8B 12       / Store #$12 to MC
9B8D B8          / Divide M8 by MC
9B8E 5F          / Store #$0F to MC
9B8F B5          / Multiply M8 by MC
9B90 8C 00 6F    / Store #$6F00 to MC
9B93 BB          / Add MC to M8
9B94 D3          / Replace M8 with 1-byte value      / Nation's diplomacy w/ Spain
9B95 8B 20       / Store #$20 to MC
9B97 DA          / MC AND M8                         / Check for hostility
9B98 D8 9D 9B    / Jump to $9B9D if not

9B9B 41          / Store #$01 to M8
9B9C CF          / Exit

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9B90 8C 00 6F BB D3 8B 20 DA D8 9D 9B 41 CF 81 FB D0
9BA0 85 FB D1 0B 8F 1C 2B 8F E4 81 FB 8B 2E C6 D7 67
9BB0 9B 40 CF

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9BB0          20 09 E5 F7 FF A4 1C 71 50 C1 D8 C6 9B
9BC0 AC 5B 9B D7 C7 9B CF 8A 76 71 2B 41 A2 F7 FF 40
9BD0 28 D6 79 9C 0B 74 D3 5A C1 D7 6F 9C 3B E9 04 9B
9BE0 02 D8 6F 9C 8D 64 E9 D1 D7 02 8B 4B C6 D8 6F 9C
9BF0 0B 75 B0 5A B8 29 09 53 C9 D8 27 9C 0B 8F 14 B0
9C00 8C F4 01 C6 D8 27 9C 39 0B 75 B3 E9 6E DE 04 8E
9C10 0F 27 39 0B 8F 14 B3 E9 2C DE 06 8E 0F 27 39 0B
9C20 8F 10 B3 E9 2C DE 06 0B 72 D6 47 9C 8D 64 8D 32
9C30 0A 7D B3 E9 3B DE 06 8D 64 0A 77 D3 51 BE B3 0A
9C40 77 B3 E9 3B DE 06 0A B0 2A 0A D7 2C 9C A0 F7 FF
9C50 D8 5C 9C 61 E9 7F D2 02 40 A2 F7 FF 3B 8E 83 B6
9C60 E9 80 82 04 8D 1B E9 9F CD 02 62 E9 62 C0 02 08
9C70 D0 28 D1 0B 8F 1C 2B 8F E4 08 8B 2E C6 D7 D4 9B
9C80 CF

FUNCTION $9BB3 (F7 FF) $9BB8-$9C80
Tests for guerrilla attack

9BB8 A4 1C 71    / Store $711C/$711D to M8           / Spain first city   
9BBB 50          / Store #$00 to MC
9BBC C1          / Check if M8 is different than MC  / Check if Spain still exists
9BBD D8 C6 9B    / Jump to $9BC6 if not
9BC0 AC 5B 9B    / Run function $9B5B                / Checks if there are any cities for guerrillas to attack
9BC3 D7 C7 9B    / Jump to $9BC7 if so
9BC6 CF          / Exit 

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9BC0 AC 5B 9B D7 C7 9B CF 8A 76 71 2B 41 A2 F7 FF 40
9BD0 28 D6 79 9C 0B 74 D3 5A C1 D7 6F 9C 3B E9 04 9B
9BE0 02 D8 6F 9C 8D 64 E9 D1 D7 02 8B 4B C6 D8 6F 9C
9BF0 0B 75 B0 5A B8 29 09 53 C9 D8 27 9C 0B 8F 14 B0
9C00 8C F4 01 C6 D8 27 9C 39 0B 75 B3 E9 6E DE 04 8E
9C10 0F 27 39 0B 8F 14 B3 E9 2C DE 06 8E 0F 27 39 0B
9C20 8F 10 B3 E9 2C DE 06 0B 72 D6 47 9C 8D 64 8D 32
9C30 0A 7D B3 E9 3B DE 06 8D 64 0A 77 D3 51 BE B3 0A
9C40 77 B3 E9 3B DE 06 0A B0 2A 0A D7 2C 9C A0 F7 FF
9C50 D8 5C 9C 61 E9 7F D2 02 40 A2 F7 FF 3B 8E 83 B6
9C60 E9 80 82 04 8D 1B E9 9F CD 02 62 E9 62 C0 02 08
9C70 D0 28 D1 0B 8F 1C 2B 8F E4 08 8B 2E C6 D7 D4 9B
9C80 CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9C80    20 09 E5 F7 FF 8A 40 71 2B 0B 8C 68 70 BC 8B
9C90 12 B8 8C F6 6E BB D3 8B 20 DA D8 A7 9C 8E 16 9B
9CA0 E9 28 9B 02 D7 A8 9C CF 41 A2 F9 FF 8A 76 71 2A
9CB0 40 85 F7 3A E9 D2 C2 02 8C 68 70 C1 D7 36 9D 3A
9CC0 E9 16 9B 02 D8 36 9D A5 E3 6F 53 B5 52 BE B3 8D
9CD0 64 E9 D1 D7 02 B4 C6 D8 36 9D 8D 10 E9 D1 D7 02
9CE0 75 B3 0A 8F 14 B3 E9 85 CD 04 8D 2E E9 D1 D7 02
9CF0 75 B3 0A 8F 10 B3 E9 85 CD 04 0A 72 D6 14 9D 8D
9D00 10 E9 D1 D7 02 75 B3 09 79 B3 E9 B6 D3 04 39 E9
9D10 33 82 02 09 B0 29 09 D7 FF 9C A0 F9 FF D8 29 9D
9D20 6C E9 70 83 02 40 A2 F9 FF 3A 8E A2 B6 E9 80 82
9D30 04 62 E9 62 C0 02 81 F7 D0 85 F7 D1 0A 8F 1C 2A
9D40 8F E4 81 F7 8B 2E C6 D7 B3 9C CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9D40                                  20 09 E5 FF FF
9D50 0C 7A D3 D8 5B 9D 89 30 D6 68 9D 0C 7B D3 D8 67
9D60 9D 8A C0 00 D6 68 9D 4C A2 FF FF A0 FF FF B3 0C
9D70 75 D3 B3 E9 60 D4 04 CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9D70                         20 09 E5 F6 FF 8A 1C 71
9D80 2B 0B 8C 68 70 BC 8B 12 B8 8C F6 6E BB D3 8B 20
9D90 DA D8 9E 9D 8E 04 9B E9 28 9B 02 D7 9F 9D CF 41
9DA0 A2 F8 FF 8A 76 71 2A 40 27 3A E9 D2 C2 02 8C 68
9DB0 70 C1 D7 2C 9E 3A E9 04 9B 02 D8 2C 9E A5 E1 6F
9DC0 53 B8 B3 8D 64 E9 D1 D7 02 B4 C6 D8 2C 9E 8D 15
9DD0 E9 D1 D7 02 75 B3 0A 8F 14 B3 E9 85 CD 04 0A 72
9DE0 D6 0A 9E 39 E9 4B 9D 02 5A B5 7A A2 F9 FF A0 F9
9DF0 FF B3 89 2E B4 BC B3 E9 D1 D7 02 75 B3 09 79 B3
9E00 E9 B6 D3 04 39 E9 33 82 02 09 B0 29 09 D7 E3 9D
9E10 A0 F8 FF D8 1F 9E 6D E9 70 83 02 40 A2 F8 FF 3A
9E20 8E BE B6 E9 80 82 04 62 E9 62 C0 02 07 D0 27 D1
9E30 0A 8F 1C 2A 8F E4 07 8B 2E C6 D7 A9 9D CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9E30                                           20 09
9E40 E5 F7 FF DE F7 FF B3 0C B0 B3 E9 E6 D0 04 DE F7
9E50 FF D6 70 9E 0D 8C 68 70 BC 8B 12 B8 B3 0B D3 8B
9E60 1C B5 8B 7A 71 BB D3 B4 C0 D8 6E 9E 41 CF 0B D0
9E70 2B 0B D3 8C FF 00 C1 D7 54 9E 40 CF

FUNCTION $9E3E (F7 FF) $9E3E-$9E7B

9E43 DE F7 FF    / Store address of meta 09 to M8
9E46 B3          / Push M8 to metastack             (+2)
9E47 0C          / Store preloaded 01/02 to M8
9E48 B0          / Replace M8 with 2-byte value        First city
9E49 B3          / Pushes M8 to metastack           (+2)
9E4A E9 E6 D0 04 / Run function $D0E6               (-2) Store adjacent cities to meta
9E4E DE F7 FF    / Store address of meta 09 to M8
9E51 D6 70 9E    / Jump to $9E70

9E54 0D          / Store preloaded 03/04 to M8
9E55 8C 68 70    / Store #$7068 to MC
9E58 BC          / Subtract MC from M8 
9E59 8B 12       / Store #$12 to MC
9E5B B8          / Divide MC by M8
9E5C B3          / Push M8 to metastack            (+2)
9E5D 0B          / Store meta 01/02 to M8       
9E5E D3          / Replace M8 with 1-byte value
9E5F 8B 1C       / Store #$12 to MC
9E61 B5          / Multiply M8 by MC
9E62 8C 7A 71    / Store #$717A to MC
9E65 BB          / Add MC to M8
9E66 D3          / Replace M8 with 1-byte value
9E67 B4          / Pull 2 meta values to MC       (-2)
9E68 C0          / Check if M8=MC
9E69 D8 6E 9E    / Jump to $9E6E if not
9E6C 41          / Store #$01 to M8
9E6D CF          / Exit
9E6E 0B          / Store meta 01/02 to M8
9E6F D0          / Increment 
9E70 2B          / Store M8 to meta 01/02
9E71 0B 

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9E50 FF D6 70 9E 0D 8C 68 70 BC 8B 12 B8 B3 0B D3 8B
9E60 1C B5 8C 7A 71 BB D3 B4 C0 D8 6E 9E 41 CF 0B D0
9E70 2B 0B D3 8C FF 00 C1 D7 54 9E 40 CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9E70                                     20 09 E5 FE
9E80 FF 0C 8C 68 70 BC 8B 12 B8 8C D7 6F BB D3 A2 FF
9E90 FF 0D 8C 68 70 BC 8B 12 B8 8C D7 6F BB D3 A2 FE
9EA0 FF A0 FE FF B3 A0 FF FF B4 C9 D8 B7 9E A0 FE FF
9EB0 B3 A0 FF FF D6 BE 9E A0 FF FF B3 A0 FE FF B4 BC
9EC0 CF

FUNCTION $9E7C (FE FF) $9E81-$9EC0

9E81 0C          / Store preloaded 01/02 to M8
9E82 8C 68 70    / Store $7068 to MC
9E85 BC          / Subtract MC from M8
9E86 8B 12       / Store #$12 to MC
9E88 B8          / Divide MC by M8              / Isolate nation code 1
9E89 8C D7 6F    / Store #$6FD7 to MC
9E8C BB          / Add MC to M8
9E8D D3          / Replace M8 with 1-byte value / Nation 1 - Aggression vs. France
9E8E A2 

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9E80 FF 0C 8C 68 70 BC 8B 12 B8 8C D7 6F BB D3 A2 FF
9E90 FF 0D 8C 68 70 BC 8B 12 B8 8C D7 6F BB D3 A2 FE
9EA0 FF A0 FE FF B3 A0 FF FF B4 C9 D8 B7 9E A0 FE FF
9EB0 B3 A0 FF FF D6 BE 9E A0 FF FF B3 A0 FE FF B4 BC
9EC0 CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9EC0    20 09 E5 00 00 0C 8C 76 71 BC 8B 1C B8 8C EB
9ED0 B6 BB D3 CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9ED0             20 09 E5 F4 FF 0C B0 B3 E9 C1 9E 02	 
9EE0 B3 8E C5 A9 8E E0 00 62 E9 79 DD 08 8E C2 AB 8E
9EF0 E0 00 62 E9 79 DD 06 A4 55 7B 27 A4 57 7B 26 8E
9F00 05 60 E9 6E C2 02 A8 55 7B 0C 76 B0 B3 E9 6E C2
9F10 02 A8 57 7B A4 29 7D 2A 61 E9 7F D2 02 61 E9 C4
9F20 D1 02 A4 29 7D 29 8E 19 B7 0C 76 B0 B3 E9 8D C2
9F30 02 B3 E9 8B 83 04 68 E9 7F D2 02 3C E9 19 D0 02
9F40 B3 8E 44 B7 E9 27 C6 04 8E 6C B7 E9 E9 C3 02 8D
9F50 1E 8D 20 60 60 E9 3D CE 08 A4 5B 7B 28 D6 AB 9F
9F60 61 3A E9 3C 80 04 41 A2 FE FF 60 E9 5F C6 02 D7
9F70 6A 9F D6 90 9F A0 FE FF B3 E9 DF C6 02 61 E9 62
9F80 C0 02 A0 FE FF D8 8C 9F 40 D6 8D 9F 41 A2 FE FF
9F90 60 E9 5F C6 02 D8 75 9F 61 E9 DF C6 02 8D 40 60
9FA0 6C E9 1E EF 06 60 39 E9 3C 80 04 08 A8 5B 7B AC
9FB0 91 CA A2 FF FF A0 FF FF 8C FF 00 C1 D8 60 9F 8D
9FC0 1E 8D 20 60 60 E9 D5 CE 08 60 E9 C4 D1 02 07 A8
9FD0 55 7B 06 A8 57 7B A0 FF FF CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9FD0                               20 09 E5 FA FF 0C
9FE0 76 B0 2A 0C B0 2B D6 0B A0 3B 39 E9 4C C3 04 09
9FF0 77 B3 6A E9 D1 D7 02 D0 D4 39 8E 59 A5 8E E0 00
A000 62 E9 79 DD 08 60 39 E9 F1 C2 04 0A B0 29 D7 E9
A010 9F 3C 3B 8E 30 A6 8E E0 00 62 E9 79 DD 0A 0C 76
A020 B3 40 B1 3D 3B 8E 17 A6 8E E0 00 62 E9 79 DD 0A
A030 0A 72 B3 0D 8C 68 70 BC 8B 12 B8 D4 65 3A E9 F1
A040 C2 04 3B 8E 5A B7 8E E0 00 62 E9 79 DD 08 3C E9
A050 9E 96 02 8D 1A E9 9F CD 02 64 E9 7F D2 02 3C E9
A060 19 D0 02 B3 8E 7D B7 E9 38 C6 04 3D E9 19 D0 02
A070 B3 8E 8F B7 E9 38 C6 04 63 E9 62 C0 02 CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A070                                           20 09
A080 E5 E8 FF A5 EA 6F 53 C6 D8 8C A0 CF 41 A2 EA FF
A090 8A 68 70 2B 40 20 D6 5D A1 60 3B 8E E6 B4 8E E0
A0A0 00 62 E9 79 DD 0A 51 C1 D7 53 A1 6C DE EC FF B3
A0B0 8E 68 70 8E 43 A4 8E E0 00 62 E9 79 DD 0C 52 C7
A0C0 D7 53 A1 6D DE EC FF B3 3B 8E 43 A4 8E E0 00 62
A0D0 E9 79 DD 0C 51 C1 D7 53 A1 A0 EC FF 8B 12 B5 8C
A0E0 68 70 BB 2A 60 3A 8E E6 B4 8E E0 00 62 E9 79 DD
A0F0 0A 55 C5 D8 53 A1 3A 3B E9 3E 9E 04 D8 53 A1 3A
A100 3B E9 7C 9E 04 A2 EB FF 5F C6 D8 53 A1 A0 EB FF
A110 D2 B3 89 64 B4 BC B3 8D 64 E9 D1 D7 02 B4 C6 D8
A120 53 A1 0A 8C 68 70 C0 D8 3E A1 A5 EC 6F 8C 80 00
A130 DA 50 C1 D7 3E A1 3B E9 D4 9E 02 D8 53 A1 A0 EA 
A140 FF D8 4D A1 6E E9 70 83 02 40 A2 EA FF 3A 3B E9
A150 DA 9F 04 00 D0 20 D1 0B 8F 12 2B 8F EE 00 5F C6 
A160 D7 99 A0 CF

FUNCTION $A07E (E8 FF) $A083-$A163

A083 A5 EA 6F    / Store $6FEA to $0008             / Check Scenario
A086 53          / Store #$03 to MC
A087 C6          / Check if M8 < MC
A088 D8 8C A0    / Jump to $A08C if not
A08B CF          / Exit
A08C 41          / Store #$01 to M8
A08D A2 EA FF    / Store M8 to meta 16
A090 8A 68 70    / Store #$7068 to M8              / Start of diplomacy stats
A093 2B          / Store M8 to meta 01/02
A094 40          / Store #$00 to M8
A095 20          / Store M8 to meta 17/18
A096 D6 5D A1    / Jump to $A15D

A099 60          / Push #$00 to metastack           (+2)
A09A 3B          / Push meta 01/02 to metastack     (+2)
A09B 8E E6 B4    / Push #$B4E6 to metastack         (+2) Tally # of cities owned by nation
A09E 8E E0 00    / Push #$00E0 to metastack         (+2)
A0A1 62          / Push #$0002 to metastack         (+2)
A0A2 E9 79 DD 0A / Run function $DD79               (-A) Tally # of cities owned by nation
A0A6 51          / Store #$01 to MC
A0A7 C1          / Check if M8!=MC
A0A8 D7 53 A1    / Jump to $A153 if it does

A0AB 6C          / Push #$0C to metastack           (+2)
A0AC DE EC FF    / Store address of meta 14 to M8
A0AF B3          / Push M8 to metastack             (+2)
A0B0 8E 68 70    / Push #$7068 to metastack         (+2)
A0B3 8E 43 A4    / Push #$A443 to metastack         (+2)
A0B6 8E E0 00    / Push #$00E0 to metastack         (+2)
A0B9 62          / Push #$0002 to metastack         (+2)
A0BA E9 79 DD 0C / Run function $DD79               (-C) $A443 on page E0
A0BE 52          / Store #$02 to MC
A0BF C7          / Check if M8 ≤ MC
A0C0 D7 53 A1    / Jump to $A153 if it does






A0C3 6D          / Push #$0D to metastack           (+2)
A0C4 DE EC FF    / Store address of meta 14 to M8  
A0C7 B3          / Push M8 to metastack             (+2)
A0C8 3B          / Push meta 01/02 to metastack     (+2)
A0C9 8E 43 A4    / Push #$A443 to metastack         (+2)
A0CC 8E E0 00    / Push #$00E0 to metastack         (+2)
A0CF 62          / Push #$0002 to metastack         (+2)
A0D0 E9 79 DD 0C / Run function $DD79               (-C) $A443 on page E0
A0D4 51          / Store #$01 to MC
A0D5 C1          / Check if M8!=MC
A0D6 D7 53 A1    / Jump to $A153 if it does


A0D9 A0 EC FF    / Store meta 14 to $0008
A0DC 8B 12       / Store #$12 to MC
A0DE B5          / Multiply M8 by MC
A0DF 8C 68 70    / Store #$7068 to MC
A0E2 BB          / Add MC to M8
A0E3 2A          / Store M8 to meta 03/04
A0E4 60          / Push #$00 to metastack           (+2)
A0E5 3A          / Push meta 03/04 to metastack     (+2)
A0E6 8E E6 B4    / Push #$B4E6 to metastack         (+2) 
A0E9 8E E0 00    / Push #$00E0 to metastack         (+2)
A0EC 62          / Push #$02 to metastack           (+2)
A0ED E9 79 DD 0A / Run function $DD79               (-A) Tally # of cities owned by nation
A0F1 55          / Store #$05 to MC
A0F2 C5          / Check if M8 ≥ MC (signed)
A0F3 D8 53 A1    / Jump to $A153 if not


A0F6 3A          / Push meta 03/04 to metastack     (+2)
A0F7 3B          / Push meta 01/02 to metastack     (+2)
A0F8 E9 3E 9E 04 / Run function $9E3E               (-4)
A0FC D8 53 A1    / Jump to $A153 if M8=#$00

A0FF 3A          / Push meta 03/04 to metastack     (+2)
A100 3B          / Push meta 01/02 to metastack     (+2)
A101 E9 7C 9E 04 / Run function $9E7C               (-4)
A105 A2 EB FF    / Store $0008 to meta 15

A108 5F          / Store #$0F to MC
A109 C6          / Check if M8 < MC
A10A D8 53 A1    / Jump to $A153 if not

A10D A0 EB FF    / Store meta 15 to $0008
A110 D2          / Double M8
A111 B3          / Push M8 to metastack             (+2)\
A112 89 64       / Store #$64 to M8                     |
A114 B4          / Pull 2 values from meta to MC    (-2)/
A115 BC          / Subtract MC from M8
A116 B3          / Push M8 to metastack             (+2)
A117 8D 64       / Push #$0064 to metastack         (+2)
A119 E9 D1 D7 02 / Run function $D7D1               (-2) Random number from #$00-#$63
A11D B4          / Pull 2 values from meta to MC    (-2)
A11E C6          / Check if M8 < MC

A11F D8 53 A1    / Jump to $A153 if not
A122 0A          / Transfer meta 03/04 to M8
A123 8C 68 70    / Store #$7068 to MC
A126 C0          / Check if M8=MC
A127 D8 3E A1    / Jump to $A13E if not
A12A A5 EC 6F    / Store $6FEC to $0008
A12D 8C 80 00    / Store #$0080 to MC
A130 DA          / MC AND M8
A131 50          / Store #$00 to MC
A132 C1          / Check if M8!=MC
A133 D7 3E A1    / Jump to $A13E if it isn't

A136 3B          / Push meta 01/02 to metastack    (+2)
A137 E9 D4 9E 02 / Run function $9ED4              (-2)
A13B D8 53 A1    / Jump to $A153 if M8=#$00

A13E A0 EA FF    / Store meta 16 to $0008
A141 D8 4D A1    / Jump to $A14D if M8=#$00
A144 6E          / Push #$0E to metastack          (+2)
A145 E9 70 83 02 / Run function $8370              (-2)
A149 40          / Store #$00 to M8
A14A A2 EA FF    / Store $0008 to meta 16
A14D 3A          / Push meta 03/04 to metastack    (+2)
A14E 3B          / Push meta 01/02 to metastack    (+2)
A14F E9 DA 94 04 / Run function $94DA              (-4)

A153 00          / Store meta 17/18 to M8
A154 D0          / Increment M8
A155 20          / Store M8 to meta 17/18
A156 D1          / Decrement M8
A157 0B          / Store meta 01/02 to M8
A158 8F 12       / Add #$12 to M8
A15A 2B          / Store M8 to meta 01/02
A15B 8F EE       / Add #$EE to M8 (minus 12)

A15D 00          / Store meta 17/18 to M8
A15E 5F          / Store #$0F to MC
A15F C6          / Check if M8 < MC
A160 D7 99 A0    / Jump to $A099 if so
A163 CF          / Exit
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A160             20 09 E5 00 00 8D 64 E9 52 C0 02 A5
A170 EC 6F 8C 80 00 DA 50 C1 D7 8A A1 65 E9 7F D2 02
A180 8E A0 B7 E9 E9 C3 02 AC 49 C6 CF

FUNCTION $A164 (00 00) $A169-$A18A
Wait for player input before continuing

A169 8D 64       / Push #$64 to metastack            / (+2)
A16B E9 52 C0 02 / Run function $C052                / (-2) Wait 100 frames
A16F A5 EC 6F    / Store $6FEC to $0008              /      Settings
A172 8C 80 00    / Store #$0080 to MC
A175 DA          / MC AND M8                      
A176 50          / Store #$00 to MC
A177 C1          / Check if M8 is different than MC  /      Check if autoplay is on
A178 D7 8A A1    / Jump to $A18A if so

A17B 65          / Push #$05 to metastack            / (+2)
A17C E9 7F D2 02 / Run function $D27F                / (-2) Text profile #$05

A180 8E A0 B7    / Push #$B7A0 to metastack          / (+2)
A183 E9 E9 C3 02 / Run function $C3E9                / (-2) Print "Press any button"
A187 AC 49 C6    / Run function $C649                /      Wait for input
A18A CF          / Exit

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A180                                  20 09 E5 FF FF
A190 60 60 6C 8D 1A 64 63 68 E9 1E EF 0E 60 E9 6F CF
A1A0 02 8E C0 00 8E E0 00 67 69 66 6B 68 E9 1E EF 0E
A1B0 A5 EC 6F A2 FF FF 42 CD A5 EC 6F DB A9 EC 6F 3C
A1C0 67 6C 8E 3A A0 8E E0 00 62 E9 79 DD 0C A0 FF FF
A1D0 A9 EC 6F CF

FUNCTION $A18B (FF FF) $A190-$A1D3

A190 60          / Push #$00 to metastack            / (+2)
A191 60          / Push #$00 to metastack            / (+2)
A192 6C          / Push #$0C to metastack            / (+2)
A193 8D 1A       / Push #$1A to metastack            / (+2)
A195 64          / Push #$04 to metastack            / (+2)
A196 63          / Push #$03 to metastack            / (+2)
A197 68          / Push #$08 to metastack            / (+2)
A198 E9 1E EF 0E / Run function $EF1E                / (-E)

A19C 60          / Push #$00 to metastack            / (+2)
A19D E9 6F CF 02 / Run function $CF6F                / (-2) Black out screen
 
A1A1 8E C0 00    / Push #$C0 to metastack            / (+2)
A1A4 8E E0 00    / Push #$E0 to metastack            / (+2)
A1A7 67          / Push #$07 to metastack            / (+2)
A1A8 69          / Push #$09 to metastack            / (+2)
A1A9 66          / Push #$06 to metastack            / (+2)
A1AA 6B          / Push #$0B to metastack            / (+2)
A1AB 68          / Push #$08 to metastack            / (+2)
A1AC E9 1E EF 0E / Run function $EF1E                / (-E)

A1B0 A5 EC 6F    / Store $6FEC to $0008              /      Settings
A1B3 A2 FF FF    / Store $0008 to meta 1
A1B6 42          / Store #$02 to M8
A1B7 CD          / Swap M8 and MC
A1B8 A5 EC 6F    / Store $6FEC to $0008
A1BB DB          / M8 ORA MC
A1BC A9 EC 6F    / Store $0008 to $6FEC              /      Turn on graphics flag

A1BF 3C          / Push preloaded 01/02 to metastack / (+2)
A1C0 67          / Push #$07 to metastack            / (+2)
A1C1 6C          / Push #$0C to metastack            / (+2)
A1C2 8E 3A A0    / Push #$A03A to metastack          / (+2)
A1C5 8E E0 00    / Push #$00E0 to metastack          / (+2)
A1C8 62          / Push #$02 to metastack            / (+2)
A1C9 E9 79 DD 0C / Run function $DD79                / (-C) Print graphic (1/2) to coords 12,7

A1CD A0 FF FF    / Store meta 1 to $0008
A1D0 A9 EC 6F    / Store $0008 to $6FEC              /      Restore original graphics setting

A1D3 CF          / Exit

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A1D0             20 09 E5 F0 FF 60 60 6C 8D 1A 64 63
A1E0 68 E9 1E EF 0E 8D 10 DE F0 FF B3 0C 54 BD 8C 9E
A1F0 BA BB B3 8E F3 00 62 E9 A3 F3 0A 8D 10 60 DE F0
A200 FF B3 66 E9 1E EF 08 3C 68 6B 8E 10 A0 8E E0 00
A210 62 E9 79 DD 0C CF

FUNCTION $A1D4 (F0 FF) $A1D9-$A215

A1D9 60          / Push #$00 to metastack            / (+2)
A1DA 60          / Push #$00 to metastack            / (+2)
A1DB 6C          / Push #$0C to metastack            / (+2)
A1DC 8D 1A       / Push #$1A to metastack            / (+2)
A1DE 64          / Push #$04 to metastack            / (+2)
A1DF 63          / Push #$03 to metastack            / (+2)
A1E0 68          / Push #$08 to metastack            / (+2)
A1E1 E9 1E EF 0E / Run function $EF1E                / (-E)

A1E5 8D 10       / Push #$10 to metastack            / (+2)
A1E7 DE F0 FF    / Store address of meta 16 to M8
A1EA B3          / Push M8 to metastack              / (+2)
A1EB 0C          / Store preloaded 01/02 to M8
A1EC 54          /
A1ED BD          / Multiply M8 by 16
A1EE 8C 9E BA    / Store #$BA9E to MC
A1F1 BB          / Add MC to M8
A1F2 B3          / Push M8 to metastack              / (+2)
A1F3 8E F3 00    / Push #$00F3 to metastack          / (+2)
A1F6 62          / Push #$02 to metastack            / (+2)
A1F7 E9 A3 F3 0A / Run function $F3A3                / (-A) Load palette set (1/2)?

A1FB 8D 10       / Push #$10 to metastack            / (+2)
A1FD 60          / Push #$00 to metastack            / (+2)
A1FE DE F0 FF    / Store address of meta 16 to M8
A201 B3          / Push M8 to metastack              / (+2)
A202 66          / Push #$06 to metastack            / (+2)


     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A1F0 BA BB B3 8E F3 00 62 E9 A3 F3 0A 8D 10 60 DE F0
A200 FF B3 66 E9 1E EF 08 3C 68 6B 8E 10 A0 8E E0 00
A210 62 E9 79 DD 0C CF

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A210                   20 09 E5 00 00 65 E9 7F D2 02
A220 3C 8E B3 B7 E9 38 C6 04 A0 0D 00 8C FF 00 C1 D8
A230 3A A2 A0 0D 00 B3 E9 62 C0 02 CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A230                                  20 09 E5 00 00
A240 62 8E A2 76 3C 8E F4 00 62 E9 A3 F3 0A 8D 50 8E
A250 A4 76 AA A2 76 8E F4 00 62 E9 A3 F3 0A CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A250                                           20 09
A260 E5 EA FF 65 E9 7F D2 02 62 DE FE FF B3 A5 E8 6F
A270 D1 D2 8C A6 AD BB B3 8E F4 00 62 E9 A3 F3 0A 6A
A280 DE EA FF B3 3B 8E F4 00 62 E9 A3 F3 0A 3C AA E6
A290 6F DE EA FF B3 AA B7 B7 E9 38 C6 08 CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A290                                        20 09 E5
A2A0 00 00 42 A9 EA 6F 6D E9 E4 CD 02 60 E9 F7 CD 02
A2B0 61 E9 AC 83 02 AA CF B7 AA 6E 70 E9 8D C2 02 B3
A2C0 E9 8B 83 04 61 E9 D4 A1 02 AA D1 B7 E9 5E A2 02
A2D0 AC 64 A1 60 E9 AC 83 02 41 CF

FUNCTION $A29D (00 00 ) $A2A2-$A2D9
Advance from Scenario 1 to Scenario 2

A2A2 42          / Store #$02 to M8
A2A3 A9 EA 6F    / Store $0008 to $6FEA              / Scenario
A2A6 6D          / Push #$000D to metastack          / (+2)
A2A7 E9 E4 CD 02 / Run function $CDE4                / (-2)
A2AB 60          / Push #$0000 to metastack          / (+2)
A2AC E9 F7 CD 02 / Run function $CDF7                / (-2)
A2B0 61          / Push #$0001 to metastack          / (+2)
A2B1 E9 AC 83 02 / Run function $83AC                / (-2)
A2B5 AA CF B7    / Push $B7CF/$B7D0 to metastack     / (+2) "The directorate is selecting
                                                             you as the people's
															 commander-in-chief."
A2B8 AA 6E 70    / Push $706E/$706F to metastack     / (+2) France - Nation Ruler
A2BB E9 8D C2 02 / Run function $C28D                / (-2) Find officer's portrait code 
A2BF B3          / Push M8 to metastack              / (+2) 
A2C0 E9 8B 83 04 / Run function $838B                / (-4)
A2C4 61          / Push #$0001 to metastack          / (+2)
A2C5 E9 D4 A1 02 / Run function $A1D4                / (-2)
A2C9 AA D1 B7    / Push $B7D1/$B7D2 to metastack     / (+2) "Napoleon Bonaparte has
                                                             taken the title of
															 commander-in-chief."
A2CC E9 5E A2 02 / Run function $A25E                / (-2)
A2D0 AC 64 A1    / Run function $A164                       Stall for 100 frames,
                                                            then wait for player input
A2D3 60          / Push #$0000 to metastack          / (+2)
A2D4 E9 AC 83 02 / Run function $83AC                / (-2)
A2D8 41          / Store #$01 to M8
A2D9 CF          / Exit
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A2D0                               20 09 E5 FF FF 63
A2E0 60 3C E9 7A D1 04 B3 E9 60 D4 04 A2 FF FF 6F 0C
A2F0 7E D3 B3 E9 60 D4 04 56 C0 D7 2A A3 A0 FF FF 53
A300 C0 D7 2E A3 0C 7E D3 8C 80 00 DA D7 2E A3 A0 FF
A310 FF 8B 28 B5 7A B3 0C 77 D3 B3 E9 0F DE 04 B3 8D
A320 64 E9 D1 D7 02 B4 C6 D8 2E A3 40 D6 2F A3 41 CF

FUNCTION $A2DA (FF FF) $A2DF-$A32F

A2DF 63          / Push #$03 to metastack            / (+2)
A2E0 60          / Push #$00 to metastack            / (+2)
A2E1 3C          / Push preloaded 01/02 to metastack / (+2) Officer
A2E2 E9 7A D1 04 / Run function $D17A                / (-4)
A2E6 B3          / Push M8 to metastack              / (+2)
A2E7 E9 60 D4 04 / Run function $D460                / (-4) Allegiance
A2EB A2 FF FF    / Store $0008 to meta 01

A2EE 6F          / Push #$0F to metastack            / (+2)
A2EF 0C          / Store preloaded 01/02 to M8
A2F0 7E          / Add #$0E to M8
A2F1 D3          / Replace M8 with 1-byte value      /      Status
A2F2 B3          / Push M8 to metastack              / (+2)
A2F3 E9 60 D4 04 / Run function $D460                / (-2) Get lower bits
A2F7 56          / Store #$06 to MC
A2F8 C0          / Check if M8 = MC
A2F9 D7 2A A3    / Jump to $A32A if so

A2FC A0 FF FF    / Store $0008 to meta 01
A2FF 53          / Store #$03 to MC
A300 C0          / Check if M8 = MC
A301 D7 2E A3    / Jump to $A32E if so

A304 0C          / Store preloaded 01/02 to M8
A305 7E          / Add #$0E to M8
A306 D3          / Replace M8 with 1-byte value
A307 8C 80 00    / Store #$80 to MC
A30A DA          / M8 AND MC                         / Moved this month
A30B D7 2E A3    / Jump to $A32E if so

A30E A0 FF FF    / Store $0008 to meta 01
A311 8B 28       / Store #$28 to MC                  / 40
A313 B5          / Multiply M8 by MC
A314 7A          / Add #$0A to M8
A315 B3          / Push M8 to metastack              / (+2)
A316 0C          / Store preloaded 01/02 to M8
A317 77          / Add #$07 to M8
A318 D3          / Replace M8 with 1-byte value      / Loyalty
A319 B3          / Push M8 to metastack              / (+2)
A31A E9 0F DE 04 / Run function $DE0F                / (-4) Take percentage of loyalty
A31E B3          / Push M8 to metastack              / (+2)
A31F 8D 64       / Push #$64 to metastack            / (+2)
A321 E9 D1 D7 02 / Run function $D7D1                / (-2)
A325 B4          / Pull 2 meta to MC                 / (-2)
A326 C6          / Check if M8 < MC
A327 D8 2E A3    / Jump to $A32E if not

A32A 40          / Store #$00 to M8
A32B D6 2F A3    / Jump to $A32F

A32E 41          / Store #$01 to M8
A32F CF          / Exit
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A330 20 09 E5 F7 FF 41 2B 0C 85 F9 81 F9 72 85 F9 8F
A340 FE B3 8A 05 60 B1 0D 85 F7 A4 6C 74 D6 7A A3 81
A350 FB 8C 05 60 C1 D8 77 A3 87 FB E9 DA A2 02 D8 6C
A360 A3 0B D0 2B 81 F9 72 85 F9 D6 71 A3 81 F7 72 85
A370 F7 8F FE B3 81 FB B1 81 FB B0 85 FB 81 FB D7 4F
A380 A3 87 F9 40 B1 87 F7 40 B1 0B CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A380                                  20 09 E5 00 00
A390 8E FF 00 E9 6F CF 02 8D 40 60 6C E9 1E EF 06 AC
A3A0 0B D0 A0 0D 00 D8 DB A3 8E 81 00 8D FF 8E 75 B0
A3B0 8E E0 00 62 E9 79 DD 0A 60 60 62 8D 16 8D 19 68
A3C0 68 E9 1E EF 0E 8D 19 63 E9 BC C3 04 8D 1D 63 E9
A3D0 C9 CF 04 3C 8E 55 B8 E9 38 C6 04 61 E9 6F CF 02
A3E0 CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A3E0    20 09 E5 FE FF 40 D6 07 A4 0B 8C 14 7D BB D3
A3F0 51 C0 D8 05 A4 0B 8C 14 7D BB B3 40 D4 0B D2 8C
A400 F4 7C BB B0 CF 0B D0 2B 0B D2 8C F4 7C BB B0 D7
A410 EA A3 40 CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A410             20 09 E5 FE FF 61 3D E9 8B A3 04 8E
A420 81 00 8D FF 60 8D FF 3C 8E EE B2 8E E0 00 62 E9
A430 79 DD 10 AC E1 A3 2B 60 3D E9 8B A3 04 0B CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A430                                              20
A440 09 E5 FC FF 8A 6A 74 2B A4 6E 70 2A 3A 8E 59 A5
A450 8E E0 00 62 E9 79 DD 08 3B 3A E9 4C C3 04 AA 6A
A460 70 E9 3B D4 02 5F C6 D8 7C A4 8E 68 70 3A 8E B3
A470 A5 8E E0 00 62 E9 79 DD 0A D6 82 A4 60 3A E9 F1
A480 C2 04 CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A480          20 09 E5 FA FF 8A 6A 74 2B 0C D6 AD A4
A490 09 B0 2A 3A E9 32 C2 02 8D 33 E9 D1 D7 02 B3 0A
A4A0 79 B3 E9 B6 D3 04 3A E9 33 82 02 09 72 29 09 B0
A4B0 D7 90 A4 0D D6 E0 A4 09 B0 2A 3B 3A E9 4C C3 04
A4C0 A4 6E 70 1A C0 D8 CC A4 68 D6 D9 A4 3A 8E 59 A5
A4D0 8E E0 00 62 E9 79 DD 08 60 3A E9 F1 C2 04 09 72
A4E0 29 09 B0 D7 B7 A4 CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A4E0                      20 09 E5 FC FF 40 2A 0C D6
A4F0 FC A4 0B B0 79 D3 CD 0A BB 2A 0B 72 2B 0B B0 D7
A500 F2 A4 0A CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A500             20 09 E5 FE FF 41 A2 FF FF 40 D6 4D
A510 A5 A0 FE FF D2 8C B2 B2 BB B3 E9 3B A2 02 8E A4
A520 76 A0 FF FF D2 1C BB B0 B3 E9 8D C2 02 B3 E9 8B
A530 83 04 A0 FF FF D0 A2 FF FF A0 0D 00 B3 A0 FF FF
A540 B4 C0 D8 49 A5 41 A2 FF FF A0 FE FF D0 A2 FE FF
A550 A0 FE FF 55 C6 D7 11 A5 CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A550                            20 09 E5 B8 FF 6C E9
A560 E4 CD 02 AA 73 B8 AA 6E 70 E9 8D C2 02 B3 E9 8B
A570 83 04 61 E9 D4 A1 02 63 AA 81 B8 E9 16 A2 04 60
A580 60 6C 8D 1A 64 63 68 E9 1E EF 0E DE BA FF B3 DE
A590 DA FF B3 E9 30 A3 04 85 B8 51 C1 D8 A8 A5 87 B8
A5A0 DE DA FF B3 E9 04 A5 04 AA 75 B8 8E 05 60 E9 8D
A5B0 C2 02 B3 E9 8B 83 04 64 AA 83 B8 E9 16 A2 04 8D 
A5C0 20 8E F4 7C DE DA FF B3 E9 1F DD 06 60 8D 10 8E
A5D0 14 7D E9 23 F4 06 8E 5E BC 87 B8 E9 14 A4 04 2A
A5E0 66 8E 18 AC 8E E0 00 62 E9 79 DD 08 62 E9 D4 A1
A5F0 02 62 E9 62 C0 02 60 60 6C 8D 1A 64 63 68 E9 1E
A600 EF 0E AA 77 B8 3A E9 8D C2 02 B3 E9 8B 83 04 63
A610 0A 74 D3 B3 E9 60 D4 04 8B 14 B5 8F 1E B3 8D 64
A620 E9 D1 D7 02 B4 C6 D8 96 A6 63 AA 85 B8 E9 16 A2
A630 04 8E 65 BC 87 B8 E9 14 A4 04 2A 66 8E 18 AC 8E
A640 E0 00 62 E9 79 DD 08 62 E9 D4 A1 02 62 E9 62 C0
A650 02 60 60 6C 8D 1A 64 63 68 E9 1E EF 0E AA 79 B8
A660 3A E9 8D C2 02 B3 E9 8B 83 04 63 0A 74 D3 B3 E9
A670 60 D4 04 8B 14 B5 7A B3 8D 64 E9 D1 D7 02 B4 C6
A680 D8 8F A6 63 AA 89 B8 E9 16 A2 04 AC 3F A4 CF 63
A690 AA 8B B8 D6 9A A6 63 AA 87 B8 E9 16 A2 04 60 60
A6A0 6C 8D 1A 64 63 68 E9 1E EF 0E DE BA FF B3 E9 E7
A6B0 A4 02 D2 B3 DE DA FF B3 E9 E7 A4 02 B4 C6 D8 E3
A6C0 A6 AA 7B B8 8E 05 60 E9 8D C2 02 B3 E9 8B 83 04
A6D0 63 E9 D4 A1 02 61 AA 8D B8 E9 16 A2 04 AC 3F A4
A6E0 D6 3A A7 61 AA 8F B8 E9 16 A2 04 81 BA 2A 81 BC
A6F0 29 AA 7D B8 3A E9 8D C2 02 B3 E9 8B 83 04 AA 7F
A700 B8 09 D7 09 A7 0A D6 0A A7 09 B3 E9 8D C2 02 B3
A710 E9 8B 83 04 61 AA 91 B8 E9 16 A2 04 60 E9 8B A1
A720 02 63 E9 62 C0 02 62 AA 93 B8 E9 16 A2 04 DE BA
A730 FF B3 DE DA FF B3 E9 83 A4 04 62 E9 62 C0 02 CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A740 20 09 E5 00 00 61 E9 7F D2 02 8E 7D BC E9 E9 C3
A750 02 62 E9 62 C0 02 CF

FUNCTION $A740 (00 00) $A745-$A756

A745 61          / Push #$01 to metastack            / (+2)
A746 E9 7F D2 02 / Run function $D27F                / (-2) Text pos #$01

A74A 8E 7D BC    / Push #$BC7D to metastack          / (+2)
A74D E9 E9 C3 02 / Run function $C3E9                / (-2) Print "The people of Paris hopefully await the return of Your Excellency"

A751 62          / Push #$02 to metastack            / (+2)
A752 E9 62 C0 02 / Run function $C062                / (-2) Wait 2 time units for input before advancing

A756 CF          / Exit
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A750                      20 09 E5 FC FF A5 EC 6F 8C
A760 80 00 DA 50 C1 D7 71 A7 A5 08 60 8B 1B C1 D7 77
A770 A7 A5 65 70 D8 7C A7 AC 40 A7 40 CF 61 E9 AC 83
A780 02 A4 6E 70 2B 8A 6A 74 2A A5 EC 6F 8C 80 00 DA
A790 50 C1 D7 9B A7 AC 59 A5 D6 E2 A7 0A 72 B0 B3 E9
A7A0 3B D4 02 51 C0 D8 AC A7 65 D6 DD A7 3A 3B E9 4C 
A7B0 C3 04 3B 8E 59 A5 8E E0 00 62 E9 79 DD 08 AA 6A
A7C0 70 E9 3B D4 02 5F C6 D8 DC A7 8E 68 70 3B 8E B3
A7D0 A5 8E E0 00 62 E9 79 DD 0A D6 E2 A7 60 3B E9 F1
A7E0 C2 04 6D E9 E4 CD 02 60 E9 F7 CD 02 60 60 6C 8D
A7F0 1A 64 63 68 E9 1E EF 0E AA C0 BC 8E 05 60 E9 8D
A800 C2 02 B3 E9 8B 83 04 64 E9 D4 A1 02 AA C2 BC E9
A810 5E A2 02 43 A9 EA 6F 66 8E 05 60 E9 F1 C2 04 8A
A820 05 60 A8 6E 70 3A 8E 5A B7 8E E0 00 62 E9 79 DD
A830 08 8E 05 60 E9 6E C2 02 B3 8E 5A B7 8E E0 00 62
A840 E9 79 DD 08 AC 64 A1 60 E9 AC 83 02 41 CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A840                                           20 09                  
A850 E5 FC FF A5 EC 6F 8C 80 00 DA 50 C1 D7 6D A8 A5
A860 08 60 8B 1B C1 D8 6D A8 AC 40 A7 40 CF 61 E9 AC
A870 83 02 6E E9 E4 CD 02 60 E9 F7 CD 02 44 A9 EA 6F
A880 67 8E 05 60 E9 F1 C2 04 AA 31 BD 8E 05 60 E9 8D
A890 C2 02 B3 E9 8B 83 04 60 E9 D4 A1 02 AA 33 BD E9
A8A0 5E A2 02 8A 76 71 2B 40 2A D6 C2 A8 3B 8E 5A B7
A8B0 8E E0 00 62 E9 79 DD 08 0A D0 2A D1 0B 8F 1C 2B
A8C0 8F E4 0A 8B 2E C6 D7 AC A8 AC 64 A1 60 E9 AC 83
A8D0 02 41 CF      
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A8D0          20 09 E5 FC FF 40 A2 FC FF A5 EA 6F 53
A8E0 C7 D8 44 A9 6B 8E 68 70 8E E6 B4 8E E0 00 62 E9
A8F0 79 DD 0A A2 FF FF 60 8E 68 70 8E E6 B4 8E E0 00
A900 62 E9 79 DD 0A A2 FE FF A5 EA 6F 8C A4 BD BB D3
A910 B3 A0 FF FF B4 C9 D7 2A A9 A5 EA 6F 8C A7 BD BB
A920 D3 B3 A0 FE FF B4 C9 D8 44 A9 A5 EA 6F D9 03 00
A930 01 00 3E A9 02 00 48 A9 03 00 4E A9 44 A9 AC 9D
A940 A2 A2 FC FF A0 FC FF CF AC 57 A7 D6 41 A9 AC 4E
A950 A8 D6 41 A9

FUNCTION $A8D3 (FC FF) $A8D8-A953
Check if advancing to next Scenario

A8D8 40          / Store #$00 to M8
A8D9 A2 FC FF    / Store $0008 to meta 04
A8DC A5 EA 6F    / Store $6FEA to $0008              / Scenario
A8DF 53          / Store #$03 to MC
A8E0 C7          / Check if M8<=MC                   / Check if Scenario 1 2 or 3
A8E1 D8 44 A9    / Jump to $A944 if not              / Scenario 4

A8E4 6B          / Push #$000B to metastack          / (+2)
A8E5 8E 68 70    / Push #$7068 to metastack          / (+2)
A8E8 8E E6 B4    / Push #$B4E6 to metastack          / (+2)
A8EB 8E E0 00    / Push #$00E0 to metastack          / (+2)
A8EE 62          / Push #$0002 to metastack          / (+2)
A8EF E9 79 DD 0A / Run function $DD79                / (-A) Tally # of French centers of power

A8F3 A2 FF FF    / Store $0008 to meta 01
A8F6 60          / Push #$0000 to metastack          / (+2)
A8F7 8E 68 70    / Push #$7068 to metastack          / (+2)
A8FA 8E E6 B4    / Push #$B4E6 to metastack          / (+2)
A8FD 8E E0 00    / Push #$00E0 to metastack          / (+2)
A900 62          / Push #$0002 to metastack          / (+2)
A901 E9 79 DD 0A / Run function $DD79                / (-2) Tally # of French cities
A905 A2 FE FF    / Store $0008 to meta 02
A908 A5 EA 6F    / Store $6FEA to $0008              /      Scenario
A90B 8C A4 BD    / Store $BDA4 to MC                 /      
A90E BB          / Add MC to M8
A90F D3          / Replace M8 with 1-byte value      /      
A910 B3          / Push M8 to metastack              / (+2)
A911 A0 FF FF    / Store meta 01 to M8
A914 B4          / Pull 2 meta to MC                 / (-2)
A915 C9          / Check if M8 >= MC                 
A916 D7 2A A9    / Jump to $A927 if so
A919 A5 EA 6F    / Store $6FEA to $0008
A91C 8C A7 BD    / Store #$BDA7 to MC
A91F BB          / Add MC to M8
A920 D3          / Replace M8 with 1-byte value
A921 B3          / Push M8 to metastack              / (+2)
A922 A0 FE FF    / Store meta 02 to M8
A925 B4          / Pull 2 meta to metastack          / (-2)
A926 C9          / Check if M8 >=MC
A927 D8 44 A9    / Jump to $A944 if not
A92A A5 EA 6F    / Store $6FEA to $0008
A92D D9 03 00
     01 00 3E A9 / Jump to $A93E if Scenario 1
	 02 00 48 A9 / Jump to $A948 if Scenario 2
	 03 00 4E A9 / Jump to $A94E if Scenario 3
	       44 A9 / Else jump to $A944

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F	
BDA0             00 FF 04
		
SCENARIO 1 00  =
         2 FF  = 
		 3 04  =
		 
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F	
BDA0                      14 85 18

SCENARIO 1 08 = 
         2 09 = 
		 3 0C = 
		   
A93E AC 9D A2    / Run function $A29D
A941 A2 FC FF    / Store $0008 to meta 04
A944 A0 FC FF    / Store meta 04 to $0008
A947 CF          / Exit

A948 AC 57 A7    / Run function $A757
A94B D6 41 A9    / Jump to $A941

A94E AC 4E A8    / Run function $A84E
A951 D6 41 A9    / Jump to $A941 
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A950             20 09 E5 E6 FF 40 A2 E6 FF DE E7 FF
A960 B3 3C E9 E6 D0 04 DE E7 FF D6 AD A9 03 D3 8B 1C
A970 B5 8C 76 71 BB 24 04 72 B0 50 C0 D7 AB A9 0C 74
A980 D3 B3 04 74 D3 B4 C0 D8 AB A9 04 72 B0 B3 E9 3B
A990 D4 02 5F C6 D8 AB A9 DE F2 FF B3 A0 E6 FF D2 B4
A9A0 BB B3 04 B1 A0 E6 FF D0 A2 E6 FF 03 D0 23 03 D3
A9B0 8C FF 00 C1 D7 6C A9 A0 E6 FF D8 D0 A9 DE F2 FF
A9C0 B3 A0 E6 FF B3 E9 D1 D7 02 D2 B4 BB B0 D6 D1 A9
A9D0 40 CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
A9D0       20 09 E5 F7 FF 8A 6A 74 2A A5 08 60 8B 1B
A9E0 C1 D8 E5 A9 CF 3A E9 54 A9 02 2B D8 6E AA A5 EC 
A9F0 6F 8C 80 00 DA 50 C1 D7 13 AA 61 E9 AC 83 02 AA
AA00 AB BD AA 6E 70 E9 8D C2 02 B3 E9 8B 83 04 60 E9
AA10 AC 83 02 3A 8E 05 60 E9 4C C3 04 3B 8E 05 60 8E
AA20 78 A5 8E E0 00 62 E9 79 DD 0A 0A 72 B0 D6 51 AA
AA30 09 B0 28 09 7E D3 8C 80 00 DA D8 50 AA 3A 39 E9
AA40 4C C3 04 3B 39 8E 78 A5 8E E0 00 62 E9 79 DD 0A
AA50 08 29 09 D7 30 AA 3A 8E 5A B7 8E E0 00 62 E9 79
AA60 DD 08 3B 8E 5A B7 8E E0 00 62 E9 79 DD 08 CF
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
AA60                                              20
AA70 09 E5 00 00 A4 E6 6F 8C 11 07 C0 D8 9B AA A5 E8
AA80 6F 5C C0 D8 9B AA 61 E9 7F D2 02 AA EF BD E9 F5
AA90 C3 02 40 A9 61 70 64 E9 62 C0 02 A4 E6 6F 8C 12
AAA0 07 C0 D8 C2 AA A5 E8 6F 54 C0 D8 C2 AA 61 E9 7F
AAB0 D2 02 AA F1 BD E9 E9 C3 02 41 A9 62 70 64 E9 62
AAC0 C0 02 CF 

FUNCTION $AA6F (00 00) $AA74-$AAC2

AA74 A4 E6 6F    / Store $6FE6/$6FE7 to M8           / Year
AA77 8C 11 07    / Store #$0711 to MC
AA7A C0          / Check if M8 = MC                    / Check if year is 1809
AA7B D8 9B AA    / Jump to $AA9B if not

AA7E A5 E8 6F    / Store $6FE8 to M8                 / Month
AA81 5C          / Store #$0C to MC             
AA82 C0          / Check if M8 = MC                  / Check if December
AA83 D8 9B AA    / Jump to $AA9B if not

AA86 61          / Push #$01 to metastack            / (+2)
AA87 E9 7F D2 02 / Run function $D27F                / (-2) Text pos #$01

AA8B AA EF BD    / Push $BDEF/$BDF0 to metastack     / (+2) #$BDF3
AA8E E9 F5 C3 02 / Run function $C3F5                / (-2) Print "In December of 1809, Napoleon nullified his
                                                                   Marriage to Josephine for lack of children"
AA92 40          / Store #$00 to M8
AA93 A9 61 70    / Store $0008 to $7061              /      Turn off "Married to Josephine" flag

AA96 64          / Push #$04 to metastack            / (+2)
AA97 E9 62 C0 02 / Run function $C062                / (-2) Wait 4 time units for input

AA9B A4 E6 6F    / Store $6FE6/$6FE7 to M8
AA9E 8C 12 07    / Store #$0712 to MC
AAA1 C0          / Check if M8 = MC                  /      Check if year is 1810
AAA2 D8 C2 AA    / Jump to $AAC2 if not

AAA5 A5 E8 6F    / Store $6FE8 to M8
AAA8 54          / Store #$04 to MC
AAA9 C0          / Check if M8 = MC                  /      Check if April
AAAA D8 C2 AA    / Jump to $AAC2 if not

AAAD 61          / Push #$01 to metastack            / (+2)
AAAE E9 7F D2 02 / Run function $D27F                / (-2) Text pos #$01

AAB2 AA F1 BD    / Push $BDF1/$BDF2 to metastack     / (+2) #$BE4D
AAB5 E9 E9 C3 02 / Run function $C3E9                / (-2) Print "In April of 1810, Napoleon wed
                                                                   Marie Louise of the Hapsburgs"

AAB9 41          / Store #$01 to M8
AABA A9 62 70    / Store $0008 to $7062	             /   

AABD 64          / Push #$04 to metastack            / (+2)
AABE E9 62 C0 02 / Run function $C062                / (-2) Wait 4 time units for input
AAC2 CF          / Exit 													   

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
AAC0          20 09 E5 FE FF A5 65 70 8C 7F FF DA 8C
AAD0 8A BE BB D3 A2 FF FF A0 FF FF D2 8C 06 AF BB B3
AAE0 E9 3B A2 02 8E A4 76 3C E9 8B 83 04 A0 FF FF D8
AAF0 F6 AA 43 D6 F9 AA 8A FF 00 A2 FE FF A0 FF FF D2
AB00 8C AF B0 BB B3 E9 3B A2 02 A0 FE FF B3 8E A4 76
AB10 E9 16 A2 04 CF 
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
AB10                20 09 E5 FE FF 89 11 2B A5 65 70
AB20 8C 7F FF DA D5 FF FF 05 00 3D AB 35 AB 3B AB 3B
AB30 AB 3D AB 43 AB 61 E9 D4 A1 02 CF 41 2B 3B E9 8B
AB40 A1 02 CF 42 D6 3C AB
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
AB40                      20 09 E5 FC FF A5 65 70 8C
AB50 7F FF DA A2 FD FF D9 03 00 02 00 67 AB 03 00 82
AB60 AB 05 00 82 AB 87 AB 89 5B D6 8E AB 65 E9 7F D2
AB70 02 8E A9 BE E9 E9 C3 02 AC 86 CA D8 A5 AB 40 D6
AB80 A6 AB 89 5A D6 8E AB 8E 05 60 E9 8D C2 02 2B 61
AB90 E9 AC 83 02 3B E9 C3 AA 02 AC 15 AB A0 FD FF 8B
ABA0 1E C0 D8 6C AB 41 A2 FC FF A0 FC FF CF

FUNCTION $AB47 (FC FF) $AB4C-$ABAC

AB4C A5 65 70    / Store value of $7065 to $0008
AB4F 8C 7F FF    / Store #FF7F to MC
AB52 DA          / MC AND M8
AB53 A2 FD FF    / Store $0008 to meta 03
AB56 D9 03 00    / 03 loops
     02 00 67 AB / Jump to $AB67 if M8=#$0002
	 03 00 82 AB / Jump to $AB82 if M8=#$0003
	 05 00 82 AB / Jump to $AB82 if M8=#$0003
	       87 AB / Jump to $AB87 if M8=anything else
AB67 89 5B       / Store #$5B to M8
AB69 D6 8E AB    / Jump to $AB8E
AB6C 65          / Push #$0005 to metastack          (+2)
AB6D E9 7F D2 02 / Run function $D27F                (-2)
AB71 8E A9 BE    / Push #$BEA9 to metastack          (+2)
AB74 E9 E9 C3 02 / Run function $C3E9                (-2)
AB78 AC 86 CA    / Run function $CA86                     Wait for yes/no input 
AB7B D8 A5 AB    / Jump to $ABA5 if $0008=#$00
AB7E 40          / Store #$00 to M8
AB7F D6 A6 AB    / Jump to $ABA6
AB82 89 5A       / Store #$5A to M8
AB84 D6 8E AB    / Jump to $AB8E
AB87 8E 05 60    / Push #$6005 to metastack         (+2)
AB8A E9 8D C2 02 / Run function $C28D                (-2) Find Napoleon's portrait code 
AB8E 2B          / Store M8 to meta 01/02
AB8F 61          / Push #$0001 to metastack          (+2)
AB90 E9 AC 83 02 / Run function $83AC                (-2)
AB94 3B          / Push meta 01/02 to metastack      (+2)
AB95 E9 C3 AA 02 / Run function $AAC3                (-2)
AB99 AC 15 AB    / Run function $AB15
AB9C A0 FD FF    / Store meta 03 to $0008
AB9F 8B 1E       / Store #$1E to MC
ABA1 C0          / Check if M8=MC
ABA2 D8 6C AB    / Jump to $AB6C if not
ABA5 41          / Store #$01 to M8
ABA6 A2 FC FF    / Store $0008 to meta 03
ABA9 A0 FC FF    / Store meta 03 to $0008
ABAC CF          / Exit
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
ABA0                                        20 09 E5
ABB0 FB FF A5 EC 6F 8C 80 00 DA 50 C1 D8 C0 AB 40 CF
ABC0 8A 6A 74 2B 40 A2 FB FF A5 65 70 D7 26 AC A5 08
ABD0 60 8B 1B C0 D8 D0 AC A4 E6 6F 8C 06 07 C0 D8 D0
ABE0 AC A5 E8 6F 53 C0 D7 F1 AB A5 E8 6F 54 C0 D8 D0
ABF0 AC 61 E9 AC 83 02 AA 6E 70 E9 8D C2 02 B3 E9 C3
AC00 AA 02 61 E9 D4 A1 02 AC 86 CA D8 D0 AC 3B 8E 05
AC10 60 E9 4C C3 04 A5 E8 6F 8F FE A9 65 70 8A FF 00
AC20 A9 64 70 D6 C7 AC AC 47 AB D8 80 AC 0B 72 B0 B3
AC30 E9 3B D4 02 5F C6 D7 4A AC 0B 72 B0 B0 2A 3B 3A
AC40 E9 4C C3 04 60 3A E9 F1 C2 04 3B 8E 05 60 8E 78
AC50 A5 8E E0 00 62 E9 79 DD 0A 62 E9 62 C0 02 A5 65
AC60 70 8C 80 00 DA D8 76 AC 40 A9 65 70 AC 57 A7 41
AC70 A2 FB FF D6 D0 AC 40 A9 65 70 AC D3 A8 D6 70 AC
AC80 A5 65 70 8C 80 00 DA D7 C0 AC A5 65 70 54 C9 D8
AC90 C0 AC 8D 64 E9 D1 D7 02 5A C6 D8 C0 AC 61 E9 AC
ACA0 83 02 67 E9 D4 A1 02 8D 1A E9 9F CD 02 66 AA C8
ACB0 BE E9 16 A2 04 8A 80 00 CD A5 65 70 DB A9 65 70
ACC0 A5 65 70 D0 A9 65 70 41 A2 FB FF 60 E9 AC 83 02
ACD0 A5 65 70 D8 DC AC 8D 17 E9 E4 CD 02 A0 FB FF CF
====================================================
FUNCTION $ACE0

20 E3 E2 00 FA FF

 09:ACE6:A9 76     LDA #$76
 09:ACE8:A0 FE     LDY #$FE
 09:ACEA:91 06     STA ($06),Y @ $E01E = #$62
 09:ACEC:A9 71     LDA #$71
 09:ACEE:C8        INY
 09:ACEF:91 06     STA ($06),Y @ $E01E = #$62
 09:ACF1:8A        TXA
 09:ACF2:A0 FA     LDY #$FA
 09:ACF4:91 06     STA ($06),Y @ $E01E = #$62
 09:ACF6:C8        INY
 09:ACF7:91 06     STA ($06),Y @ $E01E = #$62
 09:ACF9:4C 1A AD  JMP $AD1A
 09:ACFC:18        CLC
 09:ACFD:A9 01     LDA #$01
 09:ACFF:A0 FA     LDY #$FA
 09:AD01:71 06     ADC ($06),Y @ $E01E = #$62
 09:AD03:91 06     STA ($06),Y @ $E01E = #$62
 09:AD05:8A        TXA
 09:AD06:C8        INY
 09:AD07:71 06     ADC ($06),Y @ $E01E = #$62
 09:AD09:91 06     STA ($06),Y @ $E01E = #$62
 09:AD0B:18        CLC
 09:AD0C:A9 1C     LDA #$1C
 09:AD0E:A0 FE     LDY #$FE
 09:AD10:71 06     ADC ($06),Y @ $E01E = #$62
 09:AD12:91 06     STA ($06),Y @ $E01E = #$62
 09:AD14:8A        TXA
 09:AD15:C8        INY
 09:AD16:71 06     ADC ($06),Y @ $E01E = #$62
 09:AD18:91 06     STA ($06),Y @ $E01E = #$62
 09:AD1A:A0 FA     LDY #$FA
 09:AD1C:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AD1E:C9 2E     CMP #$2E
 09:AD20:C8        INY
 09:AD21:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AD23:E9 00     SBC #$00
 09:AD25:90 03     BCC $AD2A
 09:AD27:4C 65 AE  JMP $AE65
 09:AD2A:A0 FE     LDY #$FE
 09:AD2C:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AD2E:85 18     STA $0018 = #$00
 09:AD30:C8        INY
 09:AD31:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AD33:85 19     STA $0019 = #$62
 09:AD35:A0 02     LDY #$02
 09:AD37:B1 18     LDA ($18),Y @ $6202 = #$03
 09:AD39:A0 FC     LDY #$FC
 09:AD3B:91 06     STA ($06),Y @ $E01E = #$62
 09:AD3D:A0 03     LDY #$03
 09:AD3F:B1 18     LDA ($18),Y @ $6202 = #$03
 09:AD41:A0 FD     LDY #$FD
 09:AD43:91 06     STA ($06),Y @ $E01E = #$62
 09:AD45:4C 60 AD  JMP $AD60
 09:AD48:A0 FC     LDY #$FC
 09:AD4A:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AD4C:85 18     STA $0018 = #$00
 09:AD4E:C8        INY
 09:AD4F:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AD51:85 19     STA $0019 = #$62
 09:AD53:A1 18     LDA ($18,X) @ PPU_OAM_DATA = #$F8
 09:AD55:88        DEY
 09:AD56:91 06     STA ($06),Y @ $E01E = #$62
 09:AD58:A0 01     LDY #$01
 09:AD5A:B1 18     LDA ($18),Y @ $6202 = #$03
 09:AD5C:A0 FD     LDY #$FD
 09:AD5E:91 06     STA ($06),Y @ $E01E = #$62
 09:AD60:A0 FC     LDY #$FC
 09:AD62:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AD64:C8        INY
 09:AD65:11 06     ORA ($06),Y @ $E01E = #$62
 09:AD67:D0 03     BNE $AD6C
 09:AD69:4C 62 AE  JMP $AE62
 09:AD6C:8A        TXA
 09:AD6D:48        PHA
 09:AD6E:A9 05     LDA #$05
 09:AD70:48        PHA
 09:AD71:18        CLC
 09:AD72:A9 0C     LDA #$0C
 09:AD74:88        DEY
 09:AD75:71 06     ADC ($06),Y @ $E01E = #$62
 09:AD77:85 18     STA $0018 = #$00
 09:AD79:8A        TXA
 09:AD7A:C8        INY
 09:AD7B:71 06     ADC ($06),Y @ $E01E = #$62
 09:AD7D:85 19     STA $0019 = #$62
 09:AD7F:A5 19     LDA $0019 = #$62
 09:AD81:48        PHA
 09:AD82:A5 18     LDA $0018 = #$00
 09:AD84:48        PHA
 09:AD85:20 82 E3  JSR $E382

 B6 D3 06
 
 09:AD8B:48        PHA
 09:AD8C:A9 04     LDA #$04
 09:AD8E:48        PHA
 09:AD8F:18        CLC
 09:AD90:A9 0D     LDA #$0D
 09:AD92:A0 FC     LDY #$FC
 09:AD94:71 06     ADC ($06),Y @ $E01E = #$62
 09:AD96:85 18     STA $0018 = #$00
 09:AD98:8A        TXA
 09:AD99:C8        INY
 09:AD9A:71 06     ADC ($06),Y @ $E01E = #$62
 09:AD9C:85 19     STA $0019 = #$62
 09:AD9E:A5 19     LDA $0019 = #$62
 09:ADA0:48        PHA
 09:ADA1:A5 18     LDA $0018 = #$00
 09:ADA3:48        PHA
 09:ADA4:20 82 E3  JSR $E382
 
 B6 D3 06

 09:ADAA:48        PHA
 09:ADAB:A9 03     LDA #$03
 09:ADAD:48        PHA
 09:ADAE:8A        TXA
 09:ADAF:48        PHA
 09:ADB0:48        PHA
 09:ADB1:A0 FD     LDY #$FD
 09:ADB3:B1 06     LDA ($06),Y @ $E01E = #$62
 09:ADB5:48        PHA
 09:ADB6:88        DEY
 09:ADB7:B1 06     LDA ($06),Y @ $E01E = #$62
 09:ADB9:48        PHA
 09:ADBA:20 82 E3  JSR $E382
 
 7A D1 06
 
 09:ADC0:86 09     STX $0009 = #$81
 09:ADC2:A5 09     LDA $0009 = #$81
 09:ADC4:48        PHA
 09:ADC5:A5 08     LDA $0008 = #$D9
 09:ADC7:48        PHA
 09:ADC8:20 82 E3  JSR $E382
 
 60 D4 06
 
 09:ADCE 86 09     STX $0009
 09:ADD0 A5 08     LDA $0008
 09:ADD2:C9 03     CMP #$03
 09:ADD4:D0 04     BNE $ADDA
 09:ADD6:A5 09     LDA $0009 = #$81
 09:ADD8:C9 00     CMP #$00
 09:ADDA:F0 03     BEQ $ADDF
 09:ADDC:4C E8 AD  JMP $ADE8
 09:ADDF:A9 01     LDA #$01
 09:ADE1:85 18     STA $0018 = #$00
 09:ADE3:86 19     STX $0019 = #$62
 09:ADE5:4C EC AD  JMP $ADEC
 09:ADE8:86 18     STX $0018 = #$00
 09:ADEA:86 19     STX $0019 = #$62
 09:ADEC:A5 18     LDA $0018 = #$00
 09:ADEE:F0 03     BEQ $ADF3
 09:ADF0:4C 5F AE  JMP $AE5F
 09:ADF3:A9 0A     LDA #$0A
 09:ADF5:85 18     STA $0018 = #$00
 09:ADF7:86 19     STX $0019 = #$62
 09:ADF9:A2 18     LDX #$18
 09:ADFB:20 DF E3  JSR $E3DF
 09:ADFE:48        PHA
 09:ADFF:A9 03     LDA #$03
 09:AE01:48        PHA
 09:AE02:8A        TXA
 09:AE03:48        PHA
 09:AE04:48        PHA
 09:AE05:A0 FD     LDY #$FD
 09:AE07:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AE09:48        PHA
 09:AE0A:88        DEY
 09:AE0B:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AE0D:48        PHA
 09:AE0E:20 82 E3  JSR $E382
 
 7A D1 06
 
 09:AE14:86 09     STX $0009 = #$81
 09:AE16:A5 09     LDA $0009 = #$81
 09:AE18:48        PHA
 09:AE19:A5 08     LDA $0008 = #$D9
 09:AE1B:48        PHA
 09:AE1C:20 82 E3  JSR $E382
 
 60 D4 06
 
 09:AE22:86 09     STX $0009
 09:AE24:A2 18     LDX #$18
 09:AE26:20 04 E4  JSR $E404
 09:AE29:A0 08     LDY #$08
 09:AE2B:A2 18     LDX #$18
 09:AE2D:A9 14     LDA #$14
 09:AE2F:20 C1 E1  JSR $E1C1
 09:AE32:38        SEC
 09:AE33:A9 19     LDA #$19
 09:AE35:E5 14     SBC $0014 = #$00
 09:AE37:85 18     STA $0018 = #$00
 09:AE39:8A        TXA
 09:AE3A:E5 15     SBC $0015 = #$00
 09:AE3C:85 19     STA $0019 = #$62
 09:AE3E:A5 19     LDA $0019 = #$62
 09:AE40:48        PHA
 09:AE41:A5 18     LDA $0018 = #$00
 09:AE43:48        PHA
 09:AE44:18        CLC
 09:AE45:A9 07     LDA #$07
 09:AE47:A0 FC     LDY #$FC
 09:AE49:71 06     ADC ($06),Y @ $E01E = #$62
 09:AE4B:85 18     STA $0018 = #$00
 09:AE4D:8A        TXA
 09:AE4E:C8        INY
 09:AE4F:71 06     ADC ($06),Y @ $E01E = #$62
 09:AE51:85 19     STA $0019 = #$62
 09:AE53:A5 19     LDA $0019 = #$62
 09:AE55:48        PHA
 09:AE56:A5 18     LDA $0018 = #$00
 09:AE58:48        PHA
 09:AE59:20 82 E3  JSR $E382
 
 B6 D3 06
 
 09:AE5F:4C 48 AD  JMP $AD48
 
 09:AE62:4C FC AC  JMP $ACFC
 
 09:AE65:60        RTS ----------------------------------------- 
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
AE60                   20 E3 E2 00 B6 FF

FUNCTION $AE66

 09:AE6C:A9 76     LDA #$76
 09:AE6E:A0 FE     LDY #$FE
 09:AE70:91 06     STA ($06),Y @ $E01E = #$62
 09:AE72:A9 71     LDA #$71
 09:AE74:C8        INY
 09:AE75:91 06     STA ($06),Y @ $E01E = #$62
 09:AE77:8A        TXA
 09:AE78:A0 BE     LDY #$BE
 09:AE7A:91 06     STA ($06),Y @ $E01E = #$62
 09:AE7C:C8        INY
 09:AE7D:91 06     STA ($06),Y @ $E01E = #$62
 09:AE7F:4C A0 AE  JMP $AEA0
 09:AE82:18        CLC
 09:AE83:A9 01     LDA #$01
 09:AE85:A0 BE     LDY #$BE
 09:AE87:71 06     ADC ($06),Y @ $E01E = #$62
 09:AE89:91 06     STA ($06),Y @ $E01E = #$62
 09:AE8B:8A        TXA
 09:AE8C:C8        INY
 09:AE8D:71 06     ADC ($06),Y @ $E01E = #$62
 09:AE8F:91 06     STA ($06),Y @ $E01E = #$62
 09:AE91:18        CLC
 09:AE92:A9 1C     LDA #$1C
 09:AE94:A0 FE     LDY #$FE
 09:AE96:71 06     ADC ($06),Y @ $E01E = #$62
 09:AE98:91 06     STA ($06),Y @ $E01E = #$62
 09:AE9A:8A        TXA
 09:AE9B:C8        INY
 09:AE9C:71 06     ADC ($06),Y @ $E01E = #$62
 09:AE9E:91 06     STA ($06),Y @ $E01E = #$62
 09:AEA0:A0 BE     LDY #$BE
 09:AEA2:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AEA4:C9 2E     CMP #$2E
 09:AEA6:C8        INY
 09:AEA7:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AEA9:E9 00     SBC #$00
 09:AEAB:90 03     BCC $AEB0
 09:AEAD:4C 7B B2  JMP $B27B
 09:AEB0:A0 FE     LDY #$FE
 09:AEB2:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AEB4:85 18     STA $0018 = #$00
 09:AEB6:C8        INY
 09:AEB7:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AEB9:85 19     STA $0019 = #$62
 09:AEBB:A0 03     LDY #$03
 09:AEBD:B1 18     LDA ($18),Y @ $6202 = #$03
 09:AEBF:48        PHA
 09:AEC0:88        DEY
 09:AEC1:B1 18     LDA ($18),Y @ $6202 = #$03
 09:AEC3:48        PHA
 09:AEC4:20 82 E3  JSR $E382
 
 3B D4 04
 
 09:AECA:86 09     STX $0009 = #$81
 09:AECC:A5 08     LDA $0008 = #$D9
 09:AECE:A0 C8     LDY #$C8
 09:AED0:91 06     STA ($06),Y @ $E01E = #$62
 09:AED2:A5 09     LDA $0009 = #$81
 09:AED4:C8        INY
 09:AED5:91 06     STA ($06),Y @ $E01E = #$62
 09:AED7:A5 08     LDA $0008 = #$D9
 09:AED9:05 09     ORA $0009 = #$81
 09:AEDB:F0 03     BEQ $AEE0
 09:AEDD:4C E3 AE  JMP $AEE3
 09:AEE0:4C 82 AE  JMP $AE82
 09:AEE3:A9 05     LDA #$05
 09:AEE5:85 18     STA $0018 = #$00
 09:AEE7:86 19     STX $0019 = #$62
 09:AEE9:A0 C8     LDY #$C8
 09:AEEB:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AEED:85 14     STA $0014 = #$00
 09:AEEF:C8        INY
 09:AEF0:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AEF2:85 15     STA $0015 = #$00
 09:AEF4:A0 14     LDY #$14
 09:AEF6:A2 18     LDX #$18
 09:AEF8:A9 10     LDA #$10
 09:AEFA:20 C1 E1  JSR $E1C1
 09:AEFD:A5 10     LDA $0010 = #$56
 09:AEFF:A0 C6     LDY #$C6
 09:AF01:91 06     STA ($06),Y @ $E01E = #$62
 09:AF03:A5 11     LDA $0011 = #$AD
 09:AF05:C8        INY
 09:AF06:91 06     STA ($06),Y @ $E01E = #$62
 09:AF08:A0 FE     LDY #$FE
 09:AF0A:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AF0C:85 18     STA $0018 = #$00
 09:AF0E:C8        INY
 09:AF0F:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AF11:85 19     STA $0019 = #$62
 09:AF13:A0 0E     LDY #$0E
 09:AF15:B1 18     LDA ($18),Y @ $6202 = #$03
 09:AF17:A0 C4     LDY #$C4
 09:AF19:91 06     STA ($06),Y @ $E01E = #$62
 09:AF1B:A0 0F     LDY #$0F
 09:AF1D:B1 18     LDA ($18),Y @ $6202 = #$03
 09:AF1F:A0 C5     LDY #$C5
 09:AF21:91 06     STA ($06),Y @ $E01E = #$62
 09:AF23:88        DEY
 09:AF24:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AF26:A0 C6     LDY #$C6
 09:AF28:D1 06     CMP ($06),Y @ $E01E = #$62
 09:AF2A:88        DEY
 09:AF2B:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AF2D:A0 C7     LDY #$C7
 09:AF2F:F1 06     SBC ($06),Y @ $E01E = #$62
 09:AF31:B0 03     BCS $AF36
 09:AF33:4C 5D AF  JMP $AF5D
 09:AF36:A0 FE     LDY #$FE
 09:AF38:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AF3A:85 18     STA $0018 = #$00
 09:AF3C:C8        INY
 09:AF3D:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AF3F:85 19     STA $0019 = #$62
 09:AF41:38        SEC
 09:AF42:A0 C4     LDY #$C4
 09:AF44:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AF46:A0 C6     LDY #$C6
 09:AF48:F1 06     SBC ($06),Y @ $E01E = #$62
 09:AF4A:A0 0E     LDY #$0E
 09:AF4C:91 18     STA ($18),Y @ $6202 = #$03
 09:AF4E:A0 C5     LDY #$C5
 09:AF50:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AF52:A0 C7     LDY #$C7
 09:AF54:F1 06     SBC ($06),Y @ $E01E = #$62
 09:AF56:A0 0F     LDY #$0F
 09:AF58:91 18     STA ($18),Y @ $6202 = #$03
 09:AF5A:4C 82 AE  JMP $AE82
 09:AF5D:A9 05     LDA #$05
 09:AF5F:85 18     STA $0018 = #$00
 09:AF61:86 19     STX $0019 = #$62
 09:AF63:A0 C4     LDY #$C4
 09:AF65:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AF67:85 14     STA $0014 = #$00
 09:AF69:C8        INY
 09:AF6A:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AF6C:85 15     STA $0015 = #$00
 09:AF6E:A0 14     LDY #$14
 09:AF70:A2 18     LDX #$18
 09:AF72:A9 10     LDA #$10
 09:AF74:20 23 E2  JSR $E223
 09:AF77:38        SEC
 09:AF78:A0 C8     LDY #$C8
 09:AF7A:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AF7C:E5 10     SBC $0010 = #$56
 09:AF7E:A0 C2     LDY #$C2
 09:AF80:91 06     STA ($06),Y @ $E01E = #$62
 09:AF82:A0 C9     LDY #$C9
 09:AF84:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AF86:E5 11     SBC $0011 = #$AD
 09:AF88:A0 C3     LDY #$C3
 09:AF8A:91 06     STA ($06),Y @ $E01E = #$62
 09:AF8C:A0 FE     LDY #$FE
 09:AF8E:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AF90:85 18     STA $0018 = #$00
 09:AF92:C8        INY
 09:AF93:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AF95:85 19     STA $0019 = #$62
 09:AF97:8A        TXA
 09:AF98:A0 0E     LDY #$0E
 09:AF9A:91 18     STA ($18),Y @ $6202 = #$03
 09:AF9C:C8        INY
 09:AF9D:91 18     STA ($18),Y @ $6202 = #$03
 09:AF9F:18        CLC
 09:AFA0:A9 CB     LDA #$CB
 09:AFA2:65 06     ADC $0006 = #$1C
 09:AFA4:85 18     STA $0018 = #$00
 09:AFA6:8A        TXA
 09:AFA7:65 07     ADC $0007 = #$E0
 09:AFA9:85 19     STA $0019 = #$62
 09:AFAB:A5 18     LDA $0018 = #$00
 09:AFAD:A0 DA     LDY #$DA
 09:AFAF:91 06     STA ($06),Y @ $E01E = #$62
 09:AFB1:A5 19     LDA $0019 = #$62
 09:AFB3:C8        INY
 09:AFB4:91 06     STA ($06),Y @ $E01E = #$62
 09:AFB6:18        CLC
 09:AFB7:A9 DC     LDA #$DC
 09:AFB9:65 06     ADC $0006 = #$1C
 09:AFBB:85 18     STA $0018 = #$00
 09:AFBD:8A        TXA
 09:AFBE:65 07     ADC $0007 = #$E0
 09:AFC0:85 19     STA $0019 = #$62
 09:AFC2:A5 18     LDA $0018 = #$00
 09:AFC4:A0 FA     LDY #$FA
 09:AFC6:91 06     STA ($06),Y @ $E01E = #$62
 09:AFC8:A5 19     LDA $0019 = #$62
 09:AFCA:C8        INY
 09:AFCB:91 06     STA ($06),Y @ $E01E = #$62
 09:AFCD:8A        TXA
 09:AFCE:A0 B8     LDY #$B8
 09:AFD0:91 06     STA ($06),Y @ $E01E = #$62
 09:AFD2:C8        INY
 09:AFD3:91 06     STA ($06),Y @ $E01E = #$62
 09:AFD5:A0 FE     LDY #$FE
 09:AFD7:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AFD9:85 18     STA $0018 = #$00
 09:AFDB:C8        INY
 09:AFDC:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AFDE:85 19     STA $0019 = #$62
 09:AFE0:A0 02     LDY #$02
 09:AFE2:B1 18     LDA ($18),Y @ $6202 = #$03
 09:AFE4:A0 FC     LDY #$FC
 09:AFE6:91 06     STA ($06),Y @ $E01E = #$62
 09:AFE8:A0 03     LDY #$03
 09:AFEA:B1 18     LDA ($18),Y @ $6202 = #$03
 09:AFEC:A0 FD     LDY #$FD
 09:AFEE:91 06     STA ($06),Y @ $E01E = #$62
 09:AFF0:4C 0B B0  JMP $B00B
 09:AFF3:A0 FC     LDY #$FC
 09:AFF5:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AFF7:85 18     STA $0018 = #$00
 09:AFF9:C8        INY
 09:AFFA:B1 06     LDA ($06),Y @ $E01E = #$62
 09:AFFC:85 19     STA $0019 = #$62
 09:AFFE:A1 18     LDA ($18,X) @ PPU_OAM_DATA = #$F8
 09:B000:88        DEY
 09:B001:91 06     STA ($06),Y @ $E01E = #$62
 09:B003:A0 01     LDY #$01
 09:B005:B1 18     LDA ($18),Y @ $6202 = #$03
 09:B007:A0 FD     LDY #$FD
 09:B009:91 06     STA ($06),Y @ $E01E = #$62
 09:B00B:A0 FC     LDY #$FC
 09:B00D:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B00F:C8        INY
 09:B010:11 06     ORA ($06),Y @ $E01E = #$62
 09:B012:D0 03     BNE $B017
 09:B014:4C F8 B0  JMP $B0F8
 09:B017:8A        TXA
 09:B018:48        PHA
 09:B019:A9 03     LDA #$03
 09:B01B:48        PHA
 09:B01C:8A        TXA
 09:B01D:48        PHA
 09:B01E:48        PHA
 09:B01F:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B021:48        PHA
 09:B022:88        DEY
 09:B023:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B025:48        PHA
 09:B026:20 82 E3  JSR $E382
 
 7A D1 06
 
 09:B02C:86 09     STX $0009 = #$81
 09:B02E:A5 09     LDA $0009 = #$81
 09:B030:48        PHA
 09:B031:A5 08     LDA $0008 = #$D9
 09:B033:48        PHA
 09:B034:20 82 E3  JSR $E382
 
 60 D4 06
 
 09:B03A:86 09     STX $0009
 09:B03C:A5 08     LDA $0008
 09:B03E:A0 C0     LDY #$C0
 09:B040:91 06     STA ($06),Y @ $E01E = #$62
 09:B042:A5 09     LDA $0009 = #$81
 09:B044:C8        INY
 09:B045:91 06     STA ($06),Y @ $E01E = #$62
 09:B047:A5 08     LDA $0008 = #$D9
 09:B049:C9 03     CMP #$03
 09:B04B:D0 04     BNE $B051
 09:B04D:A5 09     LDA $0009 = #$81
 09:B04F:C9 00     CMP #$00
 09:B051:D0 03     BNE $B056
 09:B053:4C F5 B0  JMP $B0F5
 09:B056:18        CLC
 09:B057:A0 DA     LDY #$DA
 09:B059:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B05B:85 18     STA $0018 = #$00
 09:B05D:69 01     ADC #$01
 09:B05F:91 06     STA ($06),Y @ $E01E = #$62
 09:B061:C8        INY
 09:B062:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B064:85 19     STA $0019 = #$62
 09:B066:69 00     ADC #$00
 09:B068:91 06     STA ($06),Y @ $E01E = #$62
 09:B06A:A2 18     LDX #$18
 09:B06C:20 DF E3  JSR $E3DF
 09:B06F:48        PHA
 09:B070:A9 32     LDA #$32
 09:B072:48        PHA
 09:B073:A9 0F     LDA #$0F
 09:B075:85 18     STA $0018 = #$00
 09:B077:86 19     STX $0019 = #$62
 09:B079:A0 C0     LDY #$C0
 09:B07B:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B07D:85 14     STA $0014 = #$00
 09:B07F:C8        INY
 09:B080:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B082:85 15     STA $0015 = #$00
 09:B084:A0 14     LDY #$14
 09:B086:A2 18     LDX #$18
 09:B088:A9 10     LDA #$10
 09:B08A:20 C1 E1  JSR $E1C1
 09:B08D:18        CLC
 09:B08E:A9 23     LDA #$23
 09:B090:65 10     ADC $0010 = #$56
 09:B092:85 18     STA $0018 = #$00
 09:B094:8A        TXA
 09:B095:65 11     ADC $0011 = #$AD
 09:B097:85 19     STA $0019 = #$62
 09:B099:A5 19     LDA $0019 = #$62
 09:B09B:48        PHA
 09:B09C:A5 18     LDA $0018 = #$00
 09:B09E:48        PHA
 09:B09F:A0 FC     LDY #$FC
 09:B0A1:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B0A3:85 18     STA $0018 = #$00
 09:B0A5:C8        INY
 09:B0A6:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B0A8:85 19     STA $0019 = #$62
 09:B0AA:A0 07     LDY #$07
 09:B0AC:B1 18     LDA ($18),Y @ $6202 = #$03
 09:B0AE:85 14     STA $0014 = #$00
 09:B0B0:86 15     STX $0015 = #$00
 09:B0B2:A5 15     LDA $0015 = #$00
 09:B0B4:48        PHA
 09:B0B5:A5 14     LDA $0014 = #$00
 09:B0B7:48        PHA
 09:B0B8:20 82 E3  JSR $E382
 
 CA DD 08
 
 09:B0BE:A2 18     LDX #$18
 09:B0C0:20 04 E4  JSR $E404
 09:B0C3:A5 08     LDA $0008 = #$D9
 09:B0C5:81 18     STA ($18,X) @ PPU_OAM_DATA = #$F8
 09:B0C7:18        CLC
 09:B0C8:A0 FA     LDY #$FA
 09:B0CA:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B0CC:85 18     STA $0018 = #$00
 09:B0CE:69 02     ADC #$02
 09:B0D0:91 06     STA ($06),Y @ $E01E = #$62
 09:B0D2:C8        INY
 09:B0D3:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B0D5:85 19     STA $0019 = #$62
 09:B0D7:69 00     ADC #$00
 09:B0D9:91 06     STA ($06),Y @ $E01E = #$62
 09:B0DB:C8        INY
 09:B0DC:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B0DE:81 18     STA ($18,X) @ PPU_OAM_DATA = #$F8
 09:B0E0:C8        INY
 09:B0E1:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B0E3:A0 01     LDY #$01
 09:B0E5:91 18     STA ($18),Y @ $6202 = #$03
 09:B0E7:18        CLC
 09:B0E8:98        TYA
 09:B0E9:A0 B8     LDY #$B8
 09:B0EB:71 06     ADC ($06),Y @ $E01E = #$62
 09:B0ED:91 06     STA ($06),Y @ $E01E = #$62
 09:B0EF:8A        TXA
 09:B0F0:C8        INY
 09:B0F1:71 06     ADC ($06),Y @ $E01E = #$62
 09:B0F3:91 06     STA ($06),Y @ $E01E = #$62
 09:B0F5:4C F3 AF  JMP $AFF3
 09:B0F8:A0 C3     LDY #$C3
 09:B0FA:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B0FC:48        PHA
 09:B0FD:88        DEY
 09:B0FE:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B100:48        PHA
 09:B101:A0 B9     LDY #$B9
 09:B103:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B105:48        PHA
 09:B106:88        DEY
 09:B107:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B109:48        PHA
 09:B10A:20 82 E3  JSR $E382
 
 D6 DC 06
 
 09:B110:A5 08     LDA $0008
 09:B112:A0 B8     LDY #$B8
 09:B114:91 06     STA ($06),Y @ $E01E = #$62
 09:B116:A5 09     LDA $0009 = #$81
 09:B118:C8        INY
 09:B119:91 06     STA ($06),Y @ $E01E = #$62
 09:B11B:8A        TXA
 09:B11C:A0 BC     LDY #$BC
 09:B11E:91 06     STA ($06),Y @ $E01E = #$62
 09:B120:C8        INY
 09:B121:91 06     STA ($06),Y @ $E01E = #$62
 09:B123:4C 35 B1  JMP $B135
 09:B126:18        CLC
 09:B127:A9 01     LDA #$01
 09:B129:A0 BC     LDY #$BC
 09:B12B:71 06     ADC ($06),Y @ $E01E = #$62
 09:B12D:91 06     STA ($06),Y @ $E01E = #$62
 09:B12F:8A        TXA
 09:B130:C8        INY
 09:B131:71 06     ADC ($06),Y @ $E01E = #$62
 09:B133:91 06     STA ($06),Y @ $E01E = #$62
 09:B135:A0 BC     LDY #$BC
 09:B137:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B139:A0 B8     LDY #$B8
 09:B13B:D1 06     CMP ($06),Y @ $E01E = #$62
 09:B13D:A0 BD     LDY #$BD
 09:B13F:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B141:A0 B9     LDY #$B9
 09:B143:F1 06     SBC ($06),Y @ $E01E = #$62
 09:B145:90 03     BCC $B14A
 09:B147:4C 78 B2  JMP $B278
 09:B14A:18        CLC
 09:B14B:A9 CB     LDA #$CB
 09:B14D:65 06     ADC $0006 = #$1C
 09:B14F:85 18     STA $0018 = #$00
 09:B151:8A        TXA
 09:B152:65 07     ADC $0007 = #$E0
 09:B154:85 19     STA $0019 = #$62
 09:B156:A5 18     LDA $0018 = #$00
 09:B158:A0 DA     LDY #$DA
 09:B15A:91 06     STA ($06),Y @ $E01E = #$62
 09:B15C:A5 19     LDA $0019 = #$62
 09:B15E:C8        INY
 09:B15F:91 06     STA ($06),Y @ $E01E = #$62
 09:B161:A1 18     LDA ($18,X) @ PPU_OAM_DATA = #$F8
 09:B163:A0 CA     LDY #$CA
 09:B165:91 06     STA ($06),Y @ $E01E = #$62
 09:B167:8A        TXA
 09:B168:A0 B6     LDY #$B6
 09:B16A:91 06     STA ($06),Y @ $E01E = #$62
 09:B16C:C8        INY
 09:B16D:91 06     STA ($06),Y @ $E01E = #$62
 09:B16F:A0 BA     LDY #$BA
 09:B171:91 06     STA ($06),Y @ $E01E = #$62
 09:B173:C8        INY
 09:B174:91 06     STA ($06),Y @ $E01E = #$62
 09:B176:4C 97 B1  JMP $B197
 09:B179:18        CLC
 09:B17A:A9 01     LDA #$01
 09:B17C:A0 BA     LDY #$BA
 09:B17E:71 06     ADC ($06),Y @ $E01E = #$62
 09:B180:91 06     STA ($06),Y @ $E01E = #$62
 09:B182:8A        TXA
 09:B183:C8        INY
 09:B184:71 06     ADC ($06),Y @ $E01E = #$62
 09:B186:91 06     STA ($06),Y @ $E01E = #$62
 09:B188:18        CLC
 09:B189:A9 01     LDA #$01
 09:B18B:A0 DA     LDY #$DA
 09:B18D:71 06     ADC ($06),Y @ $E01E = #$62
 09:B18F:91 06     STA ($06),Y @ $E01E = #$62
 09:B191:8A        TXA
 09:B192:C8        INY
 09:B193:71 06     ADC ($06),Y @ $E01E = #$62
 09:B195:91 06     STA ($06),Y @ $E01E = #$62
 09:B197:A0 BA     LDY #$BA
 09:B199:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B19B:A0 B8     LDY #$B8
 09:B19D:D1 06     CMP ($06),Y @ $E01E = #$62
 09:B19F:A0 BB     LDY #$BB
 09:B1A1:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B1A3:A0 B9     LDY #$B9
 09:B1A5:F1 06     SBC ($06),Y @ $E01E = #$62
 09:B1A7:90 03     BCC $B1AC
 09:B1A9:4C F6 B1  JMP $B1F6
 09:B1AC:A0 CA     LDY #$CA
 09:B1AE:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B1B0:85 18     STA $0018 = #$00
 09:B1B2:86 19     STX $0019 = #$62
 09:B1B4:A0 DA     LDY #$DA
 09:B1B6:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B1B8:85 14     STA $0014 = #$00
 09:B1BA:C8        INY
 09:B1BB:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B1BD:85 15     STA $0015 = #$00
 09:B1BF:A1 14     LDA ($14,X) @ $0000 = #$DC
 09:B1C1:85 10     STA $0010 = #$56
 09:B1C3:86 11     STX $0011 = #$AD
 09:B1C5:A5 18     LDA $0018 = #$00
 09:B1C7:C5 10     CMP $0010 = #$56
 09:B1C9:A5 19     LDA $0019 = #$62
 09:B1CB:E5 11     SBC $0011 = #$AD
 09:B1CD:B0 03     BCS $B1D2
 09:B1CF:4C F3 B1  JMP $B1F3
 09:B1D2:A0 BA     LDY #$BA
 09:B1D4:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B1D6:A0 B6     LDY #$B6
 09:B1D8:91 06     STA ($06),Y @ $E01E = #$62
 09:B1DA:A0 BB     LDY #$BB
 09:B1DC:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B1DE:A0 B7     LDY #$B7
 09:B1E0:91 06     STA ($06),Y @ $E01E = #$62
 09:B1E2:A0 DA     LDY #$DA
 09:B1E4:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B1E6:85 18     STA $0018 = #$00
 09:B1E8:C8        INY
 09:B1E9:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B1EB:85 19     STA $0019 = #$62
 09:B1ED:A1 18     LDA ($18,X) @ PPU_OAM_DATA = #$F8
 09:B1EF:A0 CA     LDY #$CA
 09:B1F1:91 06     STA ($06),Y @ $E01E = #$62
 09:B1F3:4C 79 B1  JMP $B179
 09:B1F6:18        CLC
 09:B1F7:A9 CB     LDA #$CB
 09:B1F9:65 06     ADC $0006 = #$1C
 09:B1FB:85 18     STA $0018 = #$00
 09:B1FD:8A        TXA
 09:B1FE:65 07     ADC $0007 = #$E0
 09:B200:85 19     STA $0019 = #$62
 09:B202:18        CLC
 09:B203:A0 B6     LDY #$B6
 09:B205:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B207:65 18     ADC $0018 = #$00
 09:B209:85 14     STA $0014 = #$00
 09:B20B:C8        INY
 09:B20C:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B20E:65 19     ADC $0019 = #$62
 09:B210:85 15     STA $0015 = #$00
 09:B212:A9 FF     LDA #$FF
 09:B214:81 14     STA ($14,X) @ $0000 = #$DC
 09:B216:18        CLC
 09:B217:A9 DC     LDA #$DC
 09:B219:65 06     ADC $0006 = #$1C
 09:B21B:85 18     STA $0018 = #$00
 09:B21D:8A        TXA
 09:B21E:65 07     ADC $0007 = #$E0
 09:B220:85 19     STA $0019 = #$62
 09:B222:A9 01     LDA #$01
 09:B224:85 14     STA $0014 = #$00
 09:B226:86 15     STX $0015 = #$00
 09:B228:88        DEY
 09:B229:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B22B:85 10     STA $0010 = #$56
 09:B22D:C8        INY
 09:B22E:B1 06     LDA ($06),Y @ $E01E = #$62
 09:B230:85 11     STA $0011 = #$AD
 09:B232:A0 10     LDY #$10
 09:B234:A2 14     LDX #$14
 09:B236:A9 0C     LDA #$0C
 09:B238:20 3A E4  JSR $E43A
 09:B23B:18        CLC
 09:B23C:A5 0C     LDA $000C = #$C9
 09:B23E:65 18     ADC $0018 = #$00
 09:B240:85 14     STA $0014 = #$00
 09:B242:A5 0D     LDA $000D = #$05
 09:B244:65 19     ADC $0019 = #$62
 09:B246:85 15     STA $0015 = #$00
 09:B248:A1 14     LDA ($14,X) @ $0000 = #$DC
 09:B24A:A0 FC     LDY #$FC
 09:B24C:91 06     STA ($06),Y @ $E01E = #$62
 09:B24E:A0 01     LDY #$01
 09:B250:B1 14     LDA ($14),Y @ $0002 = #$C9
 09:B252:A0 FD     LDY #$FD
 09:B254:91 06     STA ($06),Y @ $E01E = #$62
 09:B256:8A        TXA
 09:B257:48        PHA
 09:B258:A9 19     LDA #$19
 09:B25A:48        PHA
 09:B25B:18        CLC
 09:B25C:A9 07     LDA #$07
 09:B25E:88        DEY
 09:B25F:71 06     ADC ($06),Y @ $E01E = #$62
 09:B261:85 18     STA $0018 = #$00
 09:B263:8A        TXA
 09:B264:C8        INY
 09:B265:71 06     ADC ($06),Y @ $E01E = #$62
 09:B267:85 19     STA $0019 = #$62
 09:B269:A5 19     LDA $0019 = #$62
 09:B26B:48        PHA
 09:B26C:A5 18     LDA $0018 = #$00
 09:B26E:48        PHA
 09:B26F:20 82 E3  JSR $E382
 
 B6 D3 06
 
 09:B275:4C 26 B1  JMP $B126
 09:B278:4C 82 AE  JMP $AE82
 09:B27B:60        RTS -----------------------------------------


====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
B270                                     20 E3 E2 00
B280 EB FF
	                             
FUNCTION $B27C

Meta FE/FF = Current Nation (Starts at $7068)
Meta FD    = ???            (Starts at 0)
Meta FC    = ???
Meta FB    = ???            (Starts at 0)

 09:B282:A9 68     LDA #$68
 09:B284:A0 FE     LDY #$FE
 09:B286:91 06     STA ($06),Y
 09:B288:A9 70     LDA #$70
 09:B28A:C8        INY
 09:B28B:91 06     STA ($06),Y
 09:B28D:8A        TXA
 09:B28E:A0 FD     LDY #$FD
 09:B290:91 06     STA ($06),Y
 09:B292:A0 FB     LDY #$FB
 09:B294:91 06     STA ($06),Y
 09:B296:4C B4 B2  JMP $B2B4
 
 ------------------
 LOOP
 
 09:B299:18        CLC
 09:B29A:A9 01     LDA #$01
 09:B29C:A0 FB     LDY #$FB
 09:B29E:71 06     ADC ($06),Y @ $E01D = #$3B
 09:B2A0:91 06     STA ($06),Y @ $E01D = #$3B
 09:B2A2:8A        TXA
 09:B2A3:69 00     ADC #$00
 09:B2A5:18        CLC
 09:B2A6:A9 12     LDA #$12
 09:B2A8:A0 FE     LDY #$FE
 09:B2AA:71 06     ADC ($06),Y @ $E01D = #$3B
 09:B2AC:91 06     STA ($06),Y @ $E01D = #$3B
 09:B2AE:8A        TXA
 09:B2AF:C8        INY
 09:B2B0:71 06     ADC ($06),Y @ $E01D = #$3B
 09:B2B2:91 06     STA ($06),Y @ $E01D = #$3B
 ------------------
 
 09:B2B4:A0 FB     LDY #$FB
 09:B2B6:B1 06     LDA ($06),Y
 09:B2B8:85 18     STA $0018   ; Nation counter
 09:B2BA:86 19     STX $0019
 09:B2BC:A5 18     LDA $0018
 09:B2BE:C9 0F     CMP #$0F    ; Check if end of nation list
 09:B2C0:A5 19     LDA $0019
 09:B2C2:E9 00     SBC #$00
 09:B2C4:90 03     BCC $B2C9
 09:B2C6:4C EF B3  JMP $B3EF   ; Jump ahead if so
 
 09:B2C9:A0 0B     LDY #$0B
 09:B2CB:B1 04     LDA ($04),Y 
 09:B2CD:85 18     STA $0018   ; Preloaded Nation code
 09:B2CF:86 19     STX $0019
 09:B2D1:A0 FB     LDY #$FB
 09:B2D3:B1 06     LDA ($06),Y ; Nation counter
 09:B2D5:85 14     STA $0014
 09:B2D7:86 15     STX $0015
 09:B2D9:A5 14     LDA $0014
 09:B2DB:C5 18     CMP $0018   ; Check if input is same as current nation
 09:B2DD:D0 04     BNE $B2E3
 09:B2DF:A5 15     LDA $0015
 09:B2E1:C5 19     CMP $0019
 09:B2E3:D0 03     BNE $B2E8
 09:B2E5:4C EC B3  JMP $B3EC   ; Jump ahead if so
 
 09:B2E8:A0 FE     LDY #$FE
 09:B2EA:B1 06     LDA ($06),Y 
 09:B2EC:85 18     STA $0018
 09:B2EE:C8        INY
 09:B2EF:B1 06     LDA ($06),Y
 09:B2F1:85 19     STA $0019   ; Current nation 
 09:B2F3:A1 18     LDA ($18,X)
 09:B2F5:A0 01     LDY #$01
 09:B2F7:11 18     ORA ($18),Y
 09:B2F9:D0 03     BNE $B2FE
 09:B2FB:4C 05 B3  JMP $B305   
 
 09:B2FE:84 18     STY $0018
 09:B300:86 19     STX $0019
 09:B302:4C 09 B3  JMP $B309
 09:B305:86 18     STX $0018
 09:B307:86 19     STX $0019 
 09:B309:A5 18     LDA $0018   ; Check if Nation exists
 09:B30B:D0 03     BNE $B310
 09:B30D:4C EC B3  JMP $B3EC   ; Jump ahead if not 
 
 09:B310:A0 FE     LDY #$FE
 09:B312:B1 06     LDA ($06),Y
 09:B314:85 18     STA $0018
 09:B316:C8        INY
 09:B317:B1 06     LDA ($06),Y
 09:B319:85 19     STA $0019   ; Current Nation
 09:B31B:A0 03     LDY #$03
 09:B31D:B1 18     LDA ($18),Y 
 09:B31F:48        PHA
 09:B320:88        DEY
 09:B321:B1 18     LDA ($18),Y 
 09:B323:48        PHA         ; Reserve officer list
 09:B324:20 82 E3  JSR $E382

 Run function $D43B (-4)       ; Check # of officers
 
 09:B32A:86 09     STX $0009
 09:B32C:A5 08     LDA $0008
 09:B32E:C9 0F     CMP #$0F
 09:B330:A5 09     LDA $0009
 09:B332:E9 00     SBC #$00
 09:B334:90 03     BCC $B339
 09:B336:4C 40 B3  JMP $B340
 09:B339:84 18     STY $0018
 09:B33B:86 19     STX $0019
 09:B33D:4C 44 B3  JMP $B344
 09:B340:86 18     STX $0018
 09:B342:86 19     STX $0019
 09:B344:A5 18     LDA $0018  ; Check if reserve list is full
 09:B346:D0 03     BNE $B34B  
 09:B348:4C EC B3  JMP $B3EC  ; Jump ahead if so
 
 09:B34B:A0 FD     LDY #$FD
 09:B34D:B1 06     LDA ($06),Y ; Counter?
 09:B34F:85 18     STA $0018
 09:B351:86 19     STX $0019
 09:B353:A2 18     LDX #$18
 09:B355:20 DF E3  JSR $E3DF   ; Push counter value to stack
 09:B358:48        PHA
 09:B359:48        PHA
 09:B35A:A0 FF     LDY #$FF
 09:B35C:B1 06     LDA ($06),Y
 09:B35E:48        PHA
 09:B35F:88        DEY
 09:B360:B1 06     LDA ($06),Y
 09:B362:48        PHA         
 09:B363:A9 B4     LDA #$B4
 09:B365:48        PHA
 09:B366:A9 E6     LDA #$E6
 09:B368:48        PHA
 09:B369:8A        TXA
 09:B36A:48        PHA
 09:B36B:A9 E0     LDA #$E0
 09:B36D:48        PHA
 09:B36E:8A        TXA
 09:B36F:48        PHA
 09:B370:A9 02     LDA #$02
 09:B372:48        PHA
 09:B373:20 82 E3  JSR $E382
 
 Run function $DD79 (-C)
 Run function $B4E6 on Page 2: Tally number of ??? for current nation
 
 09:B379:A5 08     LDA $0008 = #$00
 09:B37B:A0 FC     LDY #$FC
 09:B37D:91 06     STA ($06),Y @ $E01D = #$3B
 09:B37F:86 09     STX $0009 = #$00
 09:B381:A2 18     LDX #$18
 09:B383:20 04 E4  JSR $E404
 09:B386:A5 08     LDA $0008 = #$00
 09:B388:C5 18     CMP $0018 = #$8D
 09:B38A:A5 09     LDA $0009 = #$00
 09:B38C:E5 19     SBC $0019 = #$6E
 09:B38E:B0 03     BCS $B393
 09:B390:4C EC B3  JMP $B3EC
 09:B393:A0 FD     LDY #$FD
 09:B395:B1 06     LDA ($06),Y @ $E01D = #$3B
 09:B397:85 18     STA $0018 = #$8D
 09:B399:86 19     STX $0019 = #$6E
 09:B39B:88        DEY
 09:B39C:B1 06     LDA ($06),Y @ $E01D = #$3B
 09:B39E:85 14     STA $0014 = #$00
 09:B3A0:86 15     STX $0015 = #$00
 09:B3A2:A5 18     LDA $0018 = #$8D
 09:B3A4:C5 14     CMP $0014 = #$00
 09:B3A6:A5 19     LDA $0019 = #$6E
 09:B3A8:E5 15     SBC $0015 = #$00
 09:B3AA:90 03     BCC $B3AF
 09:B3AC:4C BB B3  JMP $B3BB
 09:B3AF:8A        TXA
 09:B3B0:A0 FA     LDY #$FA
 09:B3B2:91 06     STA ($06),Y @ $E01D = #$3B
 09:B3B4:A0 FC     LDY #$FC
 09:B3B6:B1 06     LDA ($06),Y @ $E01D = #$3B
 09:B3B8:C8        INY
 09:B3B9:91 06     STA ($06),Y @ $E01D = #$3B
 09:B3BB:18        CLC
 09:B3BC:A9 EB     LDA #$EB
 09:B3BE:65 06     ADC $0006 = #$1C
 09:B3C0:85 18     STA $0018 = #$8D
 09:B3C2:8A        TXA
 09:B3C3:65 07     ADC $0007 = #$E0
 09:B3C5:85 19     STA $0019 = #$6E
 09:B3C7:A0 FA     LDY #$FA
 09:B3C9:B1 06     LDA ($06),Y @ $E01D = #$3B
 09:B3CB:85 14     STA $0014 = #$00
 09:B3CD:86 15     STX $0015 = #$00
 09:B3CF:18        CLC
 09:B3D0:A5 14     LDA $0014 = #$00
 09:B3D2:65 18     ADC $0018 = #$8D
 09:B3D4:85 10     STA $0010 = #$56
 09:B3D6:A5 15     LDA $0015 = #$00
 09:B3D8:65 19     ADC $0019 = #$6E
 09:B3DA:85 11     STA $0011 = #$AD
 09:B3DC:C8        INY
 09:B3DD:B1 06     LDA ($06),Y @ $E01D = #$3B
 09:B3DF:81 10     STA ($10,X) @ $B0AD = #$18
 09:B3E1:18        CLC
 09:B3E2:A9 01     LDA #$01
 09:B3E4:88        DEY
 09:B3E5:71 06     ADC ($06),Y @ $E01D = #$3B
 09:B3E7:91 06     STA ($06),Y @ $E01D = #$3B
 09:B3E9:8A        TXA
 09:B3EA:69 00     ADC #$00
 09:B3EC:4C 99 B2  JMP $B299
 09:B3EF:A0 FD     LDY #$FD
 09:B3F1:B1 06     LDA ($06),Y @ $E01D = #$3B
 09:B3F3:D0 03     BNE $B3F8
 09:B3F5:4C 5E B4  JMP $B45E
 09:B3F8:A9 12     LDA #$12
 09:B3FA:85 18     STA $0018 = #$8D
 09:B3FC:86 19     STX $0019 = #$6E
 09:B3FE:18        CLC
 09:B3FF:A9 EB     LDA #$EB
 09:B401:65 06     ADC $0006 = #$1C
 09:B403:85 14     STA $0014 = #$00
 09:B405:8A        TXA
 09:B406:65 07     ADC $0007 = #$E0
 09:B408:85 15     STA $0015 = #$00
 09:B40A:A2 18     LDX #$18
 09:B40C:20 DF E3  JSR $E3DF
 09:B40F:A2 14     LDX #$14
 09:B411:20 DF E3  JSR $E3DF
 09:B414:A0 FA     LDY #$FA
 09:B416:B1 06     LDA ($06),Y @ $E01D = #$3B
 09:B418:85 18     STA $0018 = #$8D
 09:B41A:86 19     STX $0019 = #$6E
 09:B41C:A5 19     LDA $0019 = #$6E
 09:B41E:48        PHA
 09:B41F:A5 18     LDA $0018 = #$8D
 09:B421:48        PHA
 09:B422:20 82 E3  JSR $E382
 
 Run function $D7D1 (-4)     Random number
 
 09:B428:A2 14     LDX #$14
 09:B42A:20 04 E4  JSR $E404
 09:B42D:18        CLC
 09:B42E:A5 08     LDA $0008 = #$00
 09:B430:65 14     ADC $0014 = #$00
 09:B432:85 18     STA $0018 = #$8D
 09:B434:A5 09     LDA $0009 = #$00
 09:B436:65 15     ADC $0015 = #$00
 09:B438:85 19     STA $0019 = #$6E
 09:B43A:A1 18     LDA ($18,X) @ $006E = #$00
 09:B43C:85 14     STA $0014 = #$00
 09:B43E:86 15     STX $0015 = #$00
 09:B440:A2 18     LDX #$18
 09:B442:20 04 E4  JSR $E404
 09:B445:A0 14     LDY #$14
 09:B447:A2 18     LDX #$18
 09:B449:A9 10     LDA #$10
 09:B44B:20 C1 E1  JSR $E1C1
 09:B44E:18        CLC
 09:B44F:A5 10     LDA $0010 = #$56
 09:B451:69 68     ADC #$68
 09:B453:85 08     STA $0008 = #$00
 09:B455:A5 11     LDA $0011 = #$AD
 09:B457:69 70     ADC #$70
 09:B459:85 09     STA $0009 = #$00
 09:B45B:4C 62 B4  JMP $B462
 09:B45E:86 08     STX $0008 = #$00
 09:B460:86 09     STX $0009 = #$00
 09:B462:60        RTS -----------------------------------------
====================================================
FUNCTION $B463

 09:B463:A9 6E     LDA #$6E
 09:B465:85 09     STA $0009 = #$81
 09:B467:A9 F6     LDA #$F6
 09:B469:85 08     STA $0008 = #$D9
 09:B46B:A2 E1     LDX #$E1
 09:B46D:A0 00     LDY #$00
 09:B46F:B1 08     LDA ($08),Y @ $81DB = #$00
 09:B471:A8        TAY
 09:B472:29 0F     AND #$0F
 09:B474:F0 06     BEQ $B47C
 09:B476:88        DEY
 09:B477:98        TYA
 09:B478:A0 00     LDY #$00
 09:B47A:91 08     STA ($08),Y @ $81DB = #$00
 09:B47C:E6 08     INC $0008 = #$D9
 09:B47E:D0 02     BNE $B482
 09:B480:E6 09     INC $0009 = #$81
 09:B482:CA        DEX
 09:B483:D0 E8     BNE $B46D
 09:B485:60        RTS -----------------------------------------
====================================================
FUNCTION $B486

 09:B486:A0 02     LDY #$02
 09:B488:B1 02     LDA ($02),Y
 09:B48A:85 0A     STA $000A
 09:B48C:A9 71     LDA #$71
 09:B48E:85 09     STA $0009
 09:B490:A9 76     LDA #$76
 09:B492:85 08     STA $0008
 09:B494:A2 08     LDX #$08
 09:B496:A9 1B     LDA #$1B
 09:B498:20 52 D3  JSR $D352
 09:B49B:A2 2E     LDX #$2E
 09:B49D:A0 00     LDY #$00
 09:B49F:A5 0A     LDA $000A = #$76
 09:B4A1:49 FF     EOR #$FF
 09:B4A3:31 08     AND ($08),Y @ $81DB = #$00
 09:B4A5:91 08     STA ($08),Y @ $81DB = #$00
 09:B4A7:CA        DEX
 09:B4A8:F0 0E     BEQ $B4B8
 09:B4AA:A5 08     LDA $0008 = #$D9
 09:B4AC:18        CLC
 09:B4AD:69 1C     ADC #$1C
 09:B4AF:85 08     STA $0008 = #$D9
 09:B4B1:90 EC     BCC $B49F
 09:B4B3:E6 09     INC $0009 = #$81
 09:B4B5:4C 9F B4  JMP $B49F
 09:B4B8:60        RTS -----------------------------------------
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
B500                19 0A 05 00

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
B500                            23 2A 4C 64

ALLEGIANCE ??????????? %
        00 -  25%
		01 -  10%
		02 -  05%
		03 -   0%

ALLEGIANCE RECRUITMENT %
        00 -  35%
		01 -  42%
		02 -  76%
		03 - 100%
	
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F	
BDA0             A5 10 65
		
SCENARIO 1 A5  = 165
         2 10  =  16
		 3 65  = 101
		 
00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F	
BDA0                 14 85 18

SCENARIO 1 14 =  20
         2 85 = 133
		 3 18 =  24
	

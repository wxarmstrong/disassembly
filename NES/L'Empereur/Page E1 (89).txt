     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8000 4C EE 83                                        ROM Address: 002010
8000 JMP $83EE
==================================================== 
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8000          20 09 E5 FD FF A0 0B 00 8C BE 9E BB D3
8010 A2 FF FF A0 FF FF 5F DA A9 A0 76 A0 FF FF 54 BE
8020 5F DA A2 FE FF A0 FE FF 90 E3 00 B3 62 62 E9 1E
8030 EF 06 A2 FD FF A0 FD FF CF

FUNCTION $8003 (FD FF) $8008-$8038
Changes the screen value & switches to & runs PRG Bank 1 based on values encoded in item (01) on table $9EBE

8008 A0 0B 00    / Store preloaded value 01 to $0008
800B 8C BE 9E    / Store #$9EBE to MC
800E BB          / Add MC to M8
800F D3          / Replace M8 with value at address
8010 A2 FF FF    / Store $0008 to metastack value 01
8013 A0 FF FF    / Store metastack value 01 to $0008
8016 5F          / Store #$0F to MC
8017 DA          / MC AND M8 -> M8
8018 A9 A0 76    / Store $0008 to $76A0                            Menu/Screen
801B A0 FF FF    / Store metastack value 01 to $0008               Right half of value
801E 54          / Store #$04 to MC
801F BE          / Perform 4 right shifts on M8
8020 5F          / Store #$0F to MC
8021 DA          / MC AND M8 -> M8
8022 A2 FE FF    / Store $0008 to metastack value 02               Left half of value
8025 A0 FE FF    / Store metastack value 02 to $0008
8028 90 E3 00    / Add #$E3 to M8 (obtain value #$E3-#$F8)
802B B3          / Push M8 to metastack                       (+2)
802C 62          / Push #$0002 to metastack                   (+2)
802D 62          / Push #$0002 to metastack                   (+2)
802E E9 1E EF 06 / Run function $EF1E with 6 metastack values (-6)
8032 A2 FD FF    / Store $0008 to metastack value 03
8035 A0 FD FF    / Load metastack value 03 to $0008
8038 CF          / Exit

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8030                            20 09 E5 FE FF 42 A9
8040 5F 70 6C E9 E4 CD 02 8E 05 60 E9 6E C2 02 A8 55
8050 7B 40 A8 57 7B 60 AA A2 76 E9 40 86 04 AA A2 76
8060 E9 A4 88 02 A2 FE FF AC 5F CF A0 FE FF 7D B3 E9
8070 03 80 02 A2 FF FF AC 5F CF 60 E9 7F D2 02 A5 EC
8080 6F 8C 80 00 DA 50 C1 D7 92 80 A0 FF FF 51 C1 D7
8090 5D 80 A0 FE FF 58 C0 D7 A6 80 A5 EC 6F 8C 80 00
80A0 DA 50 C1 D8 47 80 A5 59 7B 8C FF 00 C0 D8 B8 80
80B0 8E 68 70 60 E9 B8 8B 04 40 A8 57 7B A8 55 7B CF

FUNCTION $8039 (FE FF) $803E-$80BF

803E 42          / Store #$02 to M8
803F A9 5F 70    / Store $0008 to $705F               /      Set national actions to 2

8042 6C          / Push #$0C to metastack             / (+2)
8043 E9 E4 CD 02 / Run function $CDE4                 / (-2)

8047 8E 05 60    / Push #$6005 to metastack           / (+2)
804A E9 6E C2 02 / Run function $C26E                 / (-2) Find Napoleon's city
804E A8 55 7B    / Store M8 to $7B55/$7B56
8051 40          / Store #$00 to M8
8052 A8 57 7B    / Store M8 to $7B57/$7B58

8055 60          / Push #$00 to metastack             / (+2)
8056 AA A2 76    / Push $76A2/$76A3 to metastack      / (+2) Active Nation
8059 E9 40 86 04 / Run function $8640                 / (-4)

805D AA A2 76    / Push $76A2/$76A3 to metastack      / (+2)
8060 E9 A4 88 02 / Run function $88A4                 / (-2)
8064 A2 FE FF    / Store $0008 to meta 02

8067 AC 5F CF    / Run function $CF5F                 /      Adjust fill/extended RAM modes?

806A A0 FE FF    / Store meta 02 to $0008
806D 7D          / Add #$0D to M8
806E B3          / Push M8 to metastack               / (+2)  
806F E9 03 80 02 / Run function $8003                 / (-2)
8073 A2 FF FF    / Store $0008 to meta 01

8076 AC 5F CF    / Run function $CF5F                 /      Adjust fill/extended RAM modes?

8079 60          / Push #$00 to metastack             / (+2)
807A E9 7F D2 02 / Run function $D27F                 / (-2) Text position #$00

807E A5 EC 6F    / Store $6FEC to $0008               /      Settings
8081 8C 80 00    / Store #$0080 to MC
8084 DA          / M8 AND MC
8085 50          / Store #$00 to MC
8086 C1          / Check if M8 is different than MC   /      Check if BGM is enabled
8087 D7 92 80    / Jump to $8092 if so

808A A0 FF FF    / Store meta 01 to $0008
808D 51          / Store #$01 to MC
808E C1          / Check if M8 is different than MC
808F D7 5D 80    / Jump to $805D if so

8092 A0 FE FF    / Store meta 02 to $0008
8095 58          / Store #$08 to MC
8096 C0          / Check if M8 = MC
8097 D7 A6 80    / Jump to $80A6 if so

809A A5 EC 6F    / Store $6FEC to $0008               / Settings
809D 8C 80 00    / Store #$80 to MC
80A0 DA          / M8 AND MC                          / Autoplay flag
80A1 50          / Store #$00 to MC
80A2 C1          / Check if M8 is different than MC   / Check if autoplay is on
80A3 D8 47 80    / Jump to $8047 if not

80A6 A5 59 7B    / Store $7B59 to $0008               / Map status
80A9 8C FF 00    / Store #$FF to MC
80AC C0          / Check if M8 = MC                   / Check if "No Map"
80AD D8 B8 80    / Jump to $80B8 if not

80B0 8E 68 70    / Push #$7068 to metastack           / (+2)
80B3 60          / Push #$00 to metastack             / (+2)
80B4 E9 B8 8B 04 / Run function $8BB8                 / (-4)

80B8 40          / Store #$00 to M8
80B9 A8 57 7B    / Store M8 to $7B57/$7B58
80BC A8 55 7B    / Store M8 to $7B55/$7B56

80BF CF          / Exit
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
80C0 20 09 E5 FF FF AA D1 7C E9 8D 8B 02 A4 D1 7C A8
80D0 55 7B 40 A8 57 7B AA D1 7C E9 9C 85 02 AC 5F CF 
80E0 AA D1 7C E9 CC 89 02 B3 E9 03 80 02 A2 FF FF AC
80F0 5F CF A0 FF FF 8C FF 00 C0 D8 01 81 60 E9 7F D2
8100 02 A5 EC 6F 8C 80 00 DA 50 C1 D7 15 81 A0 FF FF
8110 51 C1 D7 CC 80 A5 EB 6F 51 C1 D8 3F 81 8D 18 6D
8120 8E 9D A9 8E E0 00 62 E9 79 DD 0A 60 E9 7F D2 02
8130 8E 68 70 AA D1 7C E9 A5 8B 02 B3 E9 B8 8B 04 40
8140 A8 57 7B A8 55 7B CF

FUNCTION $80C0 (FF FF) $80C5-$8146

80C5 AA D1 7C    / Push $7CD1/$7CD2 to metastack     / (+2)
80C8 E9 8D 8B 02 / Run function $8B8D                / (-2) Play active city BGM
80CC A4 D1 7C    / Store $7CD1/$7CD2 to M8
80CF A8 55 7B    / Store M8 to $7B55/$7B56
80D2 40          / Store #$00 to M8
80D3 A8 57 7B    / Store M8 to $7B57/$7B58
80D6 AA D1 7C    / Push $7CD1/$7CD2 to metastack     / (+2)
80D9 E9 9C 85 02 / Run function $859C                / (-2)

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
80D0 55 7B 40 A8 57 7B AA D1 7C E9 9C 85 02 AC 5F CF 
80E0 AA D1 7C E9 CC 89 02 B3 E9 03 80 02 A2 FF FF AC
80F0 5F CF A0 FF FF 8C FF 00 C0 D8 01 81 60 E9 7F D2
8100 02 A5 EC 6F 8C 80 00 DA 50 C1 D7 15 81 A0 FF FF
8110 51 C1 D7 CC 80 A5 EB 6F 51 C1 D8 3F 81 8D 18 6D
8120 8E 9D A9 8E E0 00 62 E9 79 DD 0A 60 E9 7F D2 02
8130 8E 68 70 AA D1 7C E9 A5 8B 02 B3 E9 B8 8B 04 40
8140 A8 57 7B A8 55 7B CF

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8140                      20 09 E5 00 00 A5 EE 6F D8
8150 62 81 A5 EF 6F 51 C0 D8 5B 81 CF 40 A9 EE 6F D6
8160 9F 81 42 A9 EF 6F AC 9B 9D 60 8D 2E 8E 31 70 E9
8170 23 F4 06 40 A9 F0 6F 6F 8E F2 6F E9 A4 90 04 A5
8180 EC 6F 8C 80 00 DA 50 C1 D7 9A 81 AC 27 CE D8 9A
8190 81 A5 5A 78 8B 17 C1 D8 9F 81 6C E9 E4 CD 02 A5
81A0 EC 6F 8C 80 00 DA 50 C1 D7 C3 81 6F A5 13 60 B3
81B0 E9 60 D4 04 56 C0 D7 C3 81 8E 05 60 E9 1F C3 02
81C0 D8 CE 81 8E 68 70 60 E9 B8 8B 04 D6 6D 82 A5 EA
81D0 6F B3 8E 63 70 E9 77 DE 04 D6 6D 82 AC 5F CF A5
81E0 F0 6F 8C F2 6F BB D3 8B 12 B5 8C 68 70 BB A8 A2
81F0 76 A4 A2 76 B0 50 C1 D8 59 82 A4 A2 76 76 B0 B3
8200 8E 9C A3 8E E0 00 62 E9 79 DD 08 D8 14 82 AC 39
8210 80 D6 59 82 A5 EC 6F 8C 80 00 DA 50 C1 D8 3F 82
8220 A4 A2 76 8C 68 70 C0 D8 3F 82 60 AA A2 76 E9 A2
8230 86 04 62 E9 62 C0 02 AA A2 76 60 E9 B8 8B 04 60
8240 E9 7F D2 02 AA A2 76 E9 19 D0 02 B3 8E DA 9E E9
8250 27 C6 04 8D 1B E9 03 80 02 AC 73 9D A5 EB 6F D8
8260 66 82 AC 5F CF CF A5 F0 6F D0 A9 F0 6F A5 F0 6F
8270 5F C6 D7 DC 81 AC 5F CF 60 E9 7F D2 02 CF

FUNCTION $8147 (00 00) $814C-$827D

814C A5 EE 6F    / Store $6FEE to $0008
814F D8 62 81    / Jump to $8162 if zero

8152 A5 EF 6F    / Store $6FEF to $0008              / Game phase
8155 51          / Store #$01 to M8
8156 C0          / Check if M8=MC                    / City phase
8157 D8 5B 81    / Jump to $815B if not

815A CF          / Exit

815B 40          / Store #$00 to M8
815C A9 EE 6F    / Store $0008 to $6FEE
815F D6 9F 81    / Jump to $819F 

8162 42          / Store #$02 to M8
8163 A9 EF 6F    / Store M8 to $6FEF                 / Set to National phase

8166 AC 9B 9D    / Run function $9D9B                / Reset each officer's action flag

8169 60          / Push #$00 to metastack            / (+2)
816A 8D 2E       / Push #$2E to metastack            / (+2)
816C 8E 31 70    / Push #$7031 to metastack          / (+2)
816F E9 23 F4 06 / Run function $F423                / (-6) Blank out icons?

8173 40          / Store #$00 to M8
8174 A9 F0 6F    / Store $0008 to $6FF0 

8177 6F          / Push #$0F to metastack            / (+2)
8178 8E F2 6F    / Push #$6FF2 to metastack          / (+2)
817B E9 A4 90 04 / Run function $90A4                / (-4) Randomize nation turn order

817F A5 EC 6F    / Store $6FEC to $0008
8182 8C 80 00    / Store #$80 to MC
8185 DA          / M8 AND MC                         /
8186 50          / Store #$00 to MC
8187 C1          / Check if M8 is different than MC  /      Check if autoplay is on
8188 D7 9A 81    / Jump to $819A if so

818B AC 27 CE    / Run function $CE27                /      Check BGM?
818E D8 9A 81    / Jump to $819A if zero

8191 A5 5A 78    / Store $785A to $0008
8194 8B 17       / Store #$17 to MC
8196 C1          / Check if M8 is different than MC
8197 D8 9F 81    / Jump to $819F if not

819A 6C          / Push #$0C to metastack            / (+2)
819B E9 E4 CD 02 / Run function $CDE4                / (-2) Play BGM #$0C

819F A5 EC 6F    / Store $6FEC to $0008
81A2 8C 80 00    / Store #$80 to MC
81A5 DA          / M8 AND MC
81A6 50          / Store #$00 to MC
81A7 C1          / Check if M8 is different than MC  /      Check if autoplay is on
81A8 D7 C3 81    / Jump to $81C3 if so

81AB 6F          / Push #$0F to metastack            / (+2)
81AC A5 13 60    / Store $6013 to $0008              /      Napoleon - Status
81AF B3          / Push M8 to metastack              / (+2)
81B0 E9 60 D4 04 / Run function $D460                / (-4)
81B4 56          / Store $06 to MC
81B5 C0          / Check if M8 = MC
81B6 D7 C3 81    / Jump to $81C3 if so

81B9 8E 05 60    / Push #$6005 to metastack          / (+2)
81BC E9 1F C3 02 / Run function $C31F                / (-2) Check if status 7 + nation stat 0x01
81C0 D8 CE 81    / Jump to $81CE if zero

81C3 8E 68 70    / Push #$7068 to metastack          / (+2)
81C6 60          / Push #$00 to metastack            / (+2)
81C7 E9 B8 8B 04 / Run function $8BB8                / (-4) Center map, change banner
81CB D6 6D 82    / Jump to $826D

81CE A5 EA 6F    / Store $6FEA to $0008
81D1 B3          / Push M8 to metastack              / (+2)
81D2 8E 63 70    / Push #$7063 to metastack          / (+2)
81D5 E9 77 DE 04 / Run function $DE77                / (-2) Reduce value by Scenario #
81D9 D6 6D 82    / Jump to $826D
------------------
Loop 
81DC AC 5F CF    / Run function $CF5F

81DF A5 F0 6F    / Store $6FF0 to $0008
81E2 8C F2 6F    / Store #$6FF2 to MC
81E5 BB          / Add MC to M8                       /     Current nation turn
81E6 D3          / Replace M8 with 1-byte value
81E7 8B 12       / Store #$12 to MC
81E9 B5          / Multiply M8 by MC
81EA 8C 68 70    / Store #$7068 to MC
81ED BB          / Add MC to M8
81EE A8 A2 76    / Store M8 to $76A2/$76A3            /     Set as active nation

81F1 A4 A2 76    / Store $76A2/$76A3 to M8
81F4 B0          / Replace M8 with 2-byte value
81F5 50          / Store #$00 to MC
81F6 C1          / Check if M8 is different than MC   /     Check if not last in list
81F7 D8 59 82    / Jump to $8952 if not

81FA A4 A2 76    / Store $76A2/$76A3 to M8
81FD 76          / Add #$06 to M8
81FE B0          / Replace M8 with 2-byte value       /      Nation Ruler
81FF B3          / Push M8 to metastack               / (+2)
8200 8E 9C A3    / Push #$A39C to metastack           / (+2)
8203 8E E0 00    / Push #$E0 to metastack             / (+2)
8206 62          / Push #$02 to metastack             / (+2)
8207 E9 79 DD 08 / Run function $DD79                 / (-8) Check if player-controlled 
820B D8 14 82    / Jump to $8214 if not

820E AC 39 80    / Run function $8039                 /      Player-controlled National Phase

8211 D6 59 82    / Jump to $8259

8214 A5 EC 6F    / Store $6FEC to $0008
8217 8C 80 00    / Store #$80 to MC
821A DA          / M8 AND MC
821B 50          / Store #$00 to MC
821C C1          / Check if M8 is different than MC   /      Check if autoplay is on
821D D8 3F 82    / Jump to $823F if not

8220 A4 A2 76    / Store $76A2/$76A3 to M8            /      Active Nation
8223 8C 68 70    / Store #$7068 to MC
8226 C0          / Check if M8 = MC                   /      Check if France
8227 D8 3F 82    / Jump to $823F if not

822A 60          / Push #$00 to metastack             / (+2)
822B AA A2 76    / Push $76A2/$76A3 to metastack      / (+2)
822E E9 A2 86 04 / Run function $86A2                 / (-4)

8232 62          / Push #$02 to metastack             / (+2)
8233 E9 62 C0 02 / Run function $C062                 / (-2) Wait 2 time units for input

8237 AA A2 76    / Push $76A2/$76A3 to metastack      / (+2) Active Nation
823A 60          / Push #$00 to metastack             / (+2)
823B E9 B8 8B 04 / Run function $8BB8                 / (-4) Center map on active nation

823F 60          / Push #$00 to metastack             / (+2)
8240 E9 7F D2 02 / Run function $D27F                 / (-2) Text pos #$00

8244 AA A2 76    / Push $76A2/$76A3 to metastack      / (+2)
8247 E9 19 D0 02 / Run function $D019                 / (-2) Retrieve name of nation
824B B3          / Push M8 to metastack               / (+2)
824C 8E DA 9E    / Push #$9EDA to metastack           / (+2)
824F E9 27 C6 04 / Run function $C627                 / (-4) Print "[Nation] plotting strategy"

8253 8D 1B       / Push #$1B to metastack             / (+2)
8255 E9 03 80 02 / Run function $8003                 / (-2)
------------------

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8250 27 C6 04 8D 1B E9 03 80 02 AC 73 9D A5 EB 6F D8
8260 66 82 AC 5F CF CF A5 F0 6F D0 A9 F0 6F A5 F0 6F
8270 5F C6 D7 DC 81 AC 5F CF 60 E9 7F D2 02 CF

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8270                                           20 09
8280 E5 FF FF 40 A2 FF FF 41 A9 EF 6F A5 EB 6F D8 92
8290 82 CF A5 EE 6F D8 9F 82 40 A9 EE 6F D6 DC 83 A5
82A0 59 7B 8C FF 00 C0 D8 D2 82 8E FF 00 8D 2E 8E 2B
82B0 7D E9 23 F4 06 8D 40 60 8E 9D A9 8E E0 00 62 E9
82C0 79 DD 0A AC 0B D0 60 8E 18 AC 8E E0 00 62 E9 79 
82D0 DD 08 A5 08 60 8C FF 00 C1 D8 F4 82 8E 68 70 8E
82E0 05 60 E9 6E C2 02 B3 E9 A5 8B 02 B3 E9 E8 8B 04
82F0 41 D6 FF 82 8E 68 70 8E 6A 74 E9 B8 8B 04 40 A2
8300 FF FF AC 9B 9D 60 8D 2E 8E 31 70 E9 23 F4 06 40
8310 A9 F1 6F 8D 2E 8E 02 70 E9 A4 90 04 A5 EC 6F 8C
8320 80 00 DA 50 C1 D8 30 83 61 E9 E4 CD 02 D6 DC 83
8330 AC 27 CE D8 47 83 A5 5A 7B 59 C9 D8 DC 83 A5 5A
8340 7B 8B 17 C1 D8 DC 83 A0 FF FF D8 28 83 8E 05 60
8350 E9 6E C2 02 B3 E9 8D 8B 02 D6 DC 83 AC 5F CF A5
8360 F1 6F 8C 02 70 BB D3 8B 1C B5 8C 76 71 BB A8 D1
8370 7C A4 D1 7C 72 B0 50 C0 D7 D5 83 A4 D1 7C 72 B0
8380 B3 8E 9C A3 8E E0 00 62 E9 79 DD 08 D8 95 83 AC
8390 C0 80 D6 B6 83 AA D1 7C E9 4F D0 02 B3 A4 D1 7C
83A0 8C 76 71 BC 8B 1C B8 D0 B3 8E F2 9E E9 27 C6 06
83B0 8D 1A E9 03 80 02 A5 EB 6F 51 C0 D8 C8 83 40 A9
83C0 EB 6F 8D 19 E9 03 80 02 AC 73 9D A5 EB 6F D8 D5
83D0 83 AC 5F CF CF A5 F1 6F D0 A9 F1 6F A5 F1 6F 8B
83E0 2E C6 D7 5C 83 AC 5F CF 60 E9 7F D2 02 CF

FUNCTION $827E (FF FF) $8283-$83ED                    CITY PHASE

8283 40          / Store #$00 to M8
8284 A2 FF FF    / Store $0008 to meta 01
8287 41          / Store #$01 to M8
8288 A9 EF 6F    / Store $0008 to $6FEF             / Set phase to City
828B A5 EB 6F    / Store $6FEB to $0008             / Check game state
828E D8 92 82    / Jump to $8292 if M8=#$00
8291 CF          / Exit
8292 A5 EE 6F    / Store $6FEE to $0008              ???
8295 D8 9F 82    / Jump to $829F if M8=#$00
8298 40          / Store #$00 to M8
8299 A9 EE 6F    / Store $0008 to $6FEE
829C D6 DC 83    / Jump to $83DC


829F A5 59 7B    / Store $7B59 to $0008             / Map status
82A2 8C FF 00    / Store #$00FF to MC
82A5 C0          / Check if M8=MC                   / Check if map is off
82A6 D8 D2 82    / Jump to $82D2 if not             / If map is on
82A9 8E FF 00    / Push #$00FF to metastack           (+2)
82AC 8D 2E       / Push #$002E to metastack           (+2)
82AE 8E 2B 7D    / Push #$7D2B to metastack           (+2)
82B1 E9 23 F4 06 / Run function $F423                 (-6)
82B5 8D 40       / Push #$0040 to metastack           (+2)
82B7 60          / Push #$0000 to metastack           (+2)
82B8 8E 9D A9    / Push #$A99D to metastack           (+2)
82BB 8E E0 00    / Push #$00E0 to metastack           (+2)
82BE 62          / Push #$0002 to metastack           (+2)
82BF E9 79 DD 0A / Run function $DD79                 (-A) Clear first #$40 icons
82C3 AC 0B D0    / Run function $D00B                      Set $9F-$AD to default values 
82C6 60          / Push #$0000 to metastack           (+2)
82C7 8E 18 AC    / Push #$AC18 to metastack           (+2)
82CA 8E E0 00    / Push #$00E0 to metastack           (+2)
82CD 62          / Push #$0002 to metastack           (+2)
82CE E9 79 DD 08 / Run function $DD79                 (-8)
82D2 A5 08 60    / Store $6008 to $0008                    Napoleon's city
82D5 8C FF 00    / Store #$00FF to M8
82D8 C1          / Check if M8!=MC                         Check if not on expedition?
82D9 D8 F4 82    / Jump to $82F4 if not                    Napoleon on expedition?


82DC 8E 68 70    / Push #$7068 to metastack           (+2)\
82DF 8E 05 60    / Push #$6005 to metastack           (+2)\\
82E2 E9 6E C2 02 / Run function $C26E                 (-2)/| Retrieve city address of officer
82E6 B3          / Push M8 to metastack               (+2)\|
82E7 E9 A5 8B 02 / Run function $8BA5                 (-2)/|
82EB B3          / Push M8 to metastack               (+2)\/
82EC E9 E8 8B 04 / Run function $8BE8                 (-4)/
82F0 41          / Store #$01 to M8
82F1 D6 FF 82    / Jump to $82FF


82F4 8E 68 70    / Push #$7068 to metastack           (+2)
82F7 8E 6A 74    / Push #$746A to metastack           (+2)
82FA E9 B8 8B 04 / Run function $8BB8                 (-4)
82FE 40          / Store #$00 to M8
82FF A2 FF FF    / Store $0008 to meta 01

8302 AC 9B 9D    / Run function $9D9B                      Reset each officer's action flag

8305 60          / Push #$0000 to metastack           (+2)
8306 8D 2E       / Push #$002E to metastack           (+2)
8308 8E 31 70    / Push #$7031 to metastack           (+2)
830B E9 23 F4 06 / Run function $F423                 (-6) Clear city used turns
830F 40          / Store #$00 to M8
8310 A9 F1 6F    / Store $0008 to $6FF1                    Initialize city turns
8313 8D 2E       / Push #$002E to metastack           (+2)
8315 8E 02 70    / Push #$7002 to metastack           (+2)
8318 E9 A4 90 04 / Run function $90A4                 (-4) Randomize city turn order
831C A5 EC 6F    / Store $6FEC to $0008                    Settings
831F 8C 80 00    / Store #$0080 to MC
8322 DA          / MC AND M8                               Check for autoplay flag
8323 50          / Store #$00 to MC
8324 C1          / Check if M8 != MC                       Check if autoplay is on
8325 D8 30 83    / Jump to $8330 if not                    Autoplay off
8328 61          / Push #$0001 to metastack           (+2)
8329 E9 E4 CD 02 / Run function $CDE4                 (-2)
832D D6 DC 83    / Jump to $83DC 
8330 AC 27 CE    / Run function $CE27                      Check BGM to play
8333 D8 47 83    / Jump to $8347 if M8=#$00
8336 A5 5A 7B    / Store $7B5A to $0008                    ???
8339 59          / Store #$09 to MC
833A C9          / Check if M8 ≥ MC
833B D8 DC 83    / Jump to $83DC if not
833E A5 5A 7B    / Store $7B5A to $0008
8341 8B 17       / Store #$17 to MC
8343 C1          / Check if M8 != MC
8344 D8 DC 83    / Jump to $83DC if M8=MC
8347 A0 FF FF    / Store meta 01 to $0008
834A D8 28 83    / Jump to $8328 if M8=#$00
834D 8E 05 60    / Push #$6005 to metastack         (+2)
8350 E9 6E C2 02 / Run function $C26E               (-2) Retrieve city address of officer
8354 B3          / Push M8 to metastack             (+2)
8355 E9 8D 8B 02 / Run function $8B8D               (-2)
8359 D6 DC 83    / Jump to $83DC


835C AC 5F CF    / Run function $5FCF
835F A5 F1 6F    / Store $6FF1 to $0008                  City turn #
8362 8C 02 70    / Store #$7002 to MC
8365 BB          / Add MC to M8
8366 D3          / Replace M8 with 1-byte value          City whose turn it is
8367 8B 1C       / Store #$1C to MC
8369 B5          / Multiply M8 by MC
836A 8C 76 71    / Store #$7176 to $0008
836D BB          / Add MC to M8                          Retrieve base address
836E A8 D1 7C    / Store M8 to $7CD1/$7CD2               Set as active city
8371 A4 D1 7C    / Store $7CD1/$7CD2 to M8
8374 72          / Add #$02 to M8
8375 B0          / Replace M8 with 2-byte address        Commander address
8376 50          / Store #$00 to MC
8377 C0          / Check if M8=MC
8378 D7 D5 83    / Jump to $83D5 if it does               If city is deserted

837B A4 D1 7C    / Store $7CD1/$7CD2 to M8                Active city 
837E 72          / Add #$02 to M8
837F B0          / Replace M8 with 2-byte address         Commander address
8380 B3          / Push M8 to metastack              (+2)
8381 8E 9C A3    / Push #$A39C to metastack          (+2)
8384 8E E0 00    / Push #$00E0 to metastack          (+2)
8387 62          / Push #$0002 to metastack          (+2)
8388 E9 79 DD 08 / Run function $DD79                (-8) Check if commander is player-controlled
838C D8 95 83    / Jump to $8395 if M8=#$00
838F AC C0 80    / Run function $C080                     Wait for player to finish turn
8392 D6 B6 83    / Jump to $83B6

8395 AA D1 7C    / Push $7CD1/$7CD2 to metastack     (+2) Active city
8398 E9 4F D0 02 / Run function $D04F                (-2) Retrieve name of city
839C B3          / Push M8 to metastack              (+2)
839D A4 D1 7C    / Store $7CD1/$7CD2 to M8           
83A0 8C 76 71    / Store #$7176 to MC
83A3 BC          / Subtract MC from M8
83A4 8B 1C       / Store #$1C to MC
83A6 B8          / Divide M8 by MC                        
83A7 D0          / Increment M8                           Get city #
83A8 B3          / Push M8 to metastack              (+2)
83A9 8E F2 9E    / Push #$9EF2 to metastack          (+2)
83AC E9 27 C6 06 / Run function $C627                (-6) Print "City strategy (#):(City)"
83B0 8D 1A       / Push #$001A to metastack          (+2)

83B2 E9 03 80 02 / Run function $8003                (-2) Screen value 00, PRG Bank 1 = E8
83B6 A5 EB 6F    / Store $6FEB to $0008                   Game state
83B9 51          / Store #$01 to MC                       Flagged 1 if going to battle
83BA C0          / Check if M8=MC        
83BB D8 C8 83    / Jump to $83C8 if not
83BE 40          / Store #$00 to M8
83BF A9 EB 6F    / Store $0008 to $6FEB
83C2 8D 19       / Push #$0019 to metastack          (+2)
83C4 E9 03 80 02 / Run function $8003                (-2) Screen value 00, PRG Bank 1 = E7

83C8 AC 73 9D    / Run function $9D73                     Check if France has won the game
83CB A5 EB 6F    / Store $6FEB to $0008
83CE D8 D5 83    / Jump to $83D5 if M8=#$00
83D1 AC 5F CF    / Run function $CF5F
83D4 CF          / Exit 

83D5 A5 F1 6F    / Store $6FF1 to $0008
83D8 D0          / Increment M8
83D9 A9 F1 6F    / Store $0008 to $6FF1                  Increment city turn counter
83DC A5 F1 6F    / Store $6FF1 to $0008
83DF 8B 2E       / Store #$2E to MC
83E1 C6          / Check if M8 < MC
83E2 D7 5C 83    / Jump to $835C if it does
83E5 AC 5F CF    / Run function $CF5F
83E8 60          / Push #$00 to metastack           (+2)
83E9 E9 7F D2 02 / Run function $D27F               (-2)
83ED CF          / Exit 

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
83E0                                           20 09
83F0 E5 00 00 A5 E8 6F 53 BA D7 FE 83 AC 47 81 AC 7E
8400 82 CF

FUNCTION $83EE (00 00) $83F3-$8401
Main page function

83F3 A5 E8 6F    / Store month to $0008
83F6 53          / Store #$03 to MC
83F7 BA          / Month mod 3
83F8 D7 FE 83    / Jump to $83FE if positive         Run 1st function if Month is 3 6 9 or 12 (new quarter)
83FB AC 47 81    / Run function $8147
83FE AC 7E 82    / Run function $827E                City phase main loop
8401 CF          / Exit
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8400       20 09 E5 FF FF A5 A0 76 A2 FF FF 43 A9 A0
8410 76 8E E5 00 62 62 E9 1E EF 06 A0 FF FF A9 A0 76
8420 CF

FUNCTION $8402 (FF FF) $8407-$8420

8407 A5 A0 76    / Store $76A0 to $0008              / Menu/Screen
840A A2 FF FF    / Store $0008 to meta 01
840D 43          / Store #$03 to M8
840E A9 A0 76    / Store $0008 to $76A0              / Set Menu/Screen to #$03
8411 8E E5 00    / Push #$E5 to metastack            / (+2)
8414 62          / Push #$02 to metastack            / (+2)
8415 62          / Push #$02 to metastack            / (+2)
8416 E9 1E EF 06 / Run function $EF1E                / (-6) Run Page E5, Section 3
841A A0 FF FF    / Store meta 01 to $0008 
841D A9 A0 76    / Store $0008 to $76A0              / Restore original value
8420 CF          / Exit 

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8420    20 09 E5 FE FF 62 64 E9 1E EF 04 2B 8E F8 00
8430 62 63 E9 1E EF 06 A0 0B 00 D2 8C 2C B8 BB B0 B3
8440 8E A4 76 E9 0A C1 04 3B 62 63 E9 1E EF 06 60 E9
8450 7F D2 02 8E A4 76 8E 1A 9F E9 27 C6 04 CF

FUNCTION $8421 (FE FF) $8426-$845C
Store text string (01) from Page F8 Table $B82C to $76A4

8426 62          / Push #$0002 to metastack          / (+2)
8427 64          / Push #$0004 to metastack          / (+2)
8428 E9 1E EF 04 / Run function $EF1E                / (-4) Store setting of PRG Bank 1
842C 2B          / Store M8 to meta 01/02
842D 8E F8 00    / Push #$00F8 to metastack          / (+2)
8430 62          / Push #$0002 to metastack          / (+2)
8431 63          / Push #$0003 to metastack          / (+2)
8432 E9 1E EF 06 / Run function $EF1E                / (-6) Set PRG Bank 1 to #$F8
8436 A0 0B 00    / Store preloaded 01 to $0008
8439 D2          / Double M8
843A 8C 2C B8    / Store #$B82C to MC
843D BB          / Add MC to M8
843E B0          / Replace M8 with 2-byte value
843F B3          / Push M8 to metastack              / (+2)
8440 8E A4 76    / Push #$76A4 to metastack          / (+2)
8443 E9 0A C1 04 / Run function $C10A                / (-4) Transfer text string
8447 3B          / Push meta 01/02 to metastack      / (+2)
8448 62          / Push #$0002 to metastack          / (+2)
8449 63          / Push #$0003 to metastack          / (+2)
844A E9 1E EF 06 / Run function $EF1E                / (-4) Restore PRG Bank 1 to original setting
844E 60          / Push #$0000 to metastack          / (+2)
844F E9 7F D2 02 / Run function $D27F                / (-2) Screen setting #00
8453 8E A4 76    / Push #$76A4 to metatsack          / (+2)
8456 8E 1A 9F    / Push #$9F1A to metastack          / (+2)
8459 E9 27 C6 04 / Run function $C627                / (-4)
845D CF          / Exit  

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8570             20 09 E5 00 00 0C A8 94 78 40 A8 96
8580 78 AC 02 84 CF

FUNCTION $8574 (00 00) $8579-$8584

8579 0C          / Store preloaded 01/02 to M8
857A A8 94 78    / Store M8 to $7894/$7895
857D 40          / Store #$00 to M8
857E A8 96 78    / Store M8 to $7896/$7897
8581 AC 02 84    / Run function $8402
8584 CF          / Exit

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8580 	            20 09 E5 00 00 0C A8 94 78 A0 0D
8590 00 A9 98 78 41 A8 96 78 AC 02 84 CF

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8590 	                                 20 09 E5 00
85A0 00 A5 59 7B 8C FF 00 C1 D8 E3 85 8E FF 00 8D 2E
85B0 8E 2B 7D E9 23 F4 06 8D 40 60 8E 9D A9 8E E0 00
85C0 62 E9 79 DD 0A 60 60 6C 8D 1C 65 62 68 E9 1E EF
85D0 0E 62 8E 18 AC 8E E0 00 62 E9 79 DD 08 8A FF 00
85E0 A9 59 7B 8A FF 00 A9 59 7B 8E 27 AB 8E E0 00 62
85F0 E9 79 DD 06 3C E9 D2 C2 02 B3 E9 06 85 02 3C E9
8600 74 85 02 CF

FUNCTION $859C (00 00) $85A1-$8603

85A1 A5 59 7B    / Store $7B59 to $0008
85A4 8C FF 00    / Store #$00FF to MC
85A7 C1          / Check if M8 is different than MC
85A8 D8 E3 85    / Jump to $85E3 if not

85AB 8E FF 00    / Push #$00FF to metastack          / (+2)
85AE 8D 2E       / Push #$2E to metastack            / (+2)
85B0 8E 2B 7D    / Push #$7D2B to metastack          / (+2)
85B3 E9 23 F4 06 / Run function $F423                / (-6) Blank out icon data

85B7 8D 40       / Push #$40 to metastack            / (+2)
85B9 60          / Push #$00 to metastack            / (+2)
85BA 8E 9D A9    / Push #$A99D to metastack          / (+2)
85BD 8E E0 00    / Push #$00E0 to metastack          / (+2)
85C0 62          / Push #$02 to metastack            / (+2)
85C1 E9 79 DD 0A / Run function $DD79                / (-A) Mirror icon data to graphics???

85C5 60          / Push #$00 to metastack            / (+2)
85C6 60          / Push #$00 to metastack            / (+2)
85C7 6C          / Push #$0C to metastack            / (+2)
85C8 8D 1C       / Push #$1C to metastack            / (+2)
85CA 65          / Push #$05 to metastack            / (+2)
85CB 62          / Push #$02 to metastack            / (+2)
85CC 68          / Push #$08 to metastack            / (+2)
85CD E9 1E EF 0E / Run function $EF1E                / (-E)

85D1 62          / Push #$02 to metastack            / (+2)
85D2 8E 18 AC    / Push #$AC18 to metastack          / (+2)
85D5 8E E0 00    / Push #$00E0 to metastack          / (+2)
85D8 62          / Push #$02 to metastack            / (+2)
85D9 E9 79 DD 08 / Run function $DD79                / (-8)

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
85D0 0E 62 8E 18 AC 8E E0 00 62 E9 79 DD 08 8A FF 00
85E0 A9 59 7B 8A FF 00 A9 59 7B 8E 27 AB 8E E0 00 62
85F0 E9 79 DD 06 3C E9 D2 C2 02 B3 E9 06 85 02 3C E9
8600 74 85 02 CF

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8600             20 09 E5 00 00 3C E9 9C 85 02 A0 0D
8610 00 B3 3C E9 85 85 04 CF

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8610                         20 09 E5 00 00 0C A8 9A	
8620 78 A0 0D 00 A9 98 78 42 A8 96 78 AC 02 84 CF

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8620                                              20
8630 09 E5 00 00 0C A8 9A 78 43 A8 96 78 AC 02 84 CF

FUNCTION $862F (00 00) $8634-$863F

8634 0C          / Store preloaded 01/02 to M8
8635 A8 9A 78    / Store M8 to $789A/$789B
8638 43          / Store #$03 to M8
8639 A8 96 78    / Store M8 to $7896/$7897
863C AC 02 84    / Run function $8402             
863F CF          / Exit

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8640 20 09 E5 00 00 A5 59 7B 8C FF 00 C1 D8 88 86 8E
8650 FF 00 8D 2E 8E 2B 7D E9 23 F4 06 8D 40 60 8E 9D
8660 A9 8E E0 00 62 E9 79 DD 0A 60 60 8D 16 8D 1C 65
8670 62 68 E9 1E EF 0E 61 8E 18 AC 8E E0 00 62 E9 79
8680 DD 08 8A FF 00 A9 59 7B 8E 27 AB 8E E0 00 62 E9
8690 79 DD 06 3C E9 06 85 02 A0 0D 00 B3 3C E9 18 86
86A0 04 CF	 

FUNCTION $8640 (00 00) $8645-$86A1

8645 A5 59 7B    / Store $7B59 to $0008              / Map status
8648 8C FF 00    / Store #$FF to MC
864B C1          / Check if M8 is different than MC  / Check if map is visible
864C D8 88 86    / Jump to $8688 if not

864F 8E FF 00    / Push #$FF to metastack            / (+2)
8652 8D 2E       / Push #$2E to metastack            / (+2)
8654 8E 2B 7D    / Push #$7D2B to metastack          / (+2)
8657 E9 23 F4 06 / Run function $F423                / (-6) Blank out icon list

865B 8D 40       / Push #$40 to metastack            / (+2)
865D 60          / Push #$00 to metastack            / (+2)
865E 8E 9D A9    / Push #$A99D to metastack          / (+2)
8661 8E E0 00    / Push #$E0 to metastack            / (+2)
8664 62          / Push #$02 to metastack            / (+2)
8665 E9 79 DD 0A / Run function $DD79                / (-A) Mirron icon data to graphics?

8669 60          / Push #$00 to metastack            / (+2)
866A 60          / Push #$00 to metastack            / (+2)
866B 8D 16       / Push #$16 to metastack            / (+2)
866D 8D 1C       / Push #$1C to metastack            / (+2)
866F 65          / Push #$05 to metastack            / (+2)
8670 62          / Push #$02 to metastack            / (+2)
8671 68          / Push #$08 to metastack            / (+2)
8672 E9 1E EF 0E / Run function $EF1E                / (-E)

8676 61          / Push #$01 to metastack            / (+2)
8677 8E 18 AC    / Push #$AC18 to metastack          / (+2)
867A 8E E0 00    / Push #$E0 to metastack            / (+2)
867D 62          / Push #$02 to metastack            / (+2)
867E E9 79 DD 08 / Run function $DD79                / (-8) Operation Code #$01

8682 8A FF 00    / Store #$FF to M8
8685 A9 59 7B    / Store $0008 to $7B59              /      Turn off map 

8688 8E 27 AB    / Push #$AB27 to metastack          / (+2) Print Month/Year
868B 8E E0 00    / Push #$E0 to metastack            / (+2)
868E 62          / Push #$02 to metastack            / (+2)
868F E9 79 DD 06 / Run function $DD79                / (-6)

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8680 DD 08 8A FF 00 A9 59 7B 8E 27 AB 8E E0 00 62 E9
8690 79 DD 06 3C E9 06 85 02 A0 0D 00 B3 3C E9 18 86
86A0 04 CF	 
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
86A0       20 09 E5 00 00 A0 0D 00 B3 3C E9 40 86 04
86B0 3C E9 2F 86 02 CF

FUNCTION $86A2 (00 00) $86A7-$86B5

86A7 A0 0D 00    / Store preloaded 03 to $0008        
86AA B3          / Push M8 to metastack              / (+2) Operation Code?
86AB 3C          / Push preloaded 01/02 to metastack / (+2) Nation 
86AC E9 40 86 04 / Run function $8640                / (-4)
86B0 3C          / Push preloaded 01/02 to metastack / (+2) Nation
86B1 E9 2F 86 02 / Run function $862F                / (-2)
86B5 CF          / Exit 
	 
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
86B0                   20 09 E5 00 00 3C 8D 14 8D 16
86C0 8E 3A A0 8E E0 00 62 E9 79 DD 0C CF

FUNCTION $86B6 (00 00) $86BB-$86CB
Load graphic (1) to tile coordinates 16,14

86BB 3C          / Push preloaded 01/02 to metastack / (+2)
86BC 8D 14       / Push #$0014 to metastack          / (+2)
86BE 8D 16       / Push #$0016 to metastack          / (+2)
86C0 8E 3A A0    / Push #$A03A to metastack          / (+2)
86C3 8E E0 00    / Push #$00E0 to metastack          / (+2)
86C6 62          / Push #$0002 to metastack          / (+2)
86C7 E9 79 DD 0C / Run function $DD79                / (-C)
86CB CF          / Exit

====================================================

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8790                                     20 09 E5 00
87A0 00 67 E9 7F D2 02 0C 8F 23 B3 E9 5B 8C 02 B3 E9
87B0 F5 C3 02 CF

FUNCTION $879C (00 00) $87A1-$87B3
87A1 67          / Push #$0007 to metastack (+2)
87A2 E9 7F D2 02 / Run function $D27F       (-2)
87A6 0C          / Store meta 01/02 to M8   (+2)
87A7 8F 23       / Add #$23 to M8
87A9 B3          / Push M8 to metastack     (+2) 23+MAP INFO?
87AA E9 5B 8C 02 / Run function $8C5B       (-2)
87AE B3          / Push M8 to metastack     (+2)
87AF E9 F5 C3 02 / Run function $C3F5       (-2)
87B3 CF          / Exit                   

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
87B0             20 09 E5 FC FF 3D E9 BE 9D 02 2A 61
87C0 E9 C4 D1 02 3E 8D FF 8E 75 B0 8E E0 00 62 E9 79	 
87D0 DD 0A 3C E9 9C 87 02 3E 8D FF 61 8D FF 3A 8E EE 
87E0 B2 8E E0 00 62 E9 79 DD 10 AC 71 87 2B 60 E9 C4
87F0 D1 02 0B CF

FUNCTION $87B4 (FC FF) $87B9-$87F3
Preloaded 01/02 (08)
          03/04 City
		  05/06 (81)
	 Meta 01/02 
	      03/04 (

87B9 3D          / Push preloaded 03/04 to metastack / (+2)
87BA E9 BE 9D 02 / Run function $9DBE                / (-2) Assemble list of officers in city
87BE 2A          / Store M8 to meta 03/04
87BF 61          / Push #$01 to metastack            / (+2)
87C0 E9 C4 D1 02 / Run function $D4C1                / (-2) Append to list?
87C4 3E

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
87B0             20 09 E5 FC FF 3D E9 BE 9D 02 2A 61
87C0 E9 C4 D1 02 3E 8D FF 8E 75 B0 8E E0 00 62 E9 79	 
87D0 DD 0A 3C E9 9C 87 02 3E 8D FF 61 8D FF 3A 8E EE 
87E0 B2 8E E0 00 62 E9 79 DD 10 AC 71 87 2B 60 E9 C4
87F0 D1 02 0B CF
	 
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8A10                               20 09 E5 00 00 8E
8A20 26 9F E9 E9 C3 02 63 E9 62 C0 02 CF

FUNCTION $8A1A (00 00) $8A1F-$8A2B

8A1F 8E 26 9F    / Push #$9F26 to metastack
8A22 E9 E9 C3 02 / Print #$9F26                     "More will have no effect"
8A26 63          / Push #$03 to metastack
8A27 E9 62 C0 02 / Wait 3 time units for input
8A2B CF          / Exit

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8A20                                     20 09 E5 00
8A30 00 A0 0B 00 8F 2E B3 E9 5B 8C 02 B3 8E 3F 9F E9
8A40 27 C6 04 63 E9 62 C0 02 CF

FUNCTION $8A2C (00 00) $8A31-$8A48

Prints a message saying "No [x]", where [x] is entry # (01/02) in Page F8 Table 3

8A31 A0 0B 00    / Store preloaded 01 to $0008
8A34 8F 2E       / Add #$2E to M8
8A36 B3          / Push M8 to metastack             (+2)
8A37 E9 5B 8C 02 / Run function $8C5B               (-2) 2E+input from page F8
8A3B B3          / Push M8 to metastack             (+2)
8A3C 8E 3F 9F    / Push #$9F3F to metastack         (+2)
8A3F E9 27 C6 04 / Run function $C627               (-4) Print "No [x]"
8A43 63          / Push #$0003 to metastack         (+2)
8A44 E9 62 C0 02 / Run function $C062               (-2) Wait 3 time units for player input, then advance automatically
8A48 CF          / Exit  
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8A80                               20 09 E5 FF FF 0C
8A90 7A D3 D8 99 8A 41 D6 9A 8A 40 A2 FF FF 0C 7B D3
8AA0 D8 AC 8A 42 CD A0 FF FF DB A2 FF FF 3C E9 6E C2
8AB0 02 A6 D3 7C C1 D8 D1 8A 3C E9 6E C2 02 A6 D1 7C
8AC0 C0 D8 C8 8A 44 D6 C9 8A 48 CD A0 FF FF DB A2 FF
8AD0 FF 0D 74 B3 A0 FF FF D4 3D 40 B1 0D 72 B3 0C B1
8AE0 CF

FUNCTION $8A8A (FF FF) $8A8F-$8AE0
Preloaded 01/02 = Officer

8A8F 0C          / Store preloaded 01/02 to M8       / Officer
8A90 7A          / Add #$0A to M8                    / 
8A91 D3          / Replace M8 with 1-byte value      / Horses
8A92 D8 99 8A    / Jump to $8A99 if zero

8A95 41          / Store #$01 to M8
8A96 D6 9A 8A    / Jump to $8A9A

8A99 40          / Store #$00 to M8

8A9A A2 FF FF    / Store $0008 to meta 1

8A9D 0C          / Store preloaded 01/02 to M8       / Officer
8A9E 7B          / Add #$0B to M8                    /
8A9F D3          / Replace M8 with 1-byte value      / Cannons
8AA0 D8 AC 8A    / Jump to $8AAC if zero

8AA3 42          / Store #$02 to M8
8AA4 CD          / Swap M8 and MC
8AA5 A0 FF FF    / Store meta 1 to $0008
8AA8 DB          / M8 ORA MC
8AA9 A2 FF FF    / Store $0008 to meta 1

8AAC 3C          / Push preloaded 01/02 to metastack / (+2)
8AAD E9 6E C2 02 / Run function $C26E                / (-2) Retrieve city address of officer

8AB1 A6 D3 7C    / Store $7CD3/$7CD4 to MC           /      Target city
8AB4 C1          / Check if M8 != MC
8AB5 D8 D1 8A    / Jump to $8AD1 if not

8AB8 3C          / Push preloaded 01/02 to metastack / (+2)
8AB9 E9 6E C2 02 / Run function $C26E                / (-2) Retrieve city address of officer

8ABD A6 D1 7C    / Store $7CD1/$7CD2 to MC
8AC0 C0          / Check if M8=MC
8AC1 D8 C8 8A    / Jump to $8AC8 if not

8AC4 44          / Store #$04 to M8
8AC5 D6 C9 8A    / Jump to $8AC9

8AC8 48          / Store #$08 to M8

8AC9 CD          / Swap MC and M8
8ACA A0 FF FF    / Store meta 1 to $0008
8ACD DB          / M8 ORA MC
8ACE A2 FF FF    / Store $0008 to meta 1 

8AD1 0D          / Store preloaded 03/04 to M8
8AD2 74          / Add #$04 to M8
8AD3 B3          / Push M8 to metastack              / (+2)
8AD4 A0 FF FF    / Store meta 1 to $0008
8AD7 D4          / Pull 2 meta, store M8 to it       / (-2)
8AD8 3D          / Push preloaded 03/04 to metastack / (+2)
8AD9 40          / Store #$00 to M8
8ADA B1          / Pull 2 meta, store 2-byte to it   / (-2)

8ADB 0D          / Store preloaded 03/04 to M8
8ADC 72          / Add #$02 to M8
8ADD B3          / Push M8 to metastack              / (+2)
8ADE 0C          / Store preloaded 01/02 to M8
8ADF B1          / Pull 2 meta, store 2-byte to it   / (-2)

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8AE0    20 09 E5 00 00 3D 40 B1 0D 72 B3 40 B1 0D 74
8AF0 B3 0C 74 D3 D4 0D 75 B3 0C 8C 76 71 BC 8B 1C B8
8B00 D4 0D 78 B3 0C 8F 10 B0 B1 0D 77 B3 0C 8F 1A D3
8B10 D4 CF

FUNCTION $8AE1 (00 00) $8AE6-$8B11

Populates Defender Stats for battle

Preloaded 01/02 CITY
          03/04 ADDRESS OF LIST

8AE6 3D          / Push preloaded 03/04 to metastack (+2)
8AE7 40          / Store #$0000 to M8
8AE8 B1          / Pull 2 meta, store M8 to it       (-2)
8AE9 0D          / Store preloaded 03/04 to M8
8AEA 72          / Add #$02 to M8
8AEB B3          / Push M8 to metastack              (+2)
8AEC 40          / Store #$0000 to M8
8AED B1          / Pull 2 meta, store M8 to it       (-2)
8AEE 0D          / Store preloaded 03/04 to M8
8AEF 74          / Add #$04 to M8
8AF0 B3          / Push M8 to metastack              (+2)
8AF1 0C          / Store preloaded 01/02 to M8
8AF2 74          / Add #$04 to M8
8AF3 D3          / Replace M8 with 1-byte value           City Nation
8AF4 D4          / Pull 2 meta, store $0008 to it    (-2)
8AF5 0D          / Store preloaded 03/04 to M8
8AF6 75          / Add #$05 to M8
8AF7 B3          / Push M8 to metastack              (+2)
8AF8 0C          / Store preloaded 01/02 to M8
8AF9 8C 76 71    / Store #$7176 to MC
8AFC BC          / Subtract MC from M8
8AFD 8B 1C       / Store #$1C to MC
8AFF B8          / Divide M8 by MC
8B00 D4          / Pull 2 meta, store $0008 to it    (-2)
8B01 0D          / Store preloaded 03/04 to M8
8B02 78          / Add #$08 to M8
8B03 B3          / Push M8 to metastack              (+2)
8B04 0C          / Store preloaded 01/02 to M8
8B05 8F 10       / Add #$10 to M8
8B07 B0          / Replace M8 with 2-byte value           Food
8B08 B1          / Pull 2 meta, store M8 to it       (-2)
8B09 0D          / Store preloaded 03/04 to M8
8B0A 77          / Add #$07 to M8 
8B0B B3          / Push M8 to metastack              (+2)
8B0C 0C          / Store preloaded 01/02 to M8
8B0D 8F 1A       / Add #$1A to M8
8B0F D3          / Replace M8 with 1-byte value
8B10 D4          / Pull 2 meta, store $0008 to it    (-2) Fleet

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8B10       20 09 E5 F8 FF A0 0B 00 5D B5 8C A2 7B BB
8B20 2B 0B 72 B3 40 B1 3B 40 B1 0B 76 B3 40 D4 A0 0B
8B30 00 B3 E9 0B C3 02 2A 0A 72 B0 28 D7 3F 8B CF 6F
8B40 08 7E D3 B3 E9 60 D4 04 54 C0 D7 5F 8B A0 0B 00
8B50 52 C1 D8 5F 8B 8E 80 00 0A 74 B4 B3 D3 DB D4 40
8B60 29 D6 85 8B 08 79 D3 D8 70 8B 0B 76 B3 D3 D0 D4
8B70 09 D7 7A 8B 0B 72 B3 D6 7B 8B 39 0A B1 3A 40 B1
8B80 0A 29 0A 78 2A 0A 72 B0 28 D7 64 8B CF

FUNCTION $8B12 (F8 FF) $8B17-$8B8C 
Loads officer list (1)

8B17 A0 0B 00    / Store preloaded 01/02 to M8
8B1A 5D          / Store #$0D to MC
8B1B B5          / Multiply M8 by MC
8B1C 8C A2 7B    / Store #$7BA2 to MC
8B1F BB          / Add MC to M8
8B20 2B          / Store M8 to meta 01/02

8B21 0B          / Store meta 01/02 to M8
8B22 72          / Add #$02 to M8
8B23 B3          / Push M8 to metastack             (+2)
8B24 40          / Store #$00 to M8
8B25 B1          / Pull 2 meta, store 2-byte M8     (-2) Blank 02/03
8B26 3B          / Push meta 01/02 to metastack     (+2)
8B27 40          / Store #$00 to M8
8B28 B1          / Pull 2 meta, store 2-byte M8     (-2) Blank 00/01 

8B29 0B          / Store meta 01/02 to M8
8B2A 76          / Add #$06 to M8
8B2B B3          / Push M8 to metastack             (+2)
8B2C 40          / Store #$00 to M8
8B2D D4          / Pull 2 meta, store 1-byte $0008  (-2) Blank 06

8B2E A0 0B 00    / Store preloaded 01/02 to M8
8B31 B3          / Push M8 to metastack             (+2)
8B32 E9 0B C3 02 / Run function $C30B               (-2) Retrieve officer list #(01)

8B36 2A          / Store M8 to meta 03/04
8B37 0A          / Store meta 03/04 to M8
8B38 72          / Add #$02 to M8
8B39 B0          / Replace M8 with 2-byte address
8B3A 28          / Store M8 to meta 07/08
8B3B D7 3F 8B    / Jump to $8B3F if positive             if it's not empty
8B3E CF          / Exit
8B3F 6F          / Push #$0F to metastack           (+2)
8B40 08          / Store meta 07/08 to M8
8B41 7E          / Add #$0E to M8
8B42 D3          / Replace M8 with 1-byte value          Officer status
8B43 B3          / Push M8 to metastack             (+2)
8B44 E9 60 D4 04 / Run function $D460               (-2) Keep 4 lesser bytes of status (alive/dead + rank?)
8B48 54          / Store #$04 to MC
8B49 C0          / Check if M8=MC                        Check if officer is dead
8B4A D7 5F 8B    / Jump to $8B5F if so
8B4D A0 0B 00    / Store preloaded 01/02 to M8
8B50 52          / Store #$02 to MC
8B51 C1          / Check if M8 != MC
8B52 D8 5F 8B    / Jump to $8B5F if it does
8B55 8E 80 00    / Push #$0080 to metastack         (+2)
8B58 0A          / Store meta 03/04 to M8
8B59 74          / Add #$04 to M8
8B5A B4          / Pull 2 values from meta to MC    (-2)
8B5B B3          / Push M8 to metastack             (+2)
8B5C D3          / Replace M8 with 1-byte value
8B5D DB          / MC ORA M8                        Set bit 1
8B5E D4          / Pull 2 meta, store $0008 to it   (-2)
8B5F 40          / Store #$00 to M8
8B60 29          / Store M8 to meta 05/06
8B61 D6 85 8B    / Jump to $8B85
8B64 08          / Store meta 07/08 to M8               Officer
8B65 79          / Add #$09 to M8                       Men
8B66 D3          / Replace M8 with 1-byte value
8B67 D8 70 8B    / Jump to $8B70 if empty
8B6A 0B          / Store meta 01/02 to M8
8B6B 76          / Add #$06 to M8
8B6C B3          / Push M8 to metastack            (+2)
8B6D D3          / Replace M8 with 1-byte value
8B6E D0          / Increment
8B6F D4          / Pull 2 meta, store $0008 to it  (-2)
8B70 09          / Store meta 05/06 to M8
8B71 D7 7A 8B    / Jump to $8B7A if positive
8B74 0B          / Store meta 01/02 to M8
8B75 72          / Add #$02 to M8
8B76 B3          / Push M8 to metastack            (+2)
8B77 D6 7B 8B    / Jump to $8B7B
8B7A 39          / Push meta 05/06 to metastack    (+2)
8B7B 0A          / Store meta 03/04 to M8
8B7C B1          / Pull 2 meta, store 2-byte M8    (-2)
8B7D 3A          / Push meta 03/04 to metastack    (+2)
8B7E 40          / Store #$00 to M8
8B7F B1          / Pull 2 meta, store 2-byte M8    (-2)
8B80 0A          / Store meta 03/04 to M8
8B81 29          / Store M8 to meta 05/06
8B82 0A          / Store meta 03/04 to M8
8B83 78          / Add #$08 to M8
8B84 2A          / Store M8 to meta 03/04
8B85 0A          / Store meta 03/04 to M8
8B86 72          / Add #$02 to M8
8B87 B0          / Replace M8 with 2-byte address
8B88 28          / Store M8 to meta 07/08
8B89 D7 64 8B    / Jump to $8B64 if positive
8B8C CF          / Exit

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8B80                                        20 09 E5
8B90 00 00 0C 8C 76 71 BC 8B 1C B8 8C 71 9F BB D3 B3
8BA0 E9 E4 CD 02 CF 

FUNCTION $8B8D (00 00) $8B92-$8BA4
Play the proper BGM track for City (1/2).

8B92 0C          / Store preloaded 01/02 to M8
8B93 8C 76 71    / Store #$7176 to MC
8B96 BC          / Subtract MC from M8
8B97 8B 1C       / Store #$1C to MC
8B99 B8          / Divide M8 by MC
8B9A 8C 71 9F    / Store #$9F71 to MC
8B9D BB          / Add M8 to MC
8B9E D3          / Replace M8 with 1-byte value      /      Get city BGM
8B9F B3          / Push M8 to metastack              / (+2)
8BA0 E9 E4 CD 02 / Run function $CDE4                / (-2) Play BGM
8BA4 CF          / Exit

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8BA0                20 09 E5 00 00 0C 8C 76 71 BC 8B
8BB0 1C B8 8C 9F 9F BB D3 CF 
	 
FUNCTION $8BA5 (00 00) $8BAA-$8BB7
Identify map location of city

8BAA 0C          / Store preloaded 01/02 to M8      / City address
8BAB 8C 76 71    / Store #$7176 to MC               
8BAE BC          / Subtract MC from M8
8BAF 8B 1C       / Store #$1C to MC                 / Convert address
8BB1 B8          / Divide M8 by MC                  / to city #
8BB2 8C 9F 9F    / Store #$9F9F to MC               
8BB5 BB          / Add MC to M8                     / Get city's map location
8BB6 D3          / Replace M8 with 1-byte value     / from data table
8BB7 CF          / Exit

====================================================
FUNCTION $8BB8
Center map on city (1/2) and change banner to nation (3/4)

====================================================
FUNCTION $8BEE (FE FF) $8BF3-$8C49
Preloaded values (03)(04) hex # of text string  4B
                 (01)(02) page # of text string F7
8BF3 62          / Push #$0002 to metastack          (+2)
8BF4 64          / Push #$0004 to metastack          (+2)
8BF5 E9 1E EF 04 / Run function $EF1E                (-4)
8BF9 2B          / Store M8 to meta 01/02
8BFA 3C          / Push preloaded 01/02 to metastack (+2)
8BFB 62          / Push #$0002 to metastack          (+2)
8BFC 63          / Push #$0003 to metastack          (+2)
8BFD E9 1E EF 06 / Run function $EF1E
8C01 0C          / Store preloaded 01/02 to M8
8C02 D5 0C FF    / Add #$FF0C to M8
        06 00    / 6 possible redirects
		44 8C    / Jump to $8C44 if none match      $9FCE (BLANK)
	    3C 8C    / Jump to $8C3C if $0008=#$00 (F4) $A006
		44 8C    / Jump to $8C44 if $0008=#$01 (F5) $9FCE (BLANK)
		44 8C    / Jump to $8C44 if $0008=#$02 (F6) $9FCE (BLANK)
		15 8C    / Jump to $8C15 if $0008=#$03 (F7) $B076
		2C 8C    / Jump to $8C2C if $0008=#$04 (F8) $B076
		34 8C    / Jump to $8C34 if $0008=#$05 (F9) $B076
8C15 0D          / Store preloaded 03/04 to M8
8C16 D2          / Double M8
8C17 8C 76 B0    / Store #$B076 to MC
8C1A BB          / Add MC to M8
8C1B B0          / Replace M8 with 2-byte value
8C1C B3          / Push M8 to metastack             (+2)
8C1D 8E A4 76    / Push #$76A4 to metastack         (+2)
8C20 E9 0A C1 04 / Run function $C10A               (-4) Store text string
8C24 3B          / Push meta 01/02 to metastack        (+2)
8C25 62          / Push #$02 to metastack           (+2)
8C26 63          / Push #$03 to metastack           (+2)
8C27 E9 1E EF 06 / Run function $EF1E               (-6)
8C2B CF          / Exit
8C2C 0D          / Store preloaded 03/04 to M8
8C2D D2          / Double M8
8C2E 8C 76 B0    / Store #$B076 to MC
8C31 D6 1A 8C    / Jump to $8C1A
8C34 0D          / Store preloaded 03/04 to M8
8C35 D2          / Double M8
8C36 8C 76 B0    / Store #$B076 to M8
8C39 D6 1A 8C    / Jump to $8C1A
8C3C 0D          / Store preloaded 03/04 to M8
8C3D D2          / Double M8
8C3E 8C 06 A0    / Store #$A006 to MC
8C41 D6 1A 8C    / Jump to $8C1A
8C44 8E CE 9F    / Push #$9FCE to metastack        (+2) 
8C47 D6 1D 8C    / Jump to $8C1D
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8C40                               20 09 E5 00 00 3C
8C50 8E F7 00 E9 EE 8B 04 8A A4 76 CF

FUNCTION $8C4A (00 00) $8C4F-$8C5A
Retrieve text string (01/02) from page F7

8C4F 3C           / Push preloaded 01/02 to metastack (+2)
8C50 8E F7 00     / Push #$00F7 to metastack          (+2)
8C53 E9 EE 8B 04  / Run function $8BEE                (-4)
8C57 8A A4 76     / Store #$76A4 to M8            
8C5A CF           / Exit

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8C50                                  20 09 E5 00 00
8C60 3C 8E F8 00 E9 EE 8B 04 8A A4 87 CF 

FUNCTION $8C5B (00 00) $8C60-$8C6B
Retrieve text string (01/02) from page F8

8C60 3C           / Push preloaded 01/02 to metastack (+2)
8C61 8E F8 00     / Push #$00F8 to metastack          (+2)
8C64 E9 EE 8B 04  / Run function $8BEE                (-4)
8C68 8A A4 87     / Store #$87A4 to M8
8C6B CF           / Exit

66 E9 5B 8C

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8C60                                     20 09 E5 00
8C70 00 3C 8E F9 00 E9 EE 8B 04 8A A4 76 CF

FUNCTION $8C6C (00 00) $8C71-$8C7C
Retrieve text string (01/02) from page F9 (Table $B076)

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8C70                                        20 09 E5
8C80 00 00 3C 8E F4 00 E9 EE 8B 04 8A A4 76 CF

Retrieve text string (01/02) from page F4
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8C80                                           20 09
8C90 E5 00 00 A0 0B 00 8F 2B B3 E9 4A 8C 02 B3 E9 E9 
8CA0 C3 02 63 E9 62 C0 02 CF

FUNCTION $8C8E (00 00) $8C93-$8CA7
Retrieve text string (01/02) from table 2 of Page F7
???
???

8C93 A0 0B 00    / Store preloaded 01 to $0008
8C96 8F 2B       / Add #$2B to M8
8C98 B3          / Push M8 to metastack        (+2)
8C99 E9 4A 8C 02 / Run function $8C4A          (-2)
8C9D B3          / Push M8 to metastack        (+2)
8C9E E9 E9 C3 02 / Run function $C3E9          (-2)
8CA2 63          / Push #$0003 to metastack    (+2)
8CA3 E9 62 C0 02 / Run function $C062          (-2)
8CA7 CF          / Exit
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8CA0                         20 09 E5 00 00 A0 0B 00
8CB0 8F 49 B3 E9 4A 8C 02 B3 E9 E9 C3 02 63 E9 62 C0
8CC0 02 CF 

62 E9 A8 8C

FUNCTION $8CA8 (00 00) $8CAD-$8CC1
Retrieve text string (01/02) from table 3 of Page F7
???
???

8CAD A0 0B 00    / Store preloaded 01 to $0008
8CB0 8F 49       / Add #$49 to M8
8CB2 B3          / Push M8 to metastack          (+2)
8CB3 E9 4A 8C 02 / Run function $8C4A            (-2)
8CB7 B3          / Push M8 to metastack          (+2)
8CB8 E9 E9 C3 02 / Run function $C3E9            (-2)
8CBC 63          / Push #$0003 to metastack      (+2)
8CBD E9 62 C0 02 / Run function $C062            (-2)
8CC1 CF          / Exit
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 
8CC0       20 09 E5 FF FF 6F 0E 7E D3 B3 E9 60 D4 04
8CD0 A2 FF FF A0 FF FF D5 00 00 08 00 06 8D ED 8C ED
8CE0 8C 06 8D 06 8D 06 8D EE 8C 2B 8D 3B 8D CF 0E 8C
8CF0 05 60 C0 D8 02 8D A5 EA 6F 52 C0 D8 02 8D 46 D6
8D00 03 8D 45 A2 FF FF 8E F3 00 A0 FF FF 8F FE 56 B5
8D10 8C 9E AE BB B3 A0 FF FF 8F FE 56 B5 8C 68 AE BB
8D20 B3 62 63 3D 3C 69 E9 1E EF 10 CF 0E 8C 05 60 C0
8D30 D8 37 8D 48 D6 03 8D 47 D6 03 8D 3E E9 1F C3 02
8D40 D8 47 8D 4A D6 03 8D 49 D6 03 8D

FUNCTION $8CC2 (FF FF) $8CC7-$8D4A
Preloaded 01/02
Preloaded 03/04
Preloaded 05/06 - Officer

8CC7 6F          / Push #$000F to metastack           / (+2)
8CC8 0E          / Push preloaded 05/06 to M8         /
8CC9 7E          / Add #$0E to M8
8CCA D3          / Replace M8 with 1-byte value       /     Officer status
8CCB B3          / Push M8 to metastack               / (+2)
8CCC E9 60 D4 04 / Run function $D460                 / (-4) Isolate 00001111 flags in status
8CD0 A2 FF FF    / Store $0008 to meta 01
8CD3 A0 FF FF    / Store meta 01 to $0008
8CD6 D5 00 00    / Add #$0000 to M8
        08 00    / 8 redirect addresses follow
		06 8D    / Jump to $8D06 if M8 does not match any of the following
		ED 8C    / Jump to $8CED if M8=#$00 0000 / EXIT
		ED 8C    / Jump to $8CED if M8=#$01 0001 / EXIT
		06 8D    / Jump to $8D06 if M8=#$02 0010
        06 8D    / Jump to $8D06 if M8=#$03 0011
		06 8D    / Jump to $8D06 if M8=#$04 0100
		EE 8C    / Jump to $8CEE if M8=#$05 0101
		2B 8D    / Jump to $8D2B if M8=#$06 0110
		3B 8D    / Jump to $8D3B if M8=#$07 0111
8CED CF          / Exit
------------------------------------------------------
8CEE 0E          / Store preloaded 05/06 to M8    
8CEF 8C 05 60    / Store #$6005 to MC
8CF2 C0          / Check if M8=MC                    / Check if officer is Napoleon
8CF3 D8 02 8D    / Jump to $8D02 if not

8CF6 A5 EA 6F    / Store $6FEA to $0008              / Scenario
8CF9 52          / Store #$02 to MC
8CFA C0          / Check if M8=MC                    / Check if Scenario is 2
8CFB D8 02 8D    / Jump to $8D02 if not

8CFE 46          / Store #$06 to M8
8CFF D6 03 8D    / Jump to $8D03

8D02 45          / Store #$05 to M8
8D03 A2 FF FF    / Store $0008 to meta 01            / 06 if Napoleon+Scenario 2, 05 otherwise
-----------------------------------------------------
8D06 8E F3 00    / Push #$00F3 to metastack          /  (+2)
8D09 A0 FF FF    / Store meta 01 to $0008
8D0C 8F FE       / Add #$FE to M8 (minus 2)
8D0E 56          / Store #$06 to MC
8D0F B5          / Multiply M8 by MC
8D10 8C 9E AE    / Store #$AE9E to MC
8D13 BB          / Add MC to M8
8D14 B3          / Push M8 to metastack              /  (+2)
8D15 A0 FF FF    / Store meta 01 to $0008
8D18 8F FE       / Add #$FE to M8 (minus 2)
8D1A 56          / Store #$06 to MC
8D1B B5          / Multiply M8 by MC
8D1C 8C 68 AE    / Store #$AE68 to MC
8D1F BB          / Add MC to M8
8D20 B3          / Push M8 to metastack              /  (+2)
8D21 62          / Push #$0002 to metastack          /  (+2)
8D22 63          / Push #$0003 to metastack          /  (+2)
8D23 3D          / Push meta 03/04 to metastack      /  (+2)
8D24 3C          / Push meta 01/02 to metastack      /  (+2)
8D25 69          / Push #$0009 to metastack          /  (+2)
8D26 E9 1E EF 10 / Run function $EF1E                / (-10)
8D2A CF          / Exit
-----------------------------------------------------
8D2B 0E          / Store preloaded 05/06 to M8
8D2C 8C 05 60    / Store #$6005 to MC
8D2F C0          / Check if M8=MC
8D30 D8 37 8D    / Jump to $8D37 if not
8D33 48          / Store #$08 to M8
8D34 D6 03 8D    / Jump to $8D03

8D37 47          / Store #$07 to M8
8D38 D6 03 8D    / Jump to $8D03
-----------------------------------------------------
8D3B 3E          / Push preloaded 05/06 to metastack  / (+2)
8D3C E9 1F C3 02 / Run function $C31F                 / (-2)
8D40 D8 47 8D    / Jump to $8D47 if zero

8D43 4A          / Store #$0A to M8
8D44 D6 03 8D    / Jump to $8D03

8D47 49          / Store #$09 to M8
8D48 D6 03 8D    / Jump to $8D03

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8D40                                  20 09 E5 FC FF
8D50 A4 5F 7B 2B A4 61 7B 2A 8D 1E 69 E9 C9 CF 04 8E
8D60 F3 00 8E C2 B3 8E 44 B3 66 8D 15 6A 68 69 E9 1E
8D70 EF 10 6B 69 E9 BC C3 04 3C E9 F5 C3 02 3A 3B E9
8D80 C9 CF 04 CF 

FUNCTION $8D4B (FC FF) $8D50-$8D83
Prints a given text string as an officer quote 

8D50 A4 5F 7B    / Store $7B5F/$7B60 to M8
8D53 2B          / Store M8 to meta 01/02
8D54 A4 61 7B    / Store $7B61/$7B62 to M8
8D57 2A          / Store M8 to meta 03/04
8D58 8D 1E       / Push #$001E to metastack          (+2)
8D5A 69          / Push #$0002 to metastack          (+2)
8D5B E9 C9 CF 04 / Run function $CFC9                (-4)
8D5F 8E F3 00    / Push #$00F3 to metastack          (+2)
8D62 8E C2 B3    / Push #$B3C2 to metastack          (+2)
8D65 8E 44 B3    / Push #$B344 to metastack          (+2)
8D68 66          / Push #$0006 to metastack          (+2)
8D69 8D 15       / Push #$0015 to metastack          (+2)
8D6B 6A          / Push #$000A to metastack          (+2)
8D6C 68          / Push #$0008 to metastack          (+2)
8D6D 69          / Push #$0009 to metastack          (+2)
8D6E E9 1E EF 10 / Run function $EF1E               (-10)
8D72 6B          / Push #$000B to metastack          (+2)
8D73 69          / Push #$0009 to metastack          (+2)
8D74 E9 BC C3 04 / Run function $C3BC                (-4)
8D78 3C          / Push preloaded 01/02 to metastack (+2)
8D79 E9 F5 C3 02 / Run function $C3F5                (-2)
8D7D 3A          / Push meta 03/04 to metastack      (+2)
8D7E 3B          / Push meta 01/02 to metastack      (+2)
8D7F E9 C9 CF 04 / Run function $CFC9                (-4)
8D83 CF          / Exit 

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8D80             20 09 E5 00 00 8E FF 00 E9 6F CF 02
8D90 A0 0D 00 D8 C8 8D 60 E9 41 CF 02 61 60 63 E9 1E
8DA0 EF 06 8E FF 00 3C 60 8D 1E 8D 20 60 60 69 E9 1E
8DB0 EF 10 65 60 63 E9 1E EF 06 8D 40 60 8E 59 7D 6D
8DC0 E9 1E EF 08 60 D6 EC 8D 61 E9 41 CF 02 61 60 63
8DD0 E9 1E EF 06 8E FF 00 3C 60 8D 1E 8D 20 60 60 69
8DE0 E9 1E EF 10 65 60 63 E9 1E EF 06 61 E9 6F CF 02
8DF0 CF

FUNCTION $8D84 (00 00) $8D89-$8DF0

8D89 8E FF 00    / Push #$00FF to metastack          / (+2)
8D8C E9 6F CF 02 / Run function $CF6F                / (-2) Black out screen
8D90 A0 0D 00    / Store preloaded 03 to $0008
8D93 D8 C8 8D    / Jump to $8DC8 if zero 

8D96 60          / Push #$00 to metastack            / (+2)
8D97 E9 41 CF 02 / Run function $CF41                / (-2) Set nametable mapping to #$00

8D9B 61          / Push #$01 to metastack            / (+2)
8D9C 60          / Push #$00 to metastack            / (+2)
8D9D 63          / Push #$03 to metastack            / (+2)
8D9E E9 1E EF 06 / Run function $EF1E                / (-6) Set bank 0 to #$01 ?

8DA2 8E FF 00    / Push #$00FF to metastack          / (+2)
8DA5 3C          / Push preloaded 01/02 to metastack / (+2)
8DA6 60          / Push #$00 to metastack            / (+2)
8DA7 8D 1E       / Push #$1E to metastack            / (+2)
8DA9 8D 20       / Push #$20 to metastack            / (+2)
8DAB 60          / Push #$00 to metastack            / (+2)
8DAC 60          / Push #$00 to metastack            / (+2)
8DAD 69          / Push #$09 to metastack            / (+2)
8DAE E9 1E EF 10 / Run function $EF1E                / (-10)



     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8DA0 EF 06 8E FF 00 3C 60 8D 1E 8D 20 60 60 69 E9 1E
8DB0 EF 10 65 60 63 E9 1E EF 06 8D 40 60 8E 59 7D 6D
8DC0 E9 1E EF 08 60 D6 EC 8D 61 E9 41 CF 02 61 60 63
8DD0 E9 1E EF 06 8E FF 00 3C 60 8D 1E 8D 20 60 60 69
8DE0 E9 1E EF 10 65 60 63 E9 1E EF 06 61 E9 6F CF 02
8DF0 CF

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8DF0    20 09 E5 FE FF 0C 8C 68 70 BC 8B 12 B8 8C D7
8E00 6F BB D3 A2 FF FF 0D 8C 68 70 BC 8B 12 B8 8C D7
8E10 6F BB D3 A2 FE FF A0 FE FF B3 A0 FF FF B4 C8 D8
8E20 2C 8E A0 FE FF B3 A0 FF FF B4 BC CF A0 FF FF B3
8E30 A0 FE FF B4 BC CF

FUNCTION $8DF1 (FE FF) $8DF6-$8E35
Preloaded values (01/02) Nation address 2
                 (03/04) Nation address 1
Returns the difference in French aggression values between the two nations.
				
8DF6 0C          / Store preloaded values 01/02 to M8
8DF7 8C 68 70    / Store #$7068 to MC
8DFA BC          / Subtract MC from M8
8DFB 8B 12       / Store #$12 to MC
8DFD B8          / Divide M8 by MC                       / Isolate nation code 2
8DFE 8C D7 6F    / Store #$6FD7 to MC
8E01 BB          / Add MC to M8
8E02 D3          / Replace M8 with 1-byte value
8E03 A2 FF FF    / Store M8 to meta 01                   / Aggression vs France (2)
8E06 0D          / Store preloaded values 03/04 to M8
8E07 8C 68 70    / Store #$7068 to MC
8E0A BC          / Subtract MC from M8
8E0B 8B 12       / Store #$12 to MC
8E0D B8          / Divide M8 by MC                       / Isolate nation code 1
8E0E 8C D7 6F    / Store #$6FD7 to MC
8E11 BB          / Add MC to M8                          
8E12 D3          / Replace M8 with 1-byte value
8E13 A2 FE FF    / Store M8 to meta 02                   / Aggression vs France (1)
8E16 A0 FE FF    / Store meta 02 to M8
8E19 B3          / Push M8 to metastack                    (+2)\
8E1A A0 FF FF    / Store meta 01 to M8                         |
8E1D B4          / Pull 2 values from metastack to MC      (-2)/ 
8E1E C8          / Check if M8 > MC                      / Aggression 2 > Aggression 1
8E1F D8 2C 8E    / Jump to $8E2C if false
8E22 A0 FE FF    / Store meta 02 to M8
8E25 B3          / Push M8 to metastack                    (+2)\
8E26 A0 FF FF    / Store meta 01 to M8                         |
8E29 B4          / Pull 2 values from metastack to MC      (-2)/
8E2A BC          / Subtract MC from M8 
8E2B CF          / End                                     M8 = diff between Aggressions
8E2C A0 FF FF    / Store meta 01 to M8
8E2F B3          / Push M8 to metastack                    (+2)\
8E30 A0 FE FF    / Store meta 02 to M8                         |
8E33 B4          / Pull 2 values from metastack to MC      (-2)/
8E34 BC          / Subtract MC from M8
8E35 CF          / Exit
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8E30                   20 09 E5 00 00 8E C0 00 0C 75
8E40 D3 B3 E9 60 D4 04 B3 8D 30 0C 75 D3 B3 E9 60 D4 
8E50 04 B3 6C 0C 75 D3 B3 E9 60 D4 04 B3 63 0C 75 D3
8E60 B3 E9 60 D4 04 B4 BB B4 BB B4 BB CF

FUNCTION $8E36 (00 00) $8E3B-$8E6B
Returns the sum of officer (1/2)'s combat stats

Preloaded 01/02 = Officer

8E3B 8E C0 00    / Push #$00C0 to metastack          / (+2)
8E3E 0C          / Store preloaded 01/02 to M8
8E3F 75          / Add #$05 to M8
8E40 D3          / Replace M8 with 1-byte value      /      Combat stats
8E41 B3          / Push M8 to metastack              / (+2)
8E42 E9 60 D4 04 / Run function $D460                / (-4) Isolate Gun stat
8E46 B3          / Push M8 to metastack              / (+2)
8E47 8D 30       / Push #$30 to metastack            / (+2)
8E49 0C          / Store preloaded 01/02 to M8
8E4A 75          / Add #$05 to M8
8E4B D3          / Replace M8 with 1-byte value      /      Combat stats
8E4C B3          / Push M8 to metastack              / (+2)
8E4D E9 60 D4 04 / Run function $D460                / (-4) Isolate Cav stat
8E51 B3          / Push M8 to metastack              / (+2)
8E52 6C          / Push #$0C to metastack            / (+2)
8E53 0C          / Store preloaded 01/02 to M8
8E54 75          / Add #$05 to M8
8E55 D3          / Replace M8 with 1-byte value      /      Combat stats
8E56 B3          / Push M8 to metastack              / (+2)
8E57 E9 60 D4 04 / Run function $D460                / (-4) Isolate Inf stat
8E5B B3          / Push M8 to metastack              / (+2)
8E5C 63          / Push #$03 to metastack            / (+2)
8E5D 0C          / Store preloaded 01/02 to M8
8E5E 75          / Add #$05 to M8
8E5F D3          / Replace M8 with 1-byte value      /      Combat stats
8E60 B3          / Push M8 to metastack              / (+2)
8E61 E9 60 D4 04 / Run function $D460                / (-2) Isolate Lead stat
8E65 B4          / Pull 2 meta to MC                 / (-2)
8E66 BB          / Add MC to M8
8E67 B4          / Pull 2 meta to MC                 / (-2)
8E68 BB          / Add MC to M8
8E69 B4          / Pull 2 meta to MC                 / (-2)
8E6A BB          / Add MC to M8
8E6B CF          / Exit

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8E60                                     20 09 E5 00
8E70 00 8E C0 00 0C 74 D3 B3 E9 60 D4 04 B3 8D 30 0C
8E80 74 D3 B3 E9 60 D4 04 B3 6C 0C 74 D3 B3 E9 60 D4
8E90 04 B3 63 0C 74 D3 B3 E9 60 D4 04 B4 BB B4 BB B4
8EA0 BB CF

FUNCTION $8E6C (00 00) $8E71-$8EA1
Returns the sum of officer (1/2)'s civil stats

Preloaded 01/02 = Officer
8E71 8E C0 00    / Push #$00C0 to metastack          / (+2)
8E74 0C          / Store preloaded 01/02 to M8
8E75 74          / Add #$04 to M8
8E76 D3          / Replace M8 with 1-byte value      /      Civil stats
8E77 B3          / Push M8 to metastack              / (+2)
8E78 E9 60 D4 04 / Run function $D460                / (-4) Isolate Bld stat
8E7C B3          / Push M8 to metastack              / (+2)
8E7D 8D 30       / Push #$30 to metastack            / (+2)
8E7F 0C          / Store preloaded 01/02 to M8
8E80 74          / Add #$04 to M8
8E81 D3          / Replace M8 with 1-byte value      /      Civil stats
8E82 B3          / Push M8 to metastack              / (+2)
8E83 E9 60 D4 04 / Run function $D460                / (-4) Isolate Sup stat
8E87 B3          / Push M8 to metastack              / (+2)
8E88 6C          / Push #$0C to metastack            / (+2)
8E89 0C          / Store preloaded 01/02 to M8
8E8A 74          / Add #$04 to M8
8E8B D3          / Replace M8 with 1-byte value      /      Civil stats
8E8C B3          / Push M8 to metastack              / (+2)
8E8D E9 60 D4 04 / Run function $D460                / (-4) Isolate Fin stat
8E91 B3          / Push M8 to metastack              / (+2)
8E92 63          / Push #$03 to metastack            / (+2)
8E93 0C          / Store preloaded 01/02 to M8
8E94 74          / Add #$04 to M8
8E95 D3          / Replace M8 with 1-byte value      /      Civil stats
8E96 B3          / Push M8 to metastack              / (+2)
8E97 E9 60 D4 04 / Run function $D460                / (-4) Isolate Pol stat
8E9B B4          / Pull 2 meta to MC                 / (-2)
8E9C BB          / Add MC to M8
8E9D B4          / Pull 2 meta to MC                 / (-2)
8E9E BB          / Add MC to M8                      
8E9F B4          / Pull 2 meta to MC                 / (-2)
8EA0 BB          / Add MC to M8
8EA1 CF          / Exit

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8EA0       20 09 E5 00 00 0C 79 D3 CF

FUNCTION $8EA2 (00 00) $8EA7-$8EAA
Find men assigned to officer (1/2)

8EA7 0C           / Store preloaded 01/02 to M8
8EA8 79           / Add #$09 to M8
8EA9 D3           / Replace M8 with 1-byte value
8EAA CF           / Exit 
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8EA0                                  20 09 E5 00 00
8EB0 0C 77 D3 CF

FUNCTION $8EAB (00 00) $8EB0-$8EB3
Find loyalty of officer (1/2)

8EB0 0C          / Store preloaded 01/02 to M8
8EB1 77          / Add #$07 to M8
8EB2 D3          / Replace M8 with 1-byte value
8EB3 CF          / Exit 
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8EB0             20 09 E5 FE FF 3C E9 E8 92 02 A2 FE
8EC0 FF A5 9C 78 54 BD B3 A0 FE FF B3 0C 75 D3 B3 E9
8ED0 60 D4 04 56 BD B4 BB A2 FF FF A0 FE FF 8C C0 00
8EE0 C0 D8 E8 8E 48 D6 F2 8E A0 FE FF 8B 30 C0 D8 FA
8EF0 8E 44 CD A0 FF FF BB A2 FF FF 0C 79 D3 8B 33 B8
8F00 CD A0 FF FF BB A2 FF FF A0 FF FF CF

FUNCTION $8EB4 (FE FF) $8EB9-$8F0B
Preloaded (01/02) = Officer

8EB9 3C          / Push preloaded 01/02 to metastack / (+2)
8EBA E9 E8 92 02 / Run function $92E8                / (-2)
8EBE A2 FE FF    / Store $0008 to meta 02
8EC1 A5 9C 78    / Store $0008 to $789C  
8EC4 54          /
8EC5 BD          / Perform 4 left shifts
8EC6 B3          / Push M8 to metastack              / (+2)
8EC7 A0 FE FF    / Store meta 02 to $0008
8ECA B3          / Push M8 to metastack              / (+2)
8ECB 0C          / Store preloaded 01/02 to M8
8ECC 75          / Add #$05 to M8
8ECD D3          / Replace M8 with 1-byte value      /      Officer - Combat
8ECE B3          / Push M8 to metastack              / (+2)
8ECF E9 60 D4 04 / Run function $D460                / (-4)
8ED3 56          /
8ED4 BD          / Perform 6 left shifts
8ED5 B4          / Pull 2 meta, store to M8          / (-2)
8ED6 BB          / Add MC to M8
8ED7 A2 FF FF    / Store $0008 to meta 1

8EDA A0 FE FF    / Store meta 2 to $0008
8EDD 8C C0 00    / Store #$00C0 to MC                /      1100 0000 flags
8EE0 C0          / Check if M8=MC
8EE1 D8 E8 8E    / Jump to $8EE8 if not

8EE4 48          / Store #$08 to M8
8EE5 D6 F2 8E    / Jump to $8EF2

8EE8 A0 FE FF    / Store meta 2 to $0008
8EEB 8B 30       / Store #$30 to MC
8EED C0          / Check if M8=MC                    /      0011 0000 flags
8EEE D8 FA 8E    / Jump to $8EFA if not

8EF1 44          / Store #$04 to M8

8EF2 CD          / Swap M8 and MC
8EF3 A0 FF FF    / Store meta 1 to $0008
8EF6 BB          / Add MC to M8
8EF7 A2 FF FF    / Store $0008 to meta 1
8EFA 0C          / Store preloaded 01/02 to M8
8EFB 79          / Add #$09 to M8
8EFC D3          / Replace M8 with 1-byte value
8EFD 8B 33       / Store #$33 to MC
8EFF B8          / Divide M8 by MC
8F00 CD          / Swap M8 and MC
8F01 A0 FF FF    / Store meta 1 to $0008
8F04 BB          / Add MC to M8
8F05 A2 FF FF    / Store $0008 to meta 1
8F08 A0 FF FF    / Store meta 1 to $0008
8F0B CF          / Exit

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8F00                                     20 09 E5 FC
8F10 FF 3C E9 E8 92 02 A2 FE FF A5 9D 78 53 B5 8C CF
8F20 9F BB 2A A5 9E 78 B3 A5 9C 78 54 BD B3 A0 FE FF
8F30 B3 0C 75 D3 B3 E9 60 D4 04 56 BD B4 BB B4 BB A2
8F40 FF FF A0 FE FF 8C C0 00 C0 D8 51 8F 0A 72 D6 60
8F50 8F A0 FE FF 8B 30 C0 D8 5F 8F 0A D0 D6 60 8F 0A
8F60 D3 CD A0 FF FF BB A2 FF FF A0 FF FF CF 

FUNCTION $8F0C (FC FF) $8F11-$8F6C

8F11 3C          / Push preloaded 01/02 to metastack (+2)
8F12 E9 E8 92 02 / Run function $92E8
...

8F0C 

E9 0C 8F

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8F60                                        20 09 E5
8F70 00 00 0D 72 B0 50 C0 D8 7C 8F 40 CF 0D 8C 76 71
8F80 BC 8B 1C B8 8B 1B C0 D8 A8 8F A5 EA 6F 53 C6 D8
8F90 A8 8F 60 8E 68 70 8E E6 B4 8E E0 00 62 E9 79 DD
8FA0 0A 51 C1 D8 A8 8F 40 CF 0D 74 D3 B3 0C 74 D3 5F
8FB0 B5 B4 BB 8C F6 6E BB D3 8B 20 DA 50 C1 CF

Preloaded 03/04 = Examined city?
Preloaded 01/02 = Active city?

Checks if cities are hostile.
Returns zero if examined city is empty.
Returns zero if Scenario 4, city is Paris & France has no other cities.

FUNCTION $8F6D (00 00) $8F72-$8FBD
8F72 0D          / Store preloaded 03/04 to M8       / Examined City 
8F73 72          / Add #$02 to M8
8F74 B0          / Replace M8 with 2-byte value      / Examined City - Commander
8F75 50          / Store #$00 to MC
8F76 C0          / Check if M8=MC                    / Check if city is empty
8F77 D8 7C 8F    / Jump to $8FC7 if not
8F7A 40          / Store #$00 to M8
8F7B CF          / Exit

8F7C 0D          / Store preloaded 03/04 to M8       / Examined city
8F7D 8C 76 71    / Store #$7176 to MC
8F80 BC          / Subtract MC from M8
8F81 8B 1C       / Store #$1C to MC
8F83 B8          / Divide M8 by MC
8F84 8B 1B       / Store #$1B to MC
8F86 C0          / Check if M8=MC                    / Check if city is Paris
8F87 D8 A8 8F    / Jump to $8FA8 if not

8F8A A5 EA 6F    / Store $6FEA to $0008              / Store Scenario to $0008
8F8D 53          / Store #$03 to MC
8F8E C6          / Check if M8 < MC                  / Check if Scenario 1 or 2
8F8F D8 A8 8F    / Jump to $8FA8 if not

8F92 60          / Push #$00 to metastack            / (+2)
8F93 8E 68 70    / Push #$7068 to metastack          / (+2)
8F96 8E E6 B4    / Push #$B4E6 to metastack          / (+2)
8F99 8E E0 00    / Push #$00E0 to metastack          / (+2)
8F9C 62          / Push #$02 to metastack            / (+2)
8F9D E9 79 DD 0A / Run function $DD79                / (-A) Tally # of French cities
8FA1 51          / Store #$01 to MC
8FA2 C1          / Check if M8 is different than MC  /      Check if remaining cities is greater than 1
8FA3 D8 A8 8F    / Jump to $F8A8 if not              /      If only 1 city remaining
8FA6 40          / Store #$00 to M8
8FA7 CF          / Exit

8FA8 0D          / Store preloaded 03/04 to M8       / Examined City
8FA9 74          / Add #$04 to M8
8FAA D3          / Replace M8 with 1-byte value      / Examined City - Nation
8FAB B3          / Push M8 to metastack              / (+2)
8FAC 0C          / Store preloaded 01/02 to M8       / Active City
8FAD 74          / Add #$04 to M8
8FAE D3          / Replace M8 with 1-byte value      / Active City - Nation
8FAF 5F          / Store #$0F to MC
8FB0 B5          / Multiply M8 by MC
8FB1 B4          / Pull 2 values from meta to MC     / (-2)
8FB2 BB          / Add MC to M8
8FB3 8C F6 6E    / Store #$6EF6 to MC
8FB6 BB          / Add M8 to MC
8FB7 D3          / Replace M8 with 1-byte value
8FB8 8B 20       / Store #$20 to MC
8FBA DA          / M8 AND MC                         / Check if nations are hostile
8FBB 50          / Store #$00 to MC
8FBC C1          / Check if M8 is different than MC  / Returns 1 if hostile
8FBD CF          / Exit 

FUNCTION $8F6D
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8FE0                                     20 09 E5 FB
8FF0 FF 0C 75 B0 2A 0C 8F 14 B0 B3 3C E9 02 D4 02 B3
9000 68 A5 E9 6F B3 45 B4 BC 53 DA D0 B3 3A E9 CA DD
9010 06 B4 BB B4 BB 2B 0C 7B D3 A2 FB FF 8B 3C C6 D8
9020 34 90 A0 FB FF B3 89 3C B4 BC B3 3A E9 0F DE 04
9030 CD 0B BB 2B 0B 8C 0F 27 C8 D8 42 90 8A 0F 27 D6
9040 43 90 0B 2B 0C 8F 10 B0 B3 DE FE FF B3 E9 6E DE
9050 04 0B D8 64 90 8E 0F 27 0A 52 BE B3 DE FE FF B3
9060 E9 2C DE 06 0B CF

FUNCTION $8FEC (FB FF) $8FF1-$9065
Preloaded 01/02 = City
Meta 01/02 = Ongoing calculation (9999 Max)
Meta 03/04 = Population
Meta 05    = Food sufficiency

PSEUDOCODE
func_8fec(City city)
{
	city_pop = city.population;
	
	
	tally = getRatio(city_pop, (5-SEASON) % 3 + 1, 8) + menAssigned(city) + city.reserves;
	
	food_suf = city.foodsuf;
	
	if (food_suf < 60)
	{
		tally += getPercent(food_suf - 60, city_pop);
	}
	
	if (tally > 9999)
	{
		tally = 9999;
	}
	
	reduceValue(&tally, city.food);
	
	if (tally != 0)
	{
		increaseValue(&tally, city_pop/4, 9999);
	}
	
	return tally;
}

8FF1 0C          / Store preloaded 01/02 to M8        /      City 
8FF2 75          / Add #$05 to M8
8FF3 B0          / Replace M8 with 2-byte value       /      City - Population
8FF4 2A          / Store M8 to meta 03/04

8FF5 0C          / Store preloaded 01/02 to M8
8FF6 8F 14       / Add #$14 to M8
8FF8 B0          / Replace M8 with 2-byte value       /      City - Soldier Reserves
8FF9 B3          / Push M8 to metastack               / (+2)

8FFA 3C          / Push preloaded 01/02 to metastack  / (+2)
8FFB E9 02 D4 02 / Run function $D402                 / (-2) # of men assigned
8FFF B3          / Push M8 to metastack               / (+2)

9000 68          / Push #$08 to metastack             / (+2)

9001 A5 E9 6F    / Store $6FE9 to $0008               /      Season
9004 B3          / Push M8 to metastack               / (+2)

9005 45          / Store #$0005 to M8
9006 B4          / Pull 2 meta to MC                  / (-2)
9007 BC          / Subtract MC from M8                /      5-Season
9008 53          / Store #$0003 to MC
9009 DA          / MC AND M8
900A D0          / Increment M8
900B B3          / Push M8 to metastack               / (+2) Spring = 2, Summer = 1
                                                              Fall = 4, Winter = 3

900C 3A          / Push meta 03/04 to metastack       / (+2)
900D E9 CA DD 06 / Run function $DDCA                 / (-6) Population * Season Bonus / 8
9011 B4          / Pull 2 meta to MC                  / (-2) Men Assigned
9012 BB          / Add MC to M8                   
9013 B4          / Pull 2 meta to MC                  / (-2) Soldier Reserves
9014 BB          / Add MC to M8
9015 2B          / Store M8 to meta 01/02            

9016 0C          / Store preloaded 01/02 to M8        /      City
9017 7B          / Add #$0B to M8 
9018 D3          / Replace M8 with 1-byte value       /      Food sufficiency 
9019 A2 FB FF    / Store $0008 to meta 05

901C 8B 3C       / Store #$3C to MC
901E C6          / Check if M8 < MC                   /      Check if food sufficiency < 60
901F D8 34 90    / Jump to $9034 if not

9022 A0 FB FF    / Store meta 05 to $0008
9025 B3          / Store M8 to metastack             / (+2)
9026 89 3C       / Store #$3C to M8
9028 B4          / Pull 2 meta to MC                 / (-2)
9029 BC          / Subtract MC from M8
902A B3          / Push M8 to metastack              / (+2) 
902B 3A          / Push meta 03/04 to metastack      / (+2)  
902C E9 0F DE 04 / Run function $DE0F                / (-4)  (60-Food sufficency)% of population
9030 CD          / Swap M8 and MC
9031 0B          / Store meta 01/02 to M8
9032 BB          / Add MC to M8
9033 2B          / Store M8 to meta 01/02            /       Add to ongoing total

9034 0B          / Store meta 01/02 to M8            /       Ongoing total

9035 8C 0F 27    / Store #$270F to MC                /       9999
9038 C8          / Check if M8 > MC
9039 D8 42 90    / Jump to $9042 if not
903C 8A 0F 27    / Store #$270F to M8
903F D6 43 90    / Jump to $9043

9042 0B          / Store meta 01/02 to M8

9043 2B          / Store M8 to meta 01/02

9044 0C          / Store preloaded 01/02 to M8      
9045 8F 10       / Add #$10 to M8
9047 B0          / Replace M8 with 2-byte value    /      City - Food
9048 B3          / Push M8 to 2-byte value         / (+2)
9049 DE FE FF    / Store address of meta 02 to M8
904C B3          / Push M8 to metastack            / (+2)
904D E9 6E DE 04 / Run function $DE6E              / (-4) Reduce value by City's food

9051 0B          / Store meta 01/02 to M8
9052 D8 64 90    / Jump to $9064 if zero

9055 8E 0F 27    / Push #$270F to metastack        / (+2)
9058 0A          / Store meta 03/04 to M8          /      Population
9059 52          / 
905A BE          / Divide M8 by 4                  /      Population/4
905B B3          / Push M8 to metastack            / (+2)
905C DE FE FF    / Store address of meta 02 to M8
905F B3          / Push M8 to metastack            / (+2)
9060 E9 2C DE 06 / Run function $DE2C              / (-6) Increase by population/4 up to max of 9999

9064 0B          / Store meta 01/02 to M8
9065 CF          / Exit 

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9060                   20 09 E5 FE FF A4 A2 76 7C B0
9070 8C 30 75 C8 D8 7C 90 89 64 D6 7E 90 89 3C 2B 0C
9080 7C D3 B3 DE FE FF B3 E9 6E DE 04 0C 75 B0 B3 3B
9090 E9 0F DE 04 2B 0C 8F 12 B0 B3 DE FE FF B3 E9 6E
90A0 DE 04 0B CF

FUNCTION $9066 (FE FF) $906B-$90A3


PSEUDOCODE:
uint16_t surplusMaterials(City city)
{
	uint16_t surplus;
	
	if (ACTIVE_NATION->Materials > 30000)
	{
		surplus = 100;
	}
	else
	{
		surplus = 60;
	}
	
	reduceValue(&surplus, city.matSuff);
	
	surplus = getPercent(surplus, city.population);
	
	reduceValue(&surplus, city.materials);
	
	return surplus;
}

906B A4 A2 76    / Store $76A2/$76A3 to M8           / Active nation
906E 7C          / Add #$0C to M8
906F B0          / Replace M8 with 2-byte value      / Materials
9070 8C 30 75    / Store $7530 to MC
9073 C8          / Check if M8 > MC                  / Over 30000
9074 D8 7C 90    / Jump to $907C if not
9077 89 64       / Store #$64 to M8                  / 100
9079 D6 7E 90    / Jump to $907E
907C 89 3C       / Store #$3C to M8                  /  60
907E 2B          / Store M8 to meta 01/02
907F 0C          / Store preloaded 01/02 to M8
9080 7C          / Add #$0C to M8
9081 D3          / Replace M8 with 1-byte value      / Material Suff
9082 B3          / Push M8 to metastack                (+2)
9083 DE FE FF    / Store address of meta 02 to M8
9086 B3          / Push M8 to metastack                (+2)
9087 E9 6E DE 04 / Run function $DE6E                  (-4)
908B 0C          / Store preloaded 01/02 to M8
908C 75          / Add #$05 to M8
908D B0          / Replace M8 with 2-byte value
908E B3          / Push M8 to metastack                (+2)
908F 3B          / Push meta 01/02 to metastack        (+2)
9090 E9 0F DE 04 / Run function $DE0F                  (-4)
9094 2B          / Store M8 to meta 01/02
9095 0C          / Store preloaded 01/02 to M8
9096 8F 12       / Add #$12 to M8
9098 B0          / Replace M8 with 2-byte value
909A DE FE FF    / Store address of meta 02 to M8
909D B3          / Push M8 to metastack                (+2)
909E E9 6E DE 04 / Run function $DE6E                  (-4)
90A2 0B          / Store meta 01/02 to M8
90A3 CF          / Exit 

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9160                                              20
9170 E3 E2 00 FC FF 

9175 LDY #$FC
9177 STA ($06),Y
9179 INY
917A STA ($06),Y
917C LDA #$68
917E INY
917F STA ($06),Y
9181 LDA #$70
9183 INY
9184 STA ($06),Y 
9186 JMP $91A3

9189 CLC
918A LDA #$01
918C LDY #$FD
918E ADC ($06),Y
9190 STA ($06),Y
9192 TXA
9193 ADC #$00
9195 CLC
9196 LDA #$12
9198 INY
9199 ADC ($06),Y
919B STA ($06),Y
919D TXA 
919E INY
919F ADC ($06),Y
91A1 STA ($06),Y

91A3 LDY #$FD
91A5 LDA ($06),Y
91A7 STA $0018
91A9 STX $0019
91AB LDA $0018
91AD CMP #$0F
91AF LDA $0019
91B1 SBC #$00
91B3 BCC $91B8
91B5 JMP $9235

91B8 INY
91B9 LDA ($06),Y
91BB STA $0018
91BD INY 
91BE LDA ($06),Y
91C0 STA $0019
91C2 LDA ($18,X)
91C4 LDY #$01
91C6 ORA ($18),Y
91C8 BNE $91CD
91CA JMP $91D4

91CD STY $0018
91CF STX $0019
91D1 JMP $91D8

91D4 STX $0018
91D6 STX $0019
91D8 LDA $0018
91DA BNE $91DF
91DC JMP $9232

91DF LDY #$FD
91E1 LDA ($06),Y
91E3 STA $0018
91E5 STX $0019
91E7 LDA #$0F
91E9 STA $0014
91EB STX $0015
91ED LDY #$0B
91EF LDA ($04),Y
91F1 STA $0010
91F3 STX $0011
91F5 LDY #$10
91F7 LDX #$14
91F9 LDA #$0C
91FB JSR $E1C1
91FE CLC
91FF LDA $000C
9201 ADC $0018
9203 STA $0014
9205 LDA $000D
9207 ADC $0019
9209 STA $0015
920B CLC
920C LDA $0014
920E ADC #$F6
9210 STA $0018
9212 LDA $0015
9214 ADC #$6E
9216 STA $0019
9218 LDA ($18,X)
921A STA $0014
921C STX $0015
921E LDA $0014
9220 AND #$20
9222 BNE $9227
9224 JMP $9232

9227 CLC
9228 TYA
9229 LDY #$FC
922B ADC ($06),Y
922D STA ($06),Y
922F TXA
9230 ADC #$00
9232 JMP $9189

9235 LDY #$FC
9237 LDA ($06),Y
9239 STA $0008
923B STX $0009
923D RTS -------------------------------------------

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9230                                           20 03
9240 E2 00 FF FF

FUNCTION $923E (00 FF FF) $9244-$????
Arg: Solider pointer

 00:923E:20 E3 E2  JSR $E2E3
 00:9241:00        BRK
 00:9242:FF        UNDEFINED
 00:9243:FF        UNDEFINED
 
 00:9244:A0 FF     LDY #$FF
 00:9246:91 06     STA ($06),Y	/ int_8<var00> = 0
 00:9248:4C 57 92  JMP $9257
 
 Loop
 00:924B:18        CLC
 00:924C:A9 01     LDA #$01
 00:924E:A0 FF     LDY #$FF
 00:9250:71 06     ADC ($06),Y
 00:9252:91 06     STA ($06),Y
 00:9254:8A        TXA
 00:9255:69 00     ADC #$00
 
 00:9257:A0 FF     LDY #$FF
 00:9259:B1 06     LDA ($06),Y
 00:925B:85 18     STA $0018
 00:925D:86 19     STX $0019
 00:925F:A5 18     LDA $0018
 00:9261:C9 04     CMP #$04
 00:9263:A5 19     LDA $0019
 00:9265:E9 00     SBC #$00
 00:9267:90 03     BCC $926C
 00:9269:4C E7 92  JMP $92E7
 00:926C:A9 01     LDA #$01
 00:926E:85 18     STA $0018
 00:9270:86 19     STX $0019
 00:9272:B1 06     LDA ($06),Y
 00:9274:85 14     STA $0014
 00:9276:86 15     STX $0015 = #$02
 00:9278:A0 14     LDY #$14
 00:927A:A2 18     LDX #$18
 00:927C:A9 10     LDA #$10
 00:927E:20 3A E4  JSR $E43A
 00:9281:18        CLC
 00:9282:A5 10     LDA $0010 = #$8B
 00:9284:69 E0     ADC #$E0
 00:9286:85 18     STA $0018 = #$00
 00:9288:A5 11     LDA $0011 = #$04
 00:928A:69 9F     ADC #$9F
 00:928C:85 19     STA $0019 = #$00
 00:928E:A1 18     LDA ($18,X) @ $04AB = #$00
 00:9290:85 14     STA $0014 = #$00
 00:9292:B1 18     LDA ($18),Y @ $0001 = #$EF
 00:9294:85 15     STA $0015 = #$02
 00:9296:A2 14     LDX #$14
 00:9298:20 DF E3  JSR $E3DF
 00:929B:A0 FF     LDY #$FF
 00:929D:B1 06     LDA ($06),Y @ $8032 = #$A2
 00:929F:85 18     STA $0018 = #$00
 00:92A1:86 19     STX $0019 = #$00
 00:92A3:18        CLC
 00:92A4:A5 18     LDA $0018 = #$00
 00:92A6:69 DC     ADC #$DC
 00:92A8:85 14     STA $0014 = #$00
 00:92AA:A5 19     LDA $0019 = #$00
 00:92AC:69 9F     ADC #$9F
 00:92AE:85 15     STA $0015 = #$02
 00:92B0:A1 14     LDA ($14,X) @ $0011 = #$04
 00:92B2:85 18     STA $0018 = #$00
 00:92B4:86 19     STX $0019 = #$00
 00:92B6:A5 19     LDA $0019 = #$00
 00:92B8:48        PHA
 00:92B9:A5 18     LDA $0018 = #$00
 00:92BB:48        PHA
 00:92BC:A0 0B     LDY #$0B
 00:92BE:B1 04     LDA ($04),Y @ $05B1 = #$E8
 00:92C0:85 18     STA $0018 = #$00
 00:92C2:C8        INY
 00:92C3:B1 04     LDA ($04),Y @ $05B1 = #$E8
 00:92C5:85 19     STA $0019 = #$00
 00:92C7:A0 05     LDY #$05
 00:92C9:B1 18     LDA ($18),Y @ $0001 = #$EF
 00:92CB:85 14     STA $0014 = #$00
 00:92CD:86 15     STX $0015 = #$02
 00:92CF:A5 15     LDA $0015 = #$02
 00:92D1:48        PHA
 00:92D2:A5 14     LDA $0014 = #$00
 00:92D4:48        PHA
 00:92D5:20 82 E3  JSR $E382
 00:92D8:60        RTS -----------------------------------------
 00:92D9:D4        UNDEFINED
 00:92DA:06 A2     ASL $00A2 = #$7C
 00:92DC:14        UNDEFINED
 00:92DD:20 04 E4  JSR $E404
 00:92E0:A5 08     LDA $0008 = #$E8
 00:92E2:81 14     STA ($14,X) @ $0011 = #$04
 00:92E4:4C 4B 92  JMP $924B
 00:92E7:60        RTS -----------------------------------------

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
92E0                         20 E3 E2 00 00 00

FUNCTION $92E8 (00 00 00) $92EE-$9EE9

92EE LDY #$0C
92F0 LDA ($04),Y
92F2 PHA
92F3 DEY
92F4 LDA ($04),Y
92F6 PHA
92F7 JSR $E382
92FA ROL $0492,X
92FD LDA $789F
9300 STA $0018
9302 STX $0019
9304 LDA $78A0
9307 STA $0014
9309 STX $0015
930B LDA $0014
930D CMP $0018
930F LDA $0015
9311 SBC $0019
9313 BCS $9318
9315 JMP $933A
9318 LDA $789E
931B STA $0018
931D STX $0019
931F LDA $78A0
9322 STA $0014
9324 STX $0015
9326 LDA $0014
9328 CMP $0018
932A LDA $0015
932C SBC $0019
932E BCS $9333
9330 JMP $933A
9333 LDA #$C0
9335 STA $0008
9337 STX $0009
9339 RTS -----------------------------------------
933A LDA $789E
933D STA $0018
933F STX $0019
9341 LDA $789F
9344 STA $0014
9346 STX $0015
9348 LDA $0014
934A CMP $0018
934C LDA $0015
934E SBC $0019
9350 BCS $9355
9352 JMP $935E
9355 LDA #$30
9357 STA $0008
9359 STX $0009
935B JMP $9364
935E LDA #$0C
9360 STA $0008
9362 STX $0009
9364 STX $0009
9366 RTS -----------------------------------------

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9360                      20 E3 E2 00 D6 FF 

FUNCTION $9367
Sorts the list of officers in City (1/2) by criteria (3).

Preloaded 01/02 = City
Preloaded 03 = ?

 00:936D:A0 0D     LDY #$0D
 00:936F:B1 04     LDA ($04),Y
 00:9371:85 18     STA $0018
 00:9373:86 19     STX $0019
 00:9375:A5 18     LDA $0018
 00:9377:C9 FF     CMP #$FF
 00:9379:D0 04     BNE $937F
 00:937B:A5 19     LDA $0019
 00:937D:C9 00     CMP #$00
 00:937F:D0 03     BNE $9384
 00:9381:4C AD 93  JMP $93AD ; Exit if preloaded 03 = #$FF
 
 00:9384:A0 0B     LDY #$0B
 00:9386:B1 04     LDA ($04),Y @ $058D = #$DD
 00:9388:85 18     STA $0018 
 00:938A:C8        INY
 00:938B:B1 04     LDA ($04),Y @ $058D = #$DD
 00:938D:85 19     STA $0019
 00:938F:A0 03     LDY #$03
 00:9391:B1 18     LDA ($18),Y
 00:9393:48        PHA
 00:9394:88        DEY
 00:9395:B1 18     LDA ($18),Y
 00:9397:48        PHA
 00:9398:20 82 E3  JSR $E382
 
 $D43B (-4)        Tally # of officers in city
 
 00:939E:86 09     STX $0009
 00:93A0:A5 08     LDA $0008
 00:93A2:C9 02     CMP #$02
 00:93A4:A5 09     LDA $0009
 00:93A6:E9 00     SBC #$00
 00:93A8:90 03     BCC $93AD ; Exit if less than 3 officers
 00:93AA:4C AE 93  JMP $93AE
 00:93AD:60        RTS -----------------------------------------
 00:93AE:8A        TXA
 00:93AF:A0 DA     LDY #$DA
 00:93B1:91 06     STA ($06),Y
 00:93B3:A0 0B     LDY #$0B
 00:93B5:B1 04     LDA ($04),Y
 00:93B7:85 18     STA $0018
 00:93B9:C8        INY
 00:93BA:B1 04     LDA ($04),Y
 00:93BC:85 19     STA $0019 
 00:93BE:A0 02     LDY #$02
 00:93C0:B1 18     LDA ($18),Y
 00:93C2:A0 DE     LDY #$DE
 00:93C4:91 06     STA ($06),Y
 00:93C6:A0 03     LDY #$03
 00:93C8:B1 18     LDA ($18),Y
 00:93CA:A0 DF     LDY #$DF
 00:93CC:91 06     STA ($06),Y @ $8BC9 ; Store 1st officer to meta
 
 00:93CE:A0 DE     LDY #$DE
 00:93D0:B1 06     LDA ($06),Y @ $8BC9
 00:93D2:C8        INY
 00:93D3:11 06     ORA ($06),Y @ $8BC9 = #$8E
 00:93D5:D0 03     BNE $93DA
 00:93D7:4C 62 94  JMP $9462
 00:93DA:18        CLC
 
 00:93DB:A9 E0     LDA #$E0
 00:93DD:65 06     ADC $0006
 00:93DF:85 18     STA $0018
 00:93E1:8A        TXA
 00:93E2:65 07     ADC $0007
 00:93E4:85 19     STA $0019 ; Address of meta #$E0
 
 00:93E6:A9 01     LDA #$01
 00:93E8:85 14     STA $0014
 00:93EA:86 15     STX $0015
 00:93EC:18        CLC
 00:93ED:A0 DA     LDY #$DA
 00:93EF:B1 06     LDA ($06),Y
 00:93F1:85 10     STA $0010
 00:93F3:69 01     ADC #$01
 00:93F5:91 06     STA ($06),Y
 00:93F7:8A        TXA
 00:93F8:69 00     ADC #$00
 00:93FA:86 11     STX $0011
 
 00:93FC:A0 10     LDY #$10
 00:93FE:A2 14     LDX #$14
 00:9400:A9 0C     LDA #$0C
 00:9402:20 3A E4  JSR $E43A - Perform (14/15) left shifts
                               on (10/11) & store to (0C/0D)				 
 
 00:9405:18        CLC
 00:9406:A5 0C     LDA $000C
 00:9408:65 18     ADC $0018
 00:940A:85 14     STA $0014
 00:940C:A5 0D     LDA $000D
 00:940E:65 19     ADC $0019
 00:9410:85 15     STA $0015 - Multiply officer # by 2 to get current position in meta storage
 
 00:9412:A0 DE     LDY #$DE
 00:9414:B1 06     LDA ($06),Y
 00:9416:81 14     STA ($14,X)
 00:9418:C8        INY
 00:9419:B1 06     LDA ($06),Y
 00:941B:A0 01     LDY #$01
 00:941D:91 14     STA ($14),Y - Put officer into meta storage
 
 00:941F:A0 DE     LDY #$DE
 00:9421:B1 06     LDA ($06),Y
 00:9423:85 18     STA $0018
 00:9425:C8        INY
 00:9426:B1 06     LDA ($06),Y
 00:9428:85 19     STA $0019
 00:942A:A1 18     LDA ($18,X)
 00:942C:A0 DC     LDY #$DC
 00:942E:91 06     STA ($06),Y
 00:9430:A0 01     LDY #$01
 00:9432:B1 18     LDA ($18),Y
 00:9434:A0 DD     LDY #$DD
 00:9436:91 06     STA ($06),Y    - Put next officer into meta storage
 
 00:9438:A0 0C     LDY #$0C
 00:943A:B1 04     LDA ($04),Y
 00:943C:48        PHA
 00:943D:88        DEY
 00:943E:B1 04     LDA ($04),Y
 00:9440:48        PHA
 00:9441:A0 DF     LDY #$DF
 00:9443:B1 06     LDA ($06),Y
 00:9445:48        PHA
 00:9446:88        DEY
 00:9447:B1 06     LDA ($06),Y
 00:9449:48        PHA
 00:944A:20 82 E3  JSR $E382
 
FUNCTION $C34C (-6)

 00:9450:A0 DC     LDY #$DC
 00:9452:B1 06     LDA ($06),Y
 00:9454:A0 DE     LDY #$DE
 00:9456:91 06     STA ($06),Y
 00:9458:88        DEY
 00:9459:B1 06     LDA ($06),Y
 00:945B:A0 DF     LDY #$DF
 00:945D:91 06     STA ($06),Y ; Advance to next officer
 00:945F:4C CE 93  JMP $93CE
 
 
 00:9462:18        CLC
 00:9463:A9 E0     LDA #$E0
 00:9465:65 06     ADC $0006
 00:9467:85 18     STA $0018
 00:9469:8A        TXA
 00:946A:65 07     ADC $0007
 00:946C:85 19     STA $0019 ; Beginning of officer list
 
 00:946E:A9 01     LDA #$01
 00:9470:85 14     STA $0014 = #$0F
 00:9472:86 15     STX $0015 = #$00
 
 00:9474:A0 DA     LDY #$DA
 00:9476:B1 06     LDA ($06),Y @ $8BC9 = #$8E
 00:9478:85 10     STA $0010 ; Of officers
 00:947A:86 11     STX $0011 = #$00
 00:947C:A0 10     LDY #$10
 00:947E:A2 14     LDX #$14
 00:9480:A9 0C     LDA #$0C
 00:9482:20 3A E4  JSR $E43A ; 2*# of officers
 00:9485:18        CLC
 00:9486:A5 0C     LDA $000C
 00:9488:65 18     ADC $0018
 00:948A:85 14     STA $0014
 00:948C:A5 0D     LDA $000D
 00:948E:65 19     ADC $0019
 00:9490:85 15     STA $0015 ; End of list
 
 00:9492:8A        TXA
 00:9493:81 14     STA ($14,X) 
 00:9495:91 14     STA ($14),Y;  Snip end of list
 
 00:9497:A0 DB     LDY #$DB
 00:9499:91 06     STA ($06),Y @ $8BC9 = #$8E
 00:949B:4C AA 94  JMP $94AA
 
 00:949E:18        CLC
 00:949F:A9 01     LDA #$01
 00:94A1:A0 DB     LDY #$DB
 00:94A3:71 06     ADC ($06),Y @ $8BC9 = #$8E
 00:94A5:91 06     STA ($06),Y @ $8BC9 = #$8E
 00:94A7:8A        TXA
 00:94A8:69 00     ADC #$00
 
 00:94AA:A0 DA     LDY #$DA
 00:94AC:B1 06     LDA ($06),Y @ $8BC9 = #$8E
 00:94AE:85 18     STA $0018 = #$0F
 00:94B0:86 19     STX $0019 = #$00
 00:94B2:18        CLC
 00:94B3:A9 FF     LDA #$FF
 00:94B5:65 18     ADC $0018 = #$0F
 00:94B7:85 14     STA $0014 = #$0F
 00:94B9:A9 FF     LDA #$FF
 00:94BB:65 19     ADC $0019 = #$00
 00:94BD:85 15     STA $0015 = #$00
 00:94BF:C8        INY
 00:94C0:B1 06     LDA ($06),Y @ $8BC9 = #$8E
 00:94C2:85 18     STA $0018 = #$0F
 00:94C4:86 19     STX $0019 = #$00
 00:94C6:A5 18     LDA $0018 = #$0F
 00:94C8:C5 14     CMP $0014 = #$0F
 00:94CA:A5 19     LDA $0019 = #$00
 00:94CC:E5 15     SBC $0015 = #$00
 00:94CE:90 03     BCC $94D3
 00:94D0:4C FC 96  JMP $96FC
 00:94D3:B1 06     LDA ($06),Y @ $8BC9 = #$8E
 00:94D5:A0 D8     LDY #$D8
 00:94D7:91 06     STA ($06),Y @ $8BC9 = #$8E
 00:94D9:18        CLC
 00:94DA:A9 E0     LDA #$E0
 00:94DC:65 06     ADC $0006 = #$C8
 00:94DE:85 18     STA $0018 = #$0F
 00:94E0:8A        TXA
 00:94E1:65 07     ADC $0007 = #$8B
 00:94E3:85 19     STA $0019 = #$00
 00:94E5:A9 01     LDA #$01
 00:94E7:85 14     STA $0014 = #$0F
 00:94E9:86 15     STX $0015 = #$00
 00:94EB:A0 DB     LDY #$DB
 00:94ED:B1 06     LDA ($06),Y @ $8BC9 = #$8E
 00:94EF:85 10     STA $0010 = #$00
 00:94F1:86 11     STX $0011 = #$00
 00:94F3:A0 10     LDY #$10
 00:94F5:A2 14     LDX #$14
 00:94F7:A9 0C     LDA #$0C
 00:94F9:20 3A E4  JSR $E43A
 
 00:94FC:18        CLC
 00:94FD:A5 0C     LDA $000C = #$8C
 00:94FF:65 18     ADC $0018 = #$0F
 00:9501:85 14     STA $0014 = #$0F
 00:9503:A5 0D     LDA $000D = #$05
 00:9505:65 19     ADC $0019 = #$00
 00:9507:85 15     STA $0015 = #$00
 00:9509:B1 14     LDA ($14),Y @ $0010 = #$00
 00:950B:48        PHA
 00:950C:A1 14     LDA ($14,X) @ $0000 = #$BA
 00:950E:48        PHA
 
 00:950F:84 18     STY $0018 = #$0F
 00:9511:86 19     STX $0019 = #$00
 00:9513:A0 0D     LDY #$0D
 00:9515:B1 04     LDA ($04),Y @ $058D = #$DD
 00:9517:85 14     STA $0014 = #$0F
 00:9519:86 15     STX $0015 = #$00
 00:951B:A0 14     LDY #$14
 00:951D:A2 18     LDX #$18
 00:951F:A9 10     LDA #$10
 00:9521:20 3A E4  JSR $E43A
 
 00:9524:18        CLC
 00:9525:A5 10     LDA $0010 = #$00
 00:9527:69 E8     ADC #$E8
 00:9529:85 18     STA $0018 = #$0F
 00:952B:A5 11     LDA $0011 = #$00
 00:952D:69 9F     ADC #$9F
 00:952F:85 19     STA $0019 = #$00
 00:9531:A1 18     LDA ($18,X) @ $95DD = #$19
 00:9533:85 08     STA $0008 = #$C7
 00:9535:B1 18     LDA ($18),Y @ $0010 = #$00
 00:9537:85 09     STA $0009 = #$A9
 00:9539:20 8F E4  JSR $E48F
 
 04 A5
 
 00:953D:A5 08     LDA $0008 = #$C7
 00:953F:A0 D6     LDY #$D6
 00:9541:91 06     STA ($06),Y @ $8BC9 = #$8E
 00:9543:A0 DB     LDY #$DB
 00:9545:B1 06     LDA ($06),Y @ $8BC9 = #$8E
 00:9547:85 18     STA $0018 = #$0F
 00:9549:86 19     STX $0019 = #$00
 00:954B:18        CLC
 00:954C:A9 01     LDA #$01
 00:954E:65 18     ADC $0018 = #$0F
 00:9550:85 14     STA $0014 = #$0F
 00:9552:8A        TXA
 00:9553:65 19     ADC $0019 = #$00
 00:9555:85 15     STA $0015 = #$00
 00:9557:A5 14     LDA $0014 = #$0F
 00:9559:A0 D9     LDY #$D9
 00:955B:91 06     STA ($06),Y @ $8BC9 = #$8E
 00:955D:4C 6C 95  JMP $956C
 00:9560:18        CLC
 00:9561:A9 01     LDA #$01
 00:9563:A0 D9     LDY #$D9
 00:9565:71 06     ADC ($06),Y @ $8BC9 = #$8E
 00:9567:91 06     STA ($06),Y @ $8BC9 = #$8E
 00:9569:8A        TXA
 00:956A:69 00     ADC #$00
 00:956C:A0 DA     LDY #$DA
 00:956E:B1 06     LDA ($06),Y @ $8BC9 = #$8E
 00:9570:85 18     STA $0018 = #$0F
 00:9572:86 19     STX $0019 = #$00
 00:9574:88        DEY
 00:9575:B1 06     LDA ($06),Y @ $8BC9 = #$8E
 00:9577:85 14     STA $0014 = #$0F
 00:9579:86 15     STX $0015 = #$00
 00:957B:A5 14     LDA $0014 = #$0F
 00:957D:C5 18     CMP $0018 = #$0F
 00:957F:A5 15     LDA $0015 = #$00
 00:9581:E5 19     SBC $0019 = #$00
 00:9583:90 03     BCC $9588
 00:9585:4C 1A 96  JMP $961A
 00:9588:18        CLC
 00:9589:A9 E0     LDA #$E0
 00:958B:65 06     ADC $0006 = #$C8
 00:958D:85 18     STA $0018 = #$0F
 00:958F:8A        TXA
 00:9590:65 07     ADC $0007 = #$8B
 00:9592:85 19     STA $0019 = #$00
 00:9594:A9 01     LDA #$01
 00:9596:85 14     STA $0014 = #$0F
 00:9598:86 15     STX $0015 = #$00
 00:959A:B1 06     LDA ($06),Y @ $8BC9 = #$8E
 00:959C:85 10     STA $0010 = #$00
 00:959E:86 11     STX $0011 = #$00
 00:95A0:A0 10     LDY #$10
 00:95A2:A2 14     LDX #$14
 00:95A4:A9 0C     LDA #$0C
 00:95A6:20 3A E4  JSR $E43A
 00:95A9:18        CLC
 00:95AA:A5 0C     LDA $000C = #$8C
 00:95AC:65 18     ADC $0018 = #$0F
 00:95AE:85 14     STA $0014 = #$0F
 00:95B0:A5 0D     LDA $000D = #$05
 00:95B2:65 19     ADC $0019 = #$00
 00:95B4:85 15     STA $0015 = #$00
 00:95B6:B1 14     LDA ($14),Y @ $0010 = #$00
 00:95B8:48        PHA
 00:95B9:A1 14     LDA ($14,X) @ $0000 = #$BA
 00:95BB:48        PHA
 00:95BC:84 18     STY $0018 = #$0F
 00:95BE:86 19     STX $0019 = #$00
 00:95C0:A0 0D     LDY #$0D
 00:95C2:B1 04     LDA ($04),Y @ $058D = #$DD
 00:95C4:85 14     STA $0014 = #$0F
 00:95C6:86 15     STX $0015 = #$00
 00:95C8:A0 14     LDY #$14
 00:95CA:A2 18     LDX #$18
 00:95CC:A9 10     LDA #$10
 00:95CE:20 3A E4  JSR $E43A
 00:95D1:18        CLC
 00:95D2:A5 10     LDA $0010
 00:95D4:69 E8     ADC #$E8
 00:95D6:85 18     STA $0018
 00:95D8:A5 11     LDA $0011
 00:95DA:69 9F     ADC #$9F
 00:95DC:85 19     STA $0019
 00:95DE:A1 18     LDA ($18,X)
 00:95E0:85 08     STA $0008
 00:95E2:B1 18     LDA ($18),Y
 00:95E4:85 09     STA $0009   ; Perform operation (02)
 00:95E6:20 8F E4  JSR $E48F
 
 04
 
 00:95EA:A5 08     LDA $0008 = #$C7
 00:95EC:A0 D7     LDY #$D7
 00:95EE:91 06     STA ($06),Y @ $8BC9 = #$8E
 00:95F0:88        DEY
 00:95F1:B1 06     LDA ($06),Y @ $8BC9 = #$8E
 00:95F3:85 18     STA $0018 = #$0F
 00:95F5:86 19     STX $0019 = #$00
 00:95F7:C8        INY
 00:95F8:B1 06     LDA ($06),Y @ $8BC9 = #$8E
 00:95FA:85 14     STA $0014 = #$0F
 00:95FC:86 15     STX $0015 = #$00
 00:95FE:A5 18     LDA $0018 = #$0F
 00:9600:C5 14     CMP $0014 = #$0F
 00:9602:A5 19     LDA $0019 = #$00
 00:9604:E5 15     SBC $0015 = #$00
 00:9606:90 03     BCC $960B
 00:9608:4C 17 96  JMP $9617
 00:960B:B1 06     LDA ($06),Y @ $8BC9 = #$8E
 00:960D:88        DEY
 00:960E:91 06     STA ($06),Y @ $8BC9 = #$8E
 00:9610:A0 D9     LDY #$D9
 00:9612:B1 06     LDA ($06),Y @ $8BC9 = #$8E
 00:9614:88        DEY
 00:9615:91 06     STA ($06),Y @ $8BC9 = #$8E
 00:9617:4C 60 95  JMP $9560
 00:961A:18        CLC
 00:961B:A9 E0     LDA #$E0
 00:961D:65 06     ADC $0006 = #$C8
 00:961F:85 18     STA $0018 = #$0F
 00:9621:8A        TXA
 00:9622:65 07     ADC $0007 = #$8B
 00:9624:85 19     STA $0019 = #$00
 00:9626:A9 01     LDA #$01
 00:9628:85 14     STA $0014 = #$0F
 00:962A:86 15     STX $0015 = #$00
 00:962C:A0 DB     LDY #$DB
 00:962E:B1 06     LDA ($06),Y @ $8BC9 = #$8E
 00:9630:85 10     STA $0010 = #$00
 00:9632:86 11     STX $0011 = #$00
 00:9634:A0 10     LDY #$10
 00:9636:A2 14     LDX #$14
 00:9638:A9 0C     LDA #$0C
 00:963A:20 3A E4  JSR $E43A
 00:963D:18        CLC
 00:963E:A5 0C     LDA $000C = #$8C
 00:9640:65 18     ADC $0018 = #$0F
 00:9642:85 14     STA $0014 = #$0F
 00:9644:A5 0D     LDA $000D = #$05
 00:9646:65 19     ADC $0019 = #$00
 00:9648:85 15     STA $0015 = #$00
 00:964A:A1 14     LDA ($14,X) @ $0000 = #$BA
 00:964C:A0 DE     LDY #$DE
 00:964E:91 06     STA ($06),Y @ $8BC9 = #$8E
 00:9650:A0 01     LDY #$01
 00:9652:B1 14     LDA ($14),Y @ $0010 = #$00
 00:9654:A0 DF     LDY #$DF
 00:9656:91 06     STA ($06),Y @ $8BC9 = #$8E
 00:9658:18        CLC
 00:9659:A9 E0     LDA #$E0
 00:965B:65 06     ADC $0006 = #$C8
 00:965D:85 18     STA $0018 = #$0F
 00:965F:8A        TXA
 00:9660:65 07     ADC $0007 = #$8B
 00:9662:85 19     STA $0019 = #$00
 00:9664:A9 01     LDA #$01
 00:9666:85 14     STA $0014 = #$0F
 00:9668:86 15     STX $0015 = #$00
 00:966A:A0 DB     LDY #$DB
 00:966C:B1 06     LDA ($06),Y @ $8BC9 = #$8E
 00:966E:85 10     STA $0010 = #$00
 00:9670:86 11     STX $0011 = #$00
 00:9672:A0 10     LDY #$10
 00:9674:A2 14     LDX #$14
 00:9676:A9 0C     LDA #$0C
 00:9678:20 3A E4  JSR $E43A
 00:967B:18        CLC
 00:967C:A5 0C     LDA $000C = #$8C
 00:967E:65 18     ADC $0018 = #$0F
 00:9680:85 14     STA $0014 = #$0F
 00:9682:A5 0D     LDA $000D = #$05
 00:9684:65 19     ADC $0019 = #$00
 00:9686:85 15     STA $0015 = #$00
 00:9688:18        CLC
 00:9689:A9 E0     LDA #$E0
 00:968B:65 06     ADC $0006 = #$C8
 00:968D:85 18     STA $0018 = #$0F
 00:968F:8A        TXA
 00:9690:65 07     ADC $0007 = #$8B
 00:9692:85 19     STA $0019 = #$00
 00:9694:84 10     STY $0010 = #$00
 00:9696:86 11     STX $0011 = #$00
 00:9698:A0 D8     LDY #$D8
 00:969A:B1 06     LDA ($06),Y @ $8BC9 = #$8E
 00:969C:85 0C     STA $000C = #$8C
 00:969E:86 0D     STX $000D = #$05
 00:96A0:A0 0C     LDY #$0C
 00:96A2:A2 10     LDX #$10
 00:96A4:A9 08     LDA #$08
 00:96A6:20 3A E4  JSR $E43A
 00:96A9:18        CLC
 00:96AA:A5 08     LDA $0008 = #$C7
 00:96AC:65 18     ADC $0018 = #$0F
 00:96AE:85 10     STA $0010 = #$00
 00:96B0:A5 09     LDA $0009 = #$A9
 00:96B2:65 19     ADC $0019 = #$00
 00:96B4:85 11     STA $0011 = #$00
 00:96B6:A1 10     LDA ($10,X) @ $0000 = #$BA
 00:96B8:81 14     STA ($14,X) @ $0000 = #$BA
 00:96BA:B1 10     LDA ($10),Y @ $0001 = #$DD
 00:96BC:91 14     STA ($14),Y @ $0010 = #$00
 00:96BE:18        CLC
 00:96BF:A9 E0     LDA #$E0
 00:96C1:65 06     ADC $0006 = #$C8
 00:96C3:85 18     STA $0018 = #$0F
 00:96C5:8A        TXA
 00:96C6:65 07     ADC $0007 = #$8B
 00:96C8:85 19     STA $0019 = #$00
 00:96CA:84 14     STY $0014 = #$0F
 00:96CC:86 15     STX $0015 = #$00
 00:96CE:A0 D8     LDY #$D8
 00:96D0:B1 06     LDA ($06),Y @ $8BC9 = #$8E
 00:96D2:85 10     STA $0010 = #$00
 00:96D4:86 11     STX $0011 = #$00
 00:96D6:A0 10     LDY #$10
 00:96D8:A2 14     LDX #$14
 00:96DA:A9 0C     LDA #$0C
 00:96DC:20 3A E4  JSR $E43A
 00:96DF:18        CLC
 00:96E0:A5 0C     LDA $000C = #$8C
 00:96E2:65 18     ADC $0018 = #$0F
 00:96E4:85 14     STA $0014 = #$0F
 00:96E6:A5 0D     LDA $000D = #$05
 00:96E8:65 19     ADC $0019 = #$00
 00:96EA:85 15     STA $0015 = #$00
 00:96EC:A0 DE     LDY #$DE
 00:96EE:B1 06     LDA ($06),Y @ $8BC9 = #$8E
 00:96F0:81 14     STA ($14,X) @ $0000 = #$BA
 00:96F2:C8        INY
 00:96F3:B1 06     LDA ($06),Y @ $8BC9 = #$8E
 00:96F5:A0 01     LDY #$01
 00:96F7:91 14     STA ($14),Y @ $0010 = #$00
 00:96F9:4C 9E 94  JMP $949E
 00:96FC:8A        TXA
 00:96FD:A0 DB     LDY #$DB
 00:96FF:91 06     STA ($06),Y @ $8BC9 = #$8E
 00:9701:4C 10 97  JMP $9710
 00:9704:18        CLC
 00:9705:A9 01     LDA #$01
 00:9707:A0 DB     LDY #$DB
 00:9709:71 06     ADC ($06),Y @ $8BC9 = #$8E
 00:970B:91 06     STA ($06),Y @ $8BC9 = #$8
 00:970D:8A        TXA
 00:970E:69 00     ADC #$00
 00:9710:A0 DA     LDY #$DA
 00:9712:B1 06     LDA ($06),Y @ $8BC9 = #$8E
 00:9714:85 18     STA $0018 = #$0F
 00:9716:86 19     STX $0019 = #$00
 00:9718:C8        INY
 00:9719:B1 06     LDA ($06),Y @ $8BC9 = #$8E
 00:971B:85 14     STA $0014 = #$0F
 00:971D:86 15     STX $0015 = #$00
 00:971F:A5 14     LDA $0014 = #$0F
 00:9721:C5 18     CMP $0018 = #$0F
 00:9723:A5 15     LDA $0015 = #$00
 00:9725:E5 19     SBC $0019 = #$00
 00:9727:90 03     BCC $972C
 00:9729:4C 84 97  JMP $9784
 00:972C:A0 0C     LDY #$0C
 00:972E:B1 04     LDA ($04),Y @ $058D = #$DD
 00:9730:48        PHA
 00:9731:88        DEY
 00:9732:B1 04     LDA ($04),Y @ $058D = #$DD
 00:9734:48        PHA
 00:9735:18        CLC
 00:9736:A9 E0     LDA #$E0
 00:9738:65 06     ADC $0006 = #$C8
 00:973A:85 18     STA $0018 = #$0F
 00:973C:8A        TXA
 00:973D:65 07     ADC $0007 = #$8B
 00:973F:85 19     STA $0019 = #$00
 00:9741:A9 01     LDA #$01
 00:9743:85 14     STA $0014 = #$0F
 00:9745:86 15     STX $0015 = #$00
 00:9747:A0 DB     LDY #$DB
 00:9749:B1 06     LDA ($06),Y @ $8BC9 = #$8E
 00:974B:85 10     STA $0010 = #$00
 00:974D:86 11     STX $0011 = #$00
 00:974F:A0 10     LDY #$10
 00:9751:A2 14     LDX #$14
 00:9753:A9 0C     LDA #$0C
 00:9755:20 3A E4  JSR $E43A
 00:9758:18        CLC
 00:9759:A5 0C     LDA $000C = #$8C
 00:975B:65 18     ADC $0018 = #$0F
 00:975D:85 14     STA $0014 = #$0F
 00:975F:A5 0D     LDA $000D = #$05
 00:9761:65 19     ADC $0019 = #$00
 00:9763:85 15     STA $0015 = #$00
 00:9765:B1 14     LDA ($14),Y @ $0010 = #$00
 00:9767:48        PHA
 00:9768:A1 14     LDA ($14,X) @ $0000 = #$BA
 00:976A:48        PHA
 00:976B:A9 A5     LDA #$A5
 00:976D:48        PHA
 00:976E:A9 78     LDA #$78
 00:9770:48        PHA
 00:9771:8A        TXA
 00:9772:48        PHA
 00:9773:A9 E0     LDA #$E0
 00:9775:48        PHA
 00:9776:8A        TXA
 00:9777:48        PHA
 00:9778:A9 02     LDA #$02
 00:977A:48        PHA
 00:977B:20 82 E3  JSR $E382
 
 FUNCTION $DD79 (-C)
 
 00:9781:4C 04 97  JMP $9704
 00:9784:60        RTS -----------------------------------------
 

====================================================
FUNCTION $9785

20 E3 E2 00 EE FF

Meta EF = Nation ID of (03/04)
Meta F1/F2 = 70% of assigned officers in Current city
Meta FE/FF = Current city of Nation (1/2)

 00:978B:A0 EE     LDY #$EE
 00:978D:91 06     STA ($06),Y
 00:978F:A9 12     LDA #$12
 00:9791:85 18     STA $0018
 00:9793:86 19     STX $0019
 00:9795:38        SEC
 00:9796:A0 0D     LDY #$0D
 00:9798:B1 04     LDA ($04),Y
 00:979A:E9 68     SBC #$68
 00:979C:85 14     STA $0014
 00:979E:C8        INY
 00:979F:B1 04     LDA ($04),Y
 00:97A1:E9 70     SBC #$70
 00:97A3:85 15     STA $0015
 00:97A5:A0 14     LDY #$14
 00:97A7:A2 18     LDX #$18
 00:97A9:A9 10     LDA #$10
 00:97AB:20 23 E2  JSR $E223
 00:97AE:A5 10     LDA $0010   ; Nation ID of (03/04)
 00:97B0:A0 EF     LDY #$EF
 00:97B2:91 06     STA ($06),Y
 
 00:97B4:A0 0B     LDY #$0B
 00:97B6:B1 04     LDA ($04),Y
 00:97B8:85 18     STA $0018
 00:97BA:C8        INY
 00:97BB:B1 04     LDA ($04),Y
 00:97BD:85 19     STA $0019
 00:97BF:A1 18     LDA ($18,X)
 00:97C1:A0 FE     LDY #$FE
 00:97C3:91 06     STA ($06),Y
 00:97C5:A0 01     LDY #$01
 00:97C7:B1 18     LDA ($18),Y
 00:97C9:A0 FF     LDY #$FF
 00:97CB:91 06     STA ($06),Y  ; Load 1st city of nation (01/02)
 00:97CD:4C E8 97  JMP $97E8
 
 ----------------
 LOOP
 
 00:97D0:A0 FE     LDY #$FE
 00:97D2:B1 06     LDA ($06),Y
 00:97D4:85 18     STA $0018
 00:97D6:C8        INY
 00:97D7:B1 06     LDA ($06),Y
 00:97D9:85 19     STA $0019
 00:97DB:A1 18     LDA ($18,X)
 00:97DD:88        DEY
 00:97DE:91 06     STA ($06),Y
 00:97E0:A0 01     LDY #$01
 00:97E2:B1 18     LDA ($18),Y
 00:97E4:A0 FF     LDY #$FF
 00:97E6:91 06     STA ($06),Y ; Advance to next city in list
 -------------
 
 00:97E8:A0 FE     LDY #$FE
 00:97EA:B1 06     LDA ($06),Y 
 00:97EC:C8        INY
 00:97ED:11 06     ORA ($06),Y
 00:97EF:D0 03     BNE $97F4
 00:97F1:4C E3 99  JMP $99E3   ; If end of city list has been reached
 00:97F4:8A        TXA
 00:97F5:48        PHA
 00:97F6:A9 5A     LDA #$5A
 00:97F8:48        PHA
 00:97F9:B1 06     LDA ($06),Y
 00:97FB:48        PHA
 00:97FC:88        DEY
 00:97FD:B1 06     LDA ($06),Y
 00:97FF:48        PHA
 00:9800:20 82 E3  JSR $E382
 
 02 D4 04          Tally # of men assigned to officers in (1/2)
 
 00:9806:A5 09     LDA $0009
 00:9808:48        PHA
 00:9809:A5 08     LDA $0008
 00:980B:48        PHA
 00:980C:20 82 E3  JSR $E382
 
 0F DE 06          Find 70% of value
 
 00:9812:A5 08     LDA $0008
 00:9814:A0 F1     LDY #$F1
 00:9816:91 06     STA ($06),Y
 00:9818:A5 09     LDA $0009
 00:981A:C8        INY
 00:981B:91 06     STA ($06),Y
 
 00:981D:8A        TXA
 00:981E:A0 F0     LDY #$F0
 00:9820:91 06     STA ($06),Y @ $0449 = #$00
 00:9822:4C 31 98  JMP $9831
 
 LOOP?
 00:9825:18        CLC
 00:9826:A9 01     LDA #$01
 00:9828:A0 F0     LDY #$F0
 00:982A:71 06     ADC ($06),Y
 00:982C:91 06     STA ($06),Y
 00:982E:8A        TXA
 00:982F:69 00     ADC #$00
 
 00:9831:A0 F0     LDY #$F0
 00:9833:B1 06     LDA ($06),Y
 00:9835:85 18     STA $0018
 00:9837:86 19     STX $0019
 00:9839:A5 18     LDA $0018
 00:983B:C9 02     CMP #$02
 00:983D:A5 19     LDA $0019
 00:983F:E9 00     SBC #$00
 00:9841:90 03     BCC $9846
 00:9843:4C E0 99  JMP $99E0
 00:9846:B1 06     LDA ($06),Y
 00:9848:85 18     STA $0018
 00:984A:86 19     STX $0019
 00:984C:A5 18     LDA $0018
 00:984E:05 19     ORA $0019
 00:9850:F0 03     BEQ $9855
 00:9852:4C 90 98  JMP $9890
 00:9855:18        CLC
 00:9856:A9 F3     LDA #$F3
 00:9858:65 06     ADC $0006 = #$48
 00:985A:85 18     STA $0018 = #$00
 00:985C:8A        TXA
 00:985D:65 07     ADC $0007 = #$04
 00:985F:85 19     STA $0019 = #$00
 00:9861:A5 19     LDA $0019 = #$00
 00:9863:48        PHA
 00:9864:A5 18     LDA $0018 = #$00
 00:9866:48        PHA
 00:9867:A0 FF     LDY #$FF
 00:9869:B1 06     LDA ($06),Y @ $0449 = #$00
 00:986B:48        PHA
 00:986C:88        DEY
 00:986D:B1 06     LDA ($06),Y @ $0449 = #$00
 00:986F:48        PHA
 00:9870:20 82 E3  JSR $E382
 
 E6 D0 06          Retrieve list of cities adjacent by land to (1/2)
 
>00:9876:18        CLC
 00:9877:A9 F3     LDA #$F3
 00:9879:65 06     ADC $0006 = #$48
 00:987B:85 18     STA $0018 = #$3B
 00:987D:8A        TXA
 00:987E:65 07     ADC $0007 = #$04
 00:9880:85 19     STA $0019 = #$05
 00:9882:A5 18     LDA $0018 = #$3B
 00:9884:A0 FA     LDY #$FA
 00:9886:91 06     STA ($06),Y @ $0449 = #$00
 00:9888:A5 19     LDA $0019 = #$05
 00:988A:C8        INY
 00:988B:91 06     STA ($06),Y @ $0449 = #$00
 00:988D:4C FA 98  JMP $98FA
 00:9890:8A        TXA
 00:9891:48        PHA
 00:9892:A9 FF     LDA #$FF
 00:9894:48        PHA
 00:9895:8A        TXA
 00:9896:48        PHA
 00:9897:A9 03     LDA #$03
 00:9899:48        PHA
 00:989A:A0 FF     LDY #$FF
 00:989C:B1 06     LDA ($06),Y @ $0449 = #$00
 00:989E:48        PHA
 00:989F:88        DEY
 00:98A0:B1 06     LDA ($06),Y @ $0449 = #$00
 00:98A2:48        PHA
 00:98A3:20 82 E3  JSR $E382
 
 0B D1 08          Hidden stat for city (1/2)
 
 00:98A9:86 09     STX $0009
 00:98AB:98        TYA
 00:98AC:25 08     AND $0008   ; Check if city has a port
 00:98AE:85 18     STA $0018 
 00:98B0:8A        TXA
 00:98B1:85 19     STA $0019 
 00:98B3:A5 18     LDA $0018 
 00:98B5:D0 03     BNE $98BA
 00:98B7:4C F7 98  JMP $98F7   ; If city is landlocked
 00:98BA:A9 03     LDA #$03
 00:98BC:85 18     STA $0018
 00:98BE:86 19     STX $0019
 00:98C0:A2 18     LDX #$18
 00:98C2:20 DF E3  JSR $E3DF
 00:98C5:A0 FF     LDY #$FF
 00:98C7:B1 06     LDA ($06),Y
 00:98C9:48        PHA
 00:98CA:88        DEY
 00:98CB:B1 06     LDA ($06),Y @ $0449 = #$00
 00:98CD:48        PHA
 00:98CE:20 82 E3  JSR $E382
 
 3C D5 04          Identify sea of city (1/2)
 
 00:98D4:86 09     STX $0009
 00:98D6:A2 18     LDX #$18
 00:98D8:20 04 E4  JSR $E404
 00:98DB:A0 08     LDY #$08
 00:98DD:A2 18     LDX #$18
 00:98DF:A9 14     LDA #$14
 00:98E1:20 3A E4  JSR $E43A
 00:98E4:18        CLC
 00:98E5:A5 14     LDA $0014 = #$00
 00:98E7:69 58     ADC #$58
 00:98E9:A0 FA     LDY #$FA
 00:98EB:91 06     STA ($06),Y @ $0449 = #$00
 00:98ED:A5 15     LDA $0015 = #$00
 00:98EF:69 DF     ADC #$DF
 00:98F1:C8        INY
 00:98F2:91 06     STA ($06),Y @ $0449 = #$00
 00:98F4:4C FA 98  JMP $98FA
 00:98F7:4C E0 99  JMP $99E0
 00:98FA:4C 0C 99  JMP $990C
 00:98FD:18        CLC
 00:98FE:A9 01     LDA #$01
 00:9900:A0 FA     LDY #$FA
 00:9902:71 06     ADC ($06),Y @ $0449 = #$00
 00:9904:91 06     STA ($06),Y @ $0449 = #$00
 00:9906:8A        TXA
 00:9907:C8        INY
 00:9908:71 06     ADC ($06),Y @ $0449 = #$00
 00:990A:91 06     STA ($06),Y @ $0449 = #$00
 00:990C:A0 FA     LDY #$FA
 00:990E:B1 06     LDA ($06),Y @ $0449 = #$00
 00:9910:85 18     STA $0018 = #$3B
 00:9912:C8        INY
 00:9913:B1 06     LDA ($06),Y @ $0449 = #$00
 00:9915:85 19     STA $0019 = #$05
 00:9917:A1 18     LDA ($18,X) @ $053B = #$22
 00:9919:85 14     STA $0014 = #$00
 00:991B:86 15     STX $0015 = #$00
 00:991D:A5 14     LDA $0014 = #$00
 00:991F:C9 FF     CMP #$FF
 00:9921:D0 04     BNE $9927
 00:9923:A5 15     LDA $0015 = #$00
 00:9925:C9 00     CMP #$00
 00:9927:D0 03     BNE $992C
 00:9929:4C DD 99  JMP $99DD
 00:992C:A9 1C     LDA #$1C
 00:992E:85 18     STA $0018 = #$3B
 00:9930:86 19     STX $0019 = #$05
 00:9932:A0 FA     LDY #$FA
 00:9934:B1 06     LDA ($06),Y @ $0449 = #$00
 00:9936:85 14     STA $0014 = #$00
 00:9938:C8        INY
 00:9939:B1 06     LDA ($06),Y @ $0449 = #$00
 00:993B:85 15     STA $0015 = #$00
 00:993D:A1 14     LDA ($14,X) @ $0000 = #$75
 00:993F:85 10     STA $0010 = #$99
 00:9941:86 11     STX $0011 = #$A5
 00:9943:A0 10     LDY #$10
 00:9945:A2 18     LDX #$18
 00:9947:A9 14     LDA #$14
 00:9949:20 C1 E1  JSR $E1C1
 00:994C:18        CLC
 00:994D:A5 14     LDA $0014 = #$00
 00:994F:69 76     ADC #$76
 00:9951:A0 FC     LDY #$FC
 00:9953:91 06     STA ($06),Y @ $0449 = #$00
 00:9955:A5 15     LDA $0015 = #$00
 00:9957:69 71     ADC #$71
 00:9959:C8        INY
 00:995A:91 06     STA ($06),Y @ $0449 = #$00
 00:995C:88        DEY
 00:995D:B1 06     LDA ($06),Y @ $0449 = #$00
 00:995F:85 18     STA $0018 = #$3B
 00:9961:C8        INY
 00:9962:B1 06     LDA ($06),Y @ $0449 = #$00
 00:9964:85 19     STA $0019 = #$05
 00:9966:A0 02     LDY #$02
 00:9968:B1 18     LDA ($18),Y @ $053C = #$FF
 00:996A:C8        INY
 00:996B:11 18     ORA ($18),Y @ $053C = #$FF
 00:996D:F0 03     BEQ $9972
 00:996F:4C 7B 99  JMP $997B
 00:9972:A9 01     LDA #$01
 00:9974:85 18     STA $0018 = #$3B
 00:9976:86 19     STX $0019 = #$05
 00:9978:4C 7F 99  JMP $997F
 00:997B:86 18     STX $0018 = #$3B
 00:997D:86 19     STX $0019 = #$05
 00:997F:A5 18     LDA $0018 = #$3B
 00:9981:F0 03     BEQ $9986
 00:9983:4C DA 99  JMP $99DA
 00:9986:A0 EF     LDY #$EF
 00:9988:B1 06     LDA ($06),Y @ $0449 = #$00
 00:998A:85 18     STA $0018 = #$3B
 00:998C:86 19     STX $0019 = #$05
 00:998E:A0 FC     LDY #$FC
 00:9990:B1 06     LDA ($06),Y @ $0449 = #$00
 00:9992:85 14     STA $0014 = #$00
 00:9994:C8        INY
 00:9995:B1 06     LDA ($06),Y @ $0449 = #$00
 00:9997:85 15     STA $0015 = #$00
 00:9999:A0 04     LDY #$04
 00:999B:B1 14     LDA ($14),Y @ $0001 = #$98
 00:999D:85 10     STA $0010 = #$99
 00:999F:86 11     STX $0011 = #$A5
 00:99A1:A5 10     LDA $0010 = #$99
 00:99A3:C5 18     CMP $0018 = #$3B
 00:99A5:D0 04     BNE $99AB
 00:99A7:A5 11     LDA $0011 = #$A5
 00:99A9:C5 19     CMP $0019 = #$05
 00:99AB:F0 03     BEQ $99B0
 00:99AD:4C DA 99  JMP $99DA
 00:99B0:A0 FD     LDY #$FD
 00:99B2:B1 06     LDA ($06),Y @ $0449 = #$00
 00:99B4:48        PHA
 00:99B5:88        DEY
 00:99B6:B1 06     LDA ($06),Y @ $0449 = #$00
 00:99B8:48        PHA
 00:99B9:20 82 E3  JSR $E382
 
 02 D4 04          Tally the # of men assigned to officers in city FC/FD
 
 00:99BF:A5 08     LDA $0008
 00:99C1:A0 F1     LDY #$F1
 00:99C3:D1 06     CMP ($06),Y
 00:99C5:A5 09     LDA $0009
 00:99C7:C8        INY
 00:99C8:F1 06     SBC ($06),Y
 00:99CA:B0 03     BCS $99CF
 00:99CC:4C D4 99  JMP $99D4
 00:99CF:86 08     STX $0008   ; Return #$00
 00:99D1:86 09     STX $0009
 00:99D3:60        RTS -----------------------------------------
 00:99D4:A9 01     LDA #$01
 00:99D6:A0 EE     LDY #$EE
 00:99D8:91 06     STA ($06),Y 
 00:99DA:4C FD 98  JMP $98FD
 00:99DD:4C 25 98  JMP $9825
 00:99E0:4C D0 97  JMP $97D0 
 00:99E3:A0 EE     LDY #$EE
 00:99E5:B1 06     LDA ($06),Y
 00:99E7:85 08     STA $0008   ; Return meta EE
 00:99E9:86 09     STX $0009   
 00:99EB:60        RTS -----------------------------------------
====================================================
FUNCTION $99EC
Tallies # of officers with combat skill?

Preloaded 01/02 = City
Meta FE/FF = Commander
Meta FB/FC = Counter? (Starts at 0)


 00:99F2:A0 0B     LDY #$0B
 00:99F4:B1 04     LDA ($04),Y
 00:99F6:85 18     STA $0018
 00:99F8:C8        INY
 00:99F9:B1 04     LDA ($04),Y
 00:99FB:85 19     STA $0019
 00:99FD:A0 02     LDY #$02
 00:99FF:B1 18     LDA ($18),Y
 00:9A01:A0 FE     LDY #$FE
 00:9A03:91 06     STA ($06),Y @ $E1F2 = #$52
 00:9A05:A0 03     LDY #$03
 00:9A07:B1 18     LDA ($18),Y @ $00FF = #$00
 00:9A09:A0 FF     LDY #$FF
 00:9A0B:91 06     STA ($06),Y @ $E1F2 = #$52
 00:9A0D:8A        TXA
 00:9A0E:A0 FB     LDY #$FB
 00:9A10:91 06     STA ($06),Y @ $E1F2 = #$52
 00:9A12:C8        INY
 00:9A13:91 06     STA ($06),Y @ $E1F2 = #$52
 00:9A15:4C 30 9A  JMP $9A30
 
 
 00:9A18:A0 FE     LDY #$FE
 00:9A1A:B1 06     LDA ($06),Y @ $E1F2 = #$52
 00:9A1C:85 18     STA $0018 = #$00
 00:9A1E:C8        INY
 00:9A1F:B1 06     LDA ($06),Y @ $E1F2 = #$52
 00:9A21:85 19     STA $0019 = #$00
 00:9A23:A1 18     LDA ($18,X) @ $7300 = #$3B
 00:9A25:88        DEY
 00:9A26:91 06     STA ($06),Y @ $E1F2 = #$52
 00:9A28:A0 01     LDY #$01
 00:9A2A:B1 18     LDA ($18),Y @ $00FF = #$00
 00:9A2C:A0 FF     LDY #$FF
 00:9A2E:91 06     STA ($06),Y @ $E1F2 = #$52
 
 
 00:9A30:A0 FE     LDY #$FE
 00:9A32:B1 06     LDA ($06),Y
 00:9A34:C8        INY
 00:9A35:11 06     ORA ($06),Y
 00:9A37:D0 03     BNE $9A3C
 00:9A39:4C 0A 9B  JMP $9B0A
 
 00:9A3C:8A        TXA
 00:9A3D:48        PHA
 00:9A3E:A9 C0     LDA #$C0
 00:9A40:48        PHA
 00:9A41:88        DEY
 00:9A42:B1 06     LDA ($06),Y @ $E1F2 = #$52
 00:9A44:85 18     STA $0018 = #$00
 00:9A46:C8        INY
 00:9A47:B1 06     LDA ($06),Y @ $E1F2 = #$52
 00:9A49:85 19     STA $0019 = #$00
 00:9A4B:A0 05     LDY #$05
 00:9A4D:B1 18     LDA ($18),Y @ $00FF = #$00
 00:9A4F:85 14     STA $0014 = #$00
 00:9A51:86 15     STX $0015 = #$00
 00:9A53:A5 15     LDA $0015 = #$00
 00:9A55:48        PHA
 00:9A56:A5 14     LDA $0014 = #$00
 00:9A58:48        PHA
 00:9A59:20 82 E3  JSR $E382        / Function $D460 (-6) Isolate values

 00:9A5F:A5 08     LDA $0008 = #$01
 00:9A61:A0 FD     LDY #$FD
 00:9A63:91 06     STA ($06),Y @ $0458 = #$00
 00:9A65:8A        TXA
 00:9A66:48        PHA
 00:9A67:A9 0C     LDA #$0C
 00:9A69:48        PHA
 00:9A6A:C8        INY
 00:9A6B:B1 06     LDA ($06),Y @ $0458 = #$00
 00:9A6D:85 18     STA $0018 = #$9C
 00:9A6F:C8        INY
 00:9A70:B1 06     LDA ($06),Y @ $0458 = #$00
 00:9A72:85 19     STA $0019 = #$6E
 00:9A74:A0 05     LDY #$05
 00:9A76:B1 18     LDA ($18),Y @ $6E9D = #$6E
 00:9A78:85 14     STA $0014 = #$52
 00:9A7A:86 15     STX $0015 = #$00
 00:9A7C:A5 15     LDA $0015 = #$00
 00:9A7E:48        PHA
 00:9A7F:A5 14     LDA $0014 = #$52
 00:9A81:48        PHA
 00:9A82:20 82 E3  JSR $E382        / Function $D460 (-6) Isolate values
 
 00:9A88:86 09     STX $0009 = #$00
 00:9A8A:A0 FD     LDY #$FD
 00:9A8C:B1 06     LDA ($06),Y @ $0458 = #$00
 00:9A8E:85 18     STA $0018 = #$9C
 00:9A90:86 19     STX $0019 = #$6E
 00:9A92:A5 18     LDA $0018 = #$9C
 00:9A94:C5 08     CMP $0008 = #$00
 00:9A96:A5 19     LDA $0019 = #$6E
 00:9A98:E5 09     SBC $0009 = #$00
 00:9A9A:B0 03     BCS $9A9F
 00:9A9C:4C 07 9B  JMP $9B07
 00:9A9F:8A        TXA
 00:9AA0:48        PHA
 00:9AA1:A9 30     LDA #$30
 00:9AA3:48        PHA
 00:9AA4:C8        INY
 00:9AA5:B1 06     LDA ($06),Y @ $0458 = #$00
 00:9AA7:85 18     STA $0018 = #$9C
 00:9AA9:C8        INY
 00:9AAA:B1 06     LDA ($06),Y @ $0458 = #$00
 00:9AAC:85 19     STA $0019 = #$6E
 00:9AAE:A0 05     LDY #$05
 00:9AB0:B1 18     LDA ($18),Y @ $6E9D = #$6E
 00:9AB2:85 14     STA $0014 = #$52
 00:9AB4:86 15     STX $0015 = #$00
 00:9AB6:A5 15     LDA $0015 = #$00
 00:9AB8:48        PHA
 00:9AB9:A5 14     LDA $0014 = #$52
 00:9ABB:48        PHA
 00:9ABC:20 82 E3  JSR $E382          / Function $D460 (-6) Isolate values
 
 >00:9AC2:86 09     STX $0009 = #$00
 00:9AC4:A0 FD     LDY #$FD
 00:9AC6:B1 06     LDA ($06),Y @ $0458 = #$00
 00:9AC8:85 18     STA $0018 = #$9C
 00:9ACA:86 19     STX $0019 = #$6E
 00:9ACC:A5 08     LDA $0008 = #$01
 00:9ACE:C5 18     CMP $0018 = #$9C
 00:9AD0:A5 09     LDA $0009 = #$00
 00:9AD2:E5 19     SBC $0019 = #$6E
 00:9AD4:90 03     BCC $9AD9
 00:9AD6:4C 07 9B  JMP $9B07
 00:9AD9:C8        INY
 00:9ADA:B1 06     LDA ($06),Y @ $0458 = #$00
 00:9ADC:85 18     STA $0018 = #$9C
 00:9ADE:C8        INY
 00:9ADF:B1 06     LDA ($06),Y @ $0458 = #$00
 00:9AE1:85 19     STA $0019 = #$6E
 00:9AE3:A0 0B     LDY #$0B
 00:9AE5:B1 18     LDA ($18),Y @ $6E9D = #$6E
 00:9AE7:85 14     STA $0014 = #$52
 00:9AE9:86 15     STX $0015 = #$00
 00:9AEB:38        SEC
 00:9AEC:A9 28     LDA #$28
 00:9AEE:E5 14     SBC $0014 = #$52
 00:9AF0:85 18     STA $0018 = #$9C
 00:9AF2:8A        TXA
 00:9AF3:E5 15     SBC $0015 = #$00
 00:9AF5:85 19     STA $0019 = #$6E
 00:9AF7:18        CLC
 00:9AF8:A0 FB     LDY #$FB
 00:9AFA:B1 06     LDA ($06),Y @ $0458 = #$00
 00:9AFC:65 18     ADC $0018 = #$9C
 00:9AFE:91 06     STA ($06),Y @ $0458 = #$00
 00:9B00:C8        INY
 00:9B01:B1 06     LDA ($06),Y @ $0458 = #$00
 00:9B03:65 19     ADC $0019 = #$6E
 00:9B05:91 06     STA ($06),Y @ $0458 = #$00
 00:9B07:4C 18 9A  JMP $9A18
 00:9B0A:A0 0B     LDY #$0B
 00:9B0C:B1 04     LDA ($04),Y @ $0558 = #$E3
 00:9B0E:85 18     STA $0018 = #$9C
 00:9B10:C8        INY
 00:9B11:B1 04     LDA ($04),Y @ $0558 = #$E3
 00:9B13:85 19     STA $0019 = #$6E
 00:9B15:A0 19     LDY #$19
 00:9B17:B1 18     LDA ($18),Y @ $6E9D = #$6E
 00:9B19:48        PHA
 00:9B1A:88        DEY
 00:9B1B:B1 18     LDA ($18),Y @ $6E9D = #$6E
 00:9B1D:48        PHA
 00:9B1E:18        CLC
 00:9B1F:A9 FB     LDA #$FB
 00:9B21:65 06     ADC $0006 = #$57
 00:9B23:85 18     STA $0018 = #$9C
 00:9B25:8A        TXA
 00:9B26:65 07     ADC $0007 = #$04
 00:9B28:85 19     STA $0019 = #$6E
 00:9B2A:A5 19     LDA $0019 = #$6E
 00:9B2C:48        PHA
 00:9B2D:A5 18     LDA $0018 = #$9C
 00:9B2F:48        PHA
 00:9B30:20 82 E3  JSR $E382         / Function $DE6E (-6)
 
 00:9B36:A0 0B     LDY #$0B
 00:9B38:B1 04     LDA ($04),Y @ $0558 = #$E3
 00:9B3A:85 18     STA $0018 = #$9C
 00:9B3C:C8        INY
 00:9B3D:B1 04     LDA ($04),Y @ $0558 = #$E3
 00:9B3F:85 19     STA $0019 = #$6E
 00:9B41:A9 05     LDA #$05
 00:9B43:A0 18     LDY #$18
 00:9B45:D1 18     CMP ($18),Y @ $6E9D = #$6E
 00:9B47:8A        TXA
 00:9B48:C8        INY
 00:9B49:F1 18     SBC ($18),Y @ $6E9D = #$6E
 00:9B4B:90 03     BCC $9B50
 00:9B4D:4C 59 9B  JMP $9B59
 00:9B50:A9 32     LDA #$32
 00:9B52:85 18     STA $0018 = #$9C
 00:9B54:86 19     STX $0019 = #$6E
 00:9B56:4C 5F 9B  JMP $9B5F
 00:9B59:A9 5F     LDA #$5F
 00:9B5B:85 18     STA $0018 = #$9C
 00:9B5D:86 19     STX $0019 = #$6E
 00:9B5F:86 19     STX $0019 = #$6E
 00:9B61:A2 18     LDX #$18
 00:9B63:20 DF E3  JSR $E3DF
 00:9B66:48        PHA
 00:9B67:A9 64     LDA #$64
 00:9B69:48        PHA
 00:9B6A:20 82 E3  JSR $E382               / Function $D7D1 (-4) RNG #$00-#$63

 00:9B70:86 09     STX $0009 
 00:9B72:A2 18     LDX #$18
 00:9B74:20 04 E4  JSR $E404               / Store random value to $18/$19
 00:9B77:A5 08     LDA $0008
 00:9B79:C5 18     CMP $0018
 00:9B7B:A5 09     LDA $0009
 00:9B7D:E5 19     SBC $0019
 00:9B7F:90 03     BCC $9B84
 00:9B81:4C 8B 9B  JMP $9B8B
 
 00:9B84:84 18     STY $0018               / Set to 1 
 00:9B86:86 19     STX $0019
 00:9B88:4C 8F 9B  JMP $9B8F
 
 00:9B8B:86 18     STX $0018               / Set to 0
 00:9B8D:86 19     STX $0019
 
 00:9B8F:A5 18     LDA $0018
 00:9B91:D0 03     BNE $9B96
 00:9B93:4C 9E 9B  JMP $9B9E
 00:9B96:8A        TXA
 00:9B97:A0 FB     LDY #$FB
 00:9B99:91 06     STA ($06),Y @ $0458 = #$00
 00:9B9B:C8        INY
 00:9B9C:91 06     STA ($06),Y @ $0458 = #$00
 00:9B9E:A0 FB     LDY #$FB
 00:9BA0:B1 06     LDA ($06),Y @ $0458 = #$00
 00:9BA2:C8        INY
 00:9BA3:11 06     ORA ($06),Y @ $0458 = #$00
 00:9BA5:F0 03     BEQ $9BAA
 00:9BA7:4C B3 9B  JMP $9BB3
 00:9BAA:A9 FF     LDA #$FF
 00:9BAC:85 08     STA $0008 = #$01
 00:9BAE:86 09     STX $0009 = #$00
 00:9BB0:4C C9 9B  JMP $9BC9
 00:9BB3:8A        TXA
 00:9BB4:48        PHA
 00:9BB5:A9 C8     LDA #$C8
 00:9BB7:48        PHA
 00:9BB8:A0 FC     LDY #$FC
 00:9BBA:B1 06     LDA ($06),Y
 00:9BBC:48        PHA
 00:9BBD:88        DEY
 00:9BBE:B1 06     LDA ($06),Y
 00:9BC0:48        PHA
 00:9BC1:20 82 E3  JSR $E382      / Function $DCD6 (-6) Find smaller of two values
 
 00:9BC7:86 09     STX $0009 = #$00
 00:9BC9:86 09     STX $0009 = #$00
 00:9BCB:60        RTS -----------------------------------------
====================================================
FUNCTION $9D13
Find the officer in the given city with the best given stat.

$0A/$0B = City
$0C = Bitmask for stat
$0D = Stat type (0 = Civil, 1 = Combat)

9D13 LDA #$05
9D15 JSR $D346   / Store 4 preloaded values to $0A/$0B/$0C/$0D

9D18 LDA #$00
9D1A STA $0016

9D1C LDY #$02
9D1E LDA ($0A),Y 
9D20 STA $000E
9D22 STA $0010
9D24 INY
9D25 LDA ($0A),Y / $0E/$0F = current best
9D27 STA $000F   / $10/$11 = current officer
9D29 STA $0011

9D2B LDA $0010
9D2D ORA $0011   / Check if blank
9D2F BEQ $9D6A   / Exit

9D31 LDA $000C
9D33 STA $001A
9D35 LDY #$04
9D37 LDA $000D
9D39 BEQ $9D3C

9D3B INY

9D3C LDA ($10),Y / Civil or combat stat
9D3E AND $001A
9D40 LSR $001A
 00:9D42:B0 04     BCS $9D48
 00:9D44:4A        LSR
 00:9D45:4C 40 9D  JMP $9D40
 
 00:9D48:C5 16     CMP $0016 = #$09
 00:9D4A:F0 0C     BEQ $9D58
 00:9D4C:90 0A     BCC $9D58
 00:9D4E:85 16     STA $0016 = #$09
 00:9D50:A5 10     LDA $0010 = #$E7
 00:9D52:85 0E     STA $000E = #$E2
 00:9D54:A5 11     LDA $0011 = #$A0
 00:9D56:85 0F     STA $000F = #$04
 00:9D58:A0 00     LDY #$00
 00:9D5A:B1 10     LDA ($10),Y @ $A0E7 = #$02
 00:9D5C:85 18     STA $0018 = #$00
 00:9D5E:C8        INY
 00:9D5F:B1 10     LDA ($10),Y @ $A0E7 = #$02
 00:9D61:85 11     STA $0011 = #$A0
 00:9D63:A5 18     LDA $0018 = #$00
 00:9D65:85 10     STA $0010 = #$E7
 00:9D67:4C 2B 9D  JMP $9D2B
 
 00:9D6A:A5 0E     LDA $000E = #$E2
 00:9D6C:85 08     STA $0008 = #$00
 00:9D6E:A5 0F     LDA $000F = #$04
 00:9D70:85 09     STA $0009 = #$00
 00:9D72:60        RTS -----------------------------------------
====================================================
FUNCTION $9D9B 
Reset each officer's action flag for the month

 00:9D9B:A9 60     LDA #$60
 00:9D9D:85 0D     STA $000D
 00:9D9F:A9 05     LDA #$05
 00:9DA1:85 0C     STA $000C
 00:9DA3:A0 0E     LDY #$0E
 00:9DA5:A2 FF     LDX #$FF
 00:9DA7:B1 0C     LDA ($0C),Y
 00:9DA9:29 7F     AND #$7F
 00:9DAB:91 0C     STA ($0C),Y
 00:9DAD:CA        DEX
 00:9DAE:F0 EA     BEQ $9D9A
 00:9DB0:A5 0C     LDA $000C = #$9D
 00:9DB2:18        CLC
 00:9DB3:69 0F     ADC #$0F
 00:9DB5:85 0C     STA $000C
 00:9DB7:90 EE     BCC $9DA7
 00:9DB9:E6 0D     INC $000D
 00:9DBB:4C A7 9D  JMP $9DA7
====================================================
FUNCTION $9DBE
9DBE JSR $9E84   / Sets city to $0A/$0B
9DC1 LDY #$02
9DC3 LDA ($0A),Y
9DC5 STA $000C
9DC7 INY
9DC8 LDA ($0A),Y
9DCA STA $000D   / City - Officer 
9DCC LDA $000D
9DCE BNE $9DD4
9DD0 LDA $000C
9DD2 BEQ $9E2F   / Check if blank 
9DD4 JSR $9EAD   / Adds officer to list 
9DD7 JSR $9E74
9DDA JMP $9DCC

9E2F LDA $0008
9E31 ASL
9E32 TAY
9E33 LDA #$00
9E35 STA ($0E),Y / $7CF4/$7CF5 
9E37 INY
9E38 STA ($0E),Y
9E3A RTS ----------------------------------------- 
====================================================
SUBROUTINE $9E74

====================================================
SUBROUTINE $9E84
9E84 LDY #$03
9E86 LDA ($02),Y
9E88 STA $000B
9E8A DEY
9E8B LDA ($02),Y
9E8D STA $000A   / City
9E8F LDA #$7D
9E91 STA $0011
9E93 LDA #$14
9E95 STA $0010
9E97 LDA #$7C
9E99 STA $000F
9E9B LDA #$F4
9E9D STA $000E 
9E9F LDY #$10
9EA1 LDA #$00
9EA3 DEY
9EA4 STA ($10),Y
9EA6 BNE $9EA3
9EA8 STA $0008
9EAA STA $0009 
9EAC RTS -----------------------------------------
====================================================
SUBROUTINE $9EAD

====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9EB0                                           00 10
9EC0 11 01 04 02 12 03 13 33 34 35 36 22 20 12 21 06
9ED0 05 16 15 37 30 31 32 40 50 60

00 9EBE 00 = Screen value 00, PRG Bank 1 = E3
01 9EBF 10 = Screen value 00, PRG Bank 1 = E4
02 9EC0 11 = Screen value 01, PRG Bank 1 = E4
03 9EC1 01 = Screen value 01, PRG Bank 1 = E3
04 9EC2 04 = Screen value 04, PRG Bank 0 = E3
05 9EC3 02 = Screen value 02, PRG Bank 0 = E3
06 9EC4 12 = Screen value 02, PRG Bank 1 = E4
07 9EC5 03 = Screen value 03, PRG Bank 1 = E3
08 9EC6 13 = Screen value 03, PRG Bank 1 = E4
09 9EC7 33 = Screen value 03, PRG Bank 1 = E6
0A 9EC8 34 = Screen value 04, PRG Bank 1 = E6
0B 9EC9 35 = Screen value 05, PRG Bank 1 = E6
0C 9ECA 36 = Screen value 06, PRG Bank 1 = E6
0D 9ECB 22 = Screen value 02, PRG Bank 1 = E5
0E 9ECC 20 = Screen value 00, PRG Bank 1 = E5
0F 9ECD 12 = Screen value 02, PRG Bank 1 = E4
10 9ECE 21 = Screen value 01, PRG Bank 1 = E5
11 9ECF 06 = Screen value 06, PRG Bank 1 = E3
12 9ED0 05 = Screen value 05, PRG Bank 1 = E3
13 9ED1 16 = Screen value 06, PRG Bank 1 = E4
14 9ED2 15 = Screen value 05, PRG Bank 1 = E4
15 9ED3 37 = Screen value 07, PRG Bank 1 = E6
16 9ED4 30 = Screen value 00, PRG Bank 1 = E6
17 9ED5 31 = Screen value 01, PRG Bank 1 = E6
18 9ED6 32 = Screen value 02, PRG Bank 1 = E6
19 9ED7 40 = Screen value 00, PRG Bank 1 = E7
1A 9ED8 50 = Screen value 00, PRG Bank 1 = E8
1B 9ED9 60 = Screen value 00, PRG Bank 1 = E9

====================================================
DATA TABLE $9F71

CITIES' BGMS
01 DUBLIN       05
02 EDINBURGH    05
03 LIVERPOOL    05
04 BRISTOL      05
05 LONDON       05
06 CHRISTIANIA  08
07 STOCKHOLM    08
08 COPENHAGEN   08
09 AMSTERDAM    08
10 LUBECK       08
11 BERLIN       03
12 WARSAW       03
13 KONIGSBERG   03
14 STPETERSBURG 07
15 MINSK        07
16 SMOLENSK     07
17 MOSCOW       07
18 KIEV         07
19 KLAUSENBURG  06
20 BUCHAREST    06
21 BUDAPEST     03
22 VIENNA       03
23 PRAGUE       03
24 MUNICH       03
25 FRANKFURT    03
26 LILLE        01
27 ST.MALO      01
28 PARIS        01
29 BORDEAUX     01
30 LYON         01
31 MARSEILLES   01
32 MILAN        02
33 FLORENCE     02
34 VENICE       02
35 SARAJEVO     06
36 BELGRADE     06
37 ROME         02
38 NAPLES       02
39 ISTANBUL     06
40 ATHENS       06
41 CORUNNA      04
42 LISBON       04
43 GIBRALTAR    04 
44 MADRID       04
45 SARAGOSSA    04
46 BARCELONA    04
====================================================
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9F90                                              01                                            
9FA0 01 01 01 01 01 02 01 01 01 01 02 02 02 02 02 02
9FB0 02 04 04 04 04 02 03 01 01 03 03 03 03 03 03 04
9FC0 04 04 04 04 04 04 04 03 03 03 03 03 03 00 00 00

CITIES' MAP LOCATIONS
01 DUBLIN       01
02 EDINBURGH    01
03 LIVERPOOL    01
04 BRISTOL      01
05 LONDON       01
06 CHRISTIANIA  01
07 STOCKHOLM    02
08 COPENHAGEN   01
09 AMSTERDAM    01
10 LUBECK       01
11 BERLIN       01
12 WARSAW       02
13 KONIGSBERG   02
14 STPETERSBURG 02
15 MINSK        02
16 SMOLENSK     02
17 MOSCOW       02
18 KIEV         02
19 KLAUSENBURG  04
20 BUCHAREST    04
21 BUDAPEST     04
22 VIENNA       04
23 PRAGUE       02
24 MUNICH       03
25 FRANKFURT    01
26 LILLE        01
27 ST.MALO      03
28 PARIS        03
29 BORDEAUX     03
30 LYON         03
31 MARSEILLES   03
32 MILAN        03
33 FLORENCE     04
34 VENICE       04
35 SARAJEVO     04
36 BELGRADE     04
37 ROME         04
38 NAPLES       04
39 ISTANBUL     04
40 ATHENS       04
41 CORUNNA      03
42 LISBON       03
43 GIBRALTAR    03 
44 MADRID       03
45 SARAGOSSA    03
46 BARCELONA    03
====================================================
DATA TABLE $9FE0
00 - $789C
01 - $789E
02 - $789F
03 - $78A0
====================================================
DATA TABLE $9FE8
Sort codes

00 - $8E36 - Sort officers by sum of combat stats
01 - $8E6C - Sort officers by sum of civil stats
02 - $8EA2 - Sort officers by # of men
03 - $8EAB - Sort officers by loyalty
04 - $8EB4
05 - $8FC0 - 
====================================================
Page D4
ROM: 028010 - 02A00F

Market

----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8000 4C 03 E0 
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8003          20 BF E4 FA FF 0C 8B 18 B5 8C A4 6A BB 
8010 29 40 2B 40 D6 23 80 0A D2 19 BB 76 B0 CD 0B BB 
8020 2B 0A D0 2A 0A 55 C6 D7 17 80 0B CF 

Function $8003 (FA FF)
Returns the # of goods for sale on ship <00>
Args:
<0C> Ship #

8008 0C       
8009 8B 18    
800B B5       
800C 8C A4 6A    / $6AA4
800F BB       
8010 29       

8011 40       /
8012 2B       /

8013 40       /
8014 D6 24 80 /

Loop:
	8017 0A			 /
	8018 D2			 /
	8019 19			 /
	801A BB			 /
	801B 76			 /
	801C B0			 /
	801D CD			 /
	801E 0B			 /
	801F BB			 /
	8020 2B			 /

	8021 0A			 /
	8022 D0			 /
	8023 2A			 /

	8024 0A			 /
	8025 55			 /
	8026 C6			 /
	8027 D7 17 80    /

802A 0B
802B CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8020                                     20 BF E4 FE 
8030 FF 0C 8B 18 B5 8C A4 6A BB 2B 0B 8F 14 B0 B3 0B 
8040 8F 12 B0 5A B6 B3 0B 8F 10 B0 5A B6 B3 3C E9 03 
8050 80 02 B4 BB B4 BB B4 BB CF 

Function $802C (FE FF) -> Returns the # of storage space used by ship #<00>
Cargo + Lumber + Water/10 + Food/10

8031 0C
8032 8B 18
8034 B5
8035 8C A4 6A
8038 BB
8039 2B

803A 0B
803B 8F 14
803D B0
803E B3
803F 0B
8040 8F 12
8042 B0
8043 5A
8044 B6
8045 B3
8046 0B
8047 8F 10
8049 B0
804A 5A
804B B6
804C B3
804D 3C
804E E9 03 80 02
8052 B4
8053 BB
8054 B4
8055 BB
8056 B4
8057 BB
8058 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8050                            20 BF E4 00 00 0C D2 
8060 78 B3 8D 12 E9 70 C7 04 3D E9 32 D5 02 8F 12 B3 
8070 E9 26 D3 02 B3 3D E9 EA D9 02 B3 8E CA 94 E9 19 
8080 C7 06 8D 11 68 E9 70 C7 04 AA 6B 66 8E D2 94 E9 
8090 99 C7 04 CF 

Function $8059 (00 00)
Args:
<0C>
<0D>

805E 0C
805F D2
8060 78
8061 B3
8062 8D 12
8064 E9 70 C7 04 / Call $C770 -> Text pos 18, (2*<0C>+7)

8068 3D
8069 E9 32 D5 02 / Call $D532

806D 8F 12       
806F B3         
8070 E9 26 D3 02
8074 B3
8075 3D
8076 E9 EA D9 02 / Call $D9EA
807A B3         
807B 8E CA 94    / $94CA "%3d/%3d"
807E E9 19 C7 06 / Call $C719 -> Print

8082 8D 11       / Push #$11
8084 68          / Push #$08
8085 E9 70 C7 04 / Call $C770 -> Text pos  8,17

8089 AA 6B 66    / $666B (Total gold)
808C 8E D2 94    / $94D2 "Total gold: %5d"
808F E9 99 C7 04 / Call $C799 -> Print

8093 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8090             20 BF E4 F4 FF 89 FF A8 64 70 8E E7 
80A0 00 8E E0 AE 8E 6A AD 8D 11 8D 16 63 65 69 E9 D4 
80B0 EE 10 60 8E F9 00 61 8D 14 66 66 68 E9 D4 EE 0E 
80C0 64 67 E9 70 C7 04 61 8E E2 94 E9 03 C0 04 40 D6 
80D0 11 81 0D 16 BB D3 B3 36 E9 59 80 04 DE F6 FF B3 
80E0 06 D2 B4 BB B3 0D 16 BB D3 57 B5 8C 96 6C BB D3 
80F0 5F DA B3 E9 32 D5 02 B1 06 D2 78 B3 67 E9 70 C7 
8100 04 DE F6 FF B3 06 D2 B4 BB B0 B3 E9 6B D5 02 06 
8110 D0 26 06 1C C6 D7 D2 80 CF 
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8110                            20 BF E4 E3 FF 40 2B 
8120 60 60 6A 8D 14 67 66 68 E9 D4 EE 0E A5 67 70 5E 
8130 B5 8C B2 67 BB 85 E5 7B D3 8F 32 85 F5 0C 8B 18 
8140 B5 8C A4 6A BB 85 E9 76 85 F1 81 E9 D0 28 40 29 
8150 D6 66 82 81 F1 B0 D8 5C 82 0B D7 99 81 A5 67 70 
8160 55 B5 8C 0A B5 BB 85 E7 81 E7 D0 B3 E9 0C D3 02 
8170 A2 F7 FF 81 E7 72 B3 E9 0C D3 02 85 EF 87 E7 E9 
8180 0C D3 02 8B 58 B5 8C 64 B8 BB 85 E3 81 E5 B0 85 
8190 ED 81 E5 7C B0 85 EB 41 2B 09 D2 77 B3 67 E9 70 
81A0 C7 04 08 D3 D2 83 E3 BB 8F 24 B3 E9 26 D3 02 85 
81B0 F3 81 F5 B7 25 B7 14 81 F3 B7 25 B7 15 B7 01 B7 
81C0 19 64 00 00 00 B7 02 B7 27 85 F3 08 D3 B3 A0 F7 
81D0 FF B4 C0 D8 FE 81 81 EF 8B 32 B5 83 ED C3 D8 FE 
81E0 81 81 F5 B7 25 B7 14 81 EB B7 25 B7 15 B7 01 B7 
81F0 19 64 00 00 00 B7 02 B7 27 52 B6 D0 85 F3 09 D2 
8200 1E BB B3 81 F3 B1 09 D2 1F BB B3 81 F1 B0 B1 09 
8210 D2 1D BB B3 08 D3 D2 8C F5 94 BB B0 B1 81 13 19 
8220 BB B3 0A D4 09 D2 1D BB B0 B3 8E DF 95 E9 99 C7 
8230 04 09 D2 77 B3 8D 12 E9 70 C7 04 81 F1 B0 B3 8E 
8240 E2 95 E9 99 C7 04 09 D2 77 B3 8D 16 E9 70 C7 04 
8250 87 F3 8E E6 95 E9 99 C7 04 09 D0 29 81 F1 72 85 
8260 F1 08 D0 28 0A D0 2A 0A 55 C6 D7 53 81 09 CF 

Function $8119 (E3 FF)
Args:
<0C> Ship #?

fun8119(int shipNum)

811E 40
811F 2B

8120 60
8121 60
8122 6A
8123 8D 14
8125 67
8126 66
8127 68
8128 E9 D4 EE 05 / Call $EED4 -> Sysop 0x08 (Draw 20x10 black rectangle @ 06,07)

812C A5 67 70    / $7067 (current port)
812F 5E
8130 B5
8131 8C B2 67    
8134 BB
8135 85 E5       / loc_E5 = port stats 
8137 7B           
8138 D3          
8139 8F 32       
813B 85 F5       / loc_F5 = port prices

813D 0C          
813E 8B 18       /
8140 B5
8141 8C A4 6A    / $6AA4 (ships)
8144 BB
8145 85 E9       / loc_E9 = ship stats
8147 76          /
8148 85 F1       / loc_F1 = ship cargo #s

814A 81 E9       / thisShip
814C D0          /
814D 28          / loc_08 = cargo types

814E 40
814F 29          / loc_09 = 0

8150 D6 66 82    /

8153 81 F1
8155 B0          / curItem = *thisCargo
8156 D8 5C 82    / 

8159 0B
815A D7 99 81
  
815D A5 67 70
8160 55
8161 B5
8162 8C 0A B5
8165 BB
8167 85 E7       / l = someArray[CUR_CITY]
   
8169 81 E7
816B B3
816C E9 0C D3 02 / 
8170 A2 F7 FF    / m = fun_d30c (l)
   
8173 81 E7
8175 72
8177 E9 0C D3 02 /
817B 85 EF       / n = fun_d30c (l)
   
817D 87 E7
817F E9 0C D3 02
8183 8B 58
8185 B5
8186 8C 64 B8    / $B864
8189 BB
818A 85 E3       
   
818C 81 E5
818E B0
818F 85 ED

8191 81 E5  
8193 7C
8194 B0
8195 85 EB

8197 41
8198 2B
   
8199 09
819A D2
819B 77
819C B3
819D 67
819E E9 70 C7 04 / Call $C770
  
 825C 
----
8266 

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8190 ED 81 E5 7C B0 85 EB 41 2B 09 D2 77 B3 67 E9 70 
81A0 C7 04 08 D3 D2 83 E3 BB 8F 24 B3 E9 26 D3 02 85 
81B0 F3 81 F5 B7 25 B7 14 81 F3 B7 25 B7 15 B7 01 B7 
81C0 19 64 00 00 00 B7 02 B7 27 85 F3 08 D3 B3 A0 F7 
81D0 FF B4 C0 D8 FE 81 81 EF 8B 32 B5 83 ED C3 D8 FE 
81E0 81 81 F5 B7 25 B7 14 81 EB B7 25 B7 15 B7 01 B7 
81F0 19 64 00 00 00 B7 02 B7 27 52 B6 D0 85 F3 09 D2 
8200 1E BB B3 81 F3 B1 09 D2 1F BB B3 81 F1 B0 B1 09 
8210 D2 1D BB B3 08 D3 D2 8C F5 94 BB B0 B1 81 13 19 
8220 BB B3 0A D4 09 D2 1D BB B0 B3 8E DF 95 E9 99 C7 
8230 04 09 D2 77 B3 8D 12 E9 70 C7 04 81 F1 B0 B3 8E 
8240 E2 95 E9 99 C7 04 09 D2 77 B3 8D 16 E9 70 C7 04 
8250 87 F3 8E E6 95 E9 99 C7 04 09 D0 29 81 F1 72 85 
8260 F1 08 D0 28 0A D0 2A 0A 55 C6 D7 53 81 09 CF 
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8260                                              20 
8270 BF E4 D1 FF 3C E9 03 80 02 D7 8B 82 AC 89 B8 AC
8280 3F B8 8E EA 95 E9 F4 A3 02 40 CF A4 6B 66 8C 60 
8290 EA C0 D8 A4 82 AC 89 B8 AC 3F B8 8E 09 96 E9 F4 
82A0 A3 02 40 CF 40 85 D3 60 60 6A 8D 14 67 66 68 E9 
82B0 D4 EE 0E 64 67 E9 70 C7 04 61 8E 38 96 E9 03 C0 
82C0 04 60 8E F9 00 61 8D 14 66 66 68 E9 D4 EE 0E 8D 
82D0 11 68 E9 70 C7 04 AA 6B 66 8E 4C 96 E9 99 C7 04 
82E0 41 85 D1 AC 3F B8 61 8E 5C 96 E9 03 C0 04 81 D1 
82F0 D8 09 83 DE ED FF B3 DE D9 FF B3 DE E3 FF B3 DE 
8300 F2 FF B3 3C E9 19 81 0A 2B 3B 62 68 66 E9 16 A2 
8310 08 2A 0A 8C FF 00 C1 D8 70 84 A4 6B 66 B7 26 B7 
8320 14 DE E3 FF B3 0A D2 B4 BB B0 B7 25 B7 14 DE D9 
8330 FF B3 0A D2 B4 BB B0 B7 25 B7 15 B7 01 B7 15 B7 
8340 03 B7 19 60 EA 00 00 B7 0A D8 7F 83 8A 60 EA A6 
8350 6B 66 BC 85 D7 DE E3 FF B3 0A D2 B4 BB B0 B3 81 
8360 D7 B4 B8 B3 DE E3 FF B3 0A D2 B4 BB B0 B3 81 D7 
8370 B4 BA D8 79 83 41 D6 7A 83 40 B4 BB D6 88 83 DE 
8380 D9 FF B3 0A D2 B4 BB B0 85 D7 AC 3F B8 DE F2 FF 
8390 B3 0A D2 B4 BB B0 B3 8E 71 96 E9 99 C7 04 87 D7 
83A0 61 8E 8B 96 E9 12 CD 06 85 D5 81 D5 8B FF C1 D8 
83B0 6C 84 87 D5 0C 8B 18 B5 B3 DE ED FF B3 0A B4 BB 
83C0 D3 D2 B4 BB 8C AA 6A BB B4 B3 B0 BC B1 DE E3 FF 
83D0 B3 0A D2 B4 BB B0 83 D5 B5 CD A4 6B 66 BB A8 6B 
83E0 66 41 85 D3 A4 6B 66 8C 60 EA C8 D8 F4 83 8A 60 
83F0 EA A8 6B 66 8D 11 68 E9 70 C7 04 AA 6B 66 8E 8C 
8400 96 E9 99 C7 04 DE E3 FF B3 0A D2 B4 BB B0 83 D5 
8410 B5 8C E8 03 B8 5A C8 D8 1F 84 3D 4A D6 30 84 3D 
8420 DE E3 FF B3 0A D2 B4 BB B0 83 D5 B5 8C E8 03 B8 
8430 D4 A4 6B 66 8C 60 EA C0 D8 4B 84 AC 89 B8 AC 3F 
8440 B8 8E 9C 96 E9 F4 A3 02 81 D3 CF 3C E9 03 80 02 
8450 D7 63 84 AC 89 B8 AC 3F B8 8E BC 96 E9 F4 A3 02 
8460 81 D3 CF 40 85 D3 41 85 D1 D6 75 84 40 D6 67 84 
8470 8A FF 00 85 D3 0A 8C FF 00 C0 D7 82 84 81 D3 D8 
8480 E3 82 81 D3 CF 
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8480                20 BF E4 E3 FF 3C 40 D4 41 85 E3 
8490 DE FB FF B3 60 E9 26 D0 04 85 EF 40 85 E9 40 D6 
84A0 B9 84 DE FB FF B3 81 ED B4 BB D3 B3 E9 03 80 02 
84B0 CD 81 E9 BB 85 E9 81 ED D0 85 ED 81 ED 83 EF C6 
84C0 D7 A2 84 81 E9 D7 D9 84 AC 89 B8 61 E9 1B B8 02 
84D0 8E D7 96 E9 F4 A3 02 40 CF A4 6B 66 8C 60 EA C0 
84E0 D8 F4 84 AC 89 B8 61 E9 1B B8 02 8E F4 96 E9 F4 
84F0 A3 02 40 CF 40 85 E5 85 E7 8A F0 00 A9 63 70 60 
8500 8D 12 8D 1C 62 62 E9 05 A4 0A AC EC B7 61 66 E9 
8510 69 B8 04 61 E9 1B B8 02 61 8E 13 97 E9 03 C0 04 
8520 81 E3 D8 32 85 DE FB FF B3 87 EF E9 94 80 04 40 
8530 85 E3 87 EF 62 68 66 E9 16 A2 08 85 EB 81 EB 8C 
8540 FF 00 C1 D8 73 85 3C DE FB FF B3 81 EB B4 BB D3 
8550 B3 E9 6F 82 04 85 E5 81 E5 D8 6B 85 81 E5 8C FF 
8560 00 C0 D8 68 85 40 85 E5 41 85 E3 81 E5 CD 81 E7 
8570 DB 85 E7 81 EB 8C FF 00 C0 D7 81 85 81 E7 D8 0D 
8580 85 81 E7 D7 8B 85 0C D3 D8 B9 85 A5 67 70 5E B5 
8590 8C BD 67 BB D3 59 C8 D8 AD 85 0C D3 B3 A5 67 70 
85A0 5E B5 8C BD 67 BB B4 B3 D3 BC D6 B8 85 A5 67 70 
85B0 5E B5 8C BD 67 BB B3 40 D4 60 8D 12 8D 1C 62 62 
85C0 E9 9B A4 0A 81 E7 CF 

Function $8485 (E3 FF)

848A 3C          / 
848B 40          / 
848C D4          / <byte>[0B] = 0
848D 41          / 
848E 85 E3       / <word> E3  = 1

8490 DE FB FF    /
8493 B3          / push &FB
8494 60          / push 0
8495 E9 26 D0 04 / Call $D026      / Assemble list of goods to sell
8499 85 EF       / <word> EF = # of goods

849B 40
849C 85 E9       / <word> E9 = 0

849E 40          /
849F D6 B9 84    /

LOOP:
84A2 DE FB FF    /
84A5 B3          / push &FB
84A6 81 ED       / L*= <word> ED
84A8 B4          / pull to R
84A9 BB          / add
84AA D3          / deref <byte>
84AB B3          / push L
84AC E9 03 80 02 / Call $8003
84B0 CD          / Swap L R
84B1 81 E9       / 
84B3 BB          / 
84B4 85 E9       / <word>E9 += R

Increment
84B6 81 ED       / 
84B8 D0

Bounds check
84B9 85 ED       / <word>ED ++

84BB 81 ED       / L := word<ED>
84BD 83 EF       / R := word<EF>
84BF C6          /
84C0 D7 A2 84    /

84C3 81 E9       / L := word<E9>
84C5 D7 D9 84    /

NO GOODS TO SELL
84C8 AC 89 B8    / call $B889
84CB 61          / push #$01
84CC E9 1B B8 02 / call $B81B
84D0 8E D7 96    / push #$96D7 "We 'aven't any goods\nto sell"
84D3 E9 F4 A3 02 / call $A3F4
84D7 40          /
84D8 CF          / return 0

GOODS TO SELL
84D9 A4 6B 66    / L := <word>[$666B] / TOTAL GOLD
84DC 8C 60 EA    / R := <word>0xEA60
84DF C0          / check if L==R       / check if gold == 60000
84E0 D8 F4 84

MAX GOLD:
84E3 AC 89 B8
84E6 61
84E7 E9 1B B8 02
84EB 8E F4 96    / push #$96F4 "We've got enough gold\nalready!"
84EE E9 F4 A3 02
84F2 40
84F3 CF          / Return 0

NOT MAX GOLD:
84F4 40
84F5 85 E5       / <word>E5 = 0
84F7 85 E7       / <word>E7 = 0

84F9 8A F0 00    / 
84FC A9 63 70    / $7063 = #$F0

84FF 60
8500 8D 12
8502 8D 1C
8504 62
8505 62
8506 E9 05 A4 0A / Print portrait?

850A AC EC B7

850D 61
850E 66
850F E9 69 B8 04 / Call $B869

8513 61
8514 E9 1B B8 02 / Call $B81B

8518 61          / Push #$01   true
8519 8E 13 97    / Push #$9713 "Which ship's cargo is\nfor sale?"
851C E9 03 C0 04 / Call $C003

8520 81 E3       / L := <word>E3
8522 D8 32 85    /

8525 DE FB FF
8528 B3          / push &FB
8529 87 EF       / push <word>EF
852B E9 94 80 04 / Call $8094
852F 40
8530 85 E3       / <word>E3 = 0

8532 87 EF       / push <word>EF
8534 62
8535 68
8536 66
8537 E9 16 A2 08 / Call $A216
853B 85 EB       / <word>EB = L

853D 81 EB       / L := <word>EB
853F 8C FF 00    / R := #$00FF
8542 C1
8543 D8 73 85

if L != #$FF

8546 3C          / push <word>0B
8547 DE FB FF    /
854A B3          / 
854B 81 EB       / 
854D B4          / 
854E BB          / L := <word>EB + &FB
854F D3          / deref L
8550 B3          / push L
8551 E9 6F 82 04 / call $826F
8555 85 E5       / <word>E5 = L

8557 81 E5       / L := <word>E5
8559 D8 6B 85

855C 81 E5       / L := <word>E5
855E 8C FF 00    /
8561 C0
8562 D8 68 85

8565 40
8566 85 E5       / <word>E5 = 0

8568 41          
8569 85 E3       / <word>E3 = 1

856B 81 E5       /
856D CD          / 
856E 81 E7       /
8570 DB          / 
8571 85 E7       / <word>E7 = <word>E7 ORA <word>E5

8573 81 EB       / L := <word>EB
8575 8C FF 00    /
8578 C0
8579 D7 81 85

857C 81 E7
857E D8 0D 85

8581 81 E7
8583 D7 8B 85

8586 0C
8587 D3
8588 D8 B9 85

858B A5 67 70    
858E 5E
858F B5
8590 8C BD 67
8593 BB
8594 D3         
8595 59
8596 C8         
8597 D8 AD 85

If current city's prices > 59%

859A 0C
859B D3
859C B3          /
859D A5 67 70    /
85A0 5E
85A1 B5
85A2 8C BD 67
85A5 BB          / L = Current city prices (address)
85A6 B4          / R = [0C]
85A7 B3          / push Current city prices (address)
85A8 D3          / L := Current city prices
85A9 BC          / L := Current city prices - [0C]
85AA D6 B8 85

Else

85AD A5 67 70    /
85B0 5E
85B1 B5
85B2 8C BD 67    /
85B5 BB
85B6 B3          / push Current city prices (address)
85B7 40          / L := 0

85B8 D4          / 

85B9 60
85BA 8D 12
85BC 8D 1C
85BE 62
85BF 62
85C0 E9 9B A4 0A / Call$ A49B

85C4 81 E7       / L := <word>E7
85C6 CF          / Return
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
85C0                      20 BF E4 FA FF 0C 8B 18 B5 
85D0 8C AA 6A BB 2A 40 2B 40 D6 E9 85 0A 72 2A 8F FE 
85E0 B0 D8 E7 85 0B D0 2B 09 D0 29 09 55 C6 D7 DB 85 
85F0 0B CF 

Function $85C7 (FA FF) -> Returns the # of cargo types on ship <00>
Args:
<0C> Ship num

85CC 0C
85CD 8B 18
85CF B5
85D0 8C AA 6A .. / $6AAA Cargo #s
85D3 BB
85D4 2A

85D5 40
85D6 2B

85D7 40
85D8 D6 E9 85

Loop:
	85DB 0A
	85DC 72
	85DD 2A
	85DE 8F FE
	85E0 B0
	85E1 D8 E7 85

		85E4 0B
		85E5 D0
		85E6 2B

Increment
85E7 09
85E8 D0

Bounds check
85E9 29

85EA 09
85EB 55
85EC C6
85ED D7 DB 85

85F0 0B
85F1 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
85F0       20 BF E4 F2 FF A5 67 70 55 B5 8C 0A B5 BB 
8600 B3 E9 0C D3 02 8B 58 B5 8C 64 B8 BB 2A 0A 79 28 
8610 0A 27 0A 8F 12 26 A5 67 70 5E B5 8C B2 67 BB 29 
8620 09 B0 25 40 2B 38 E9 0C D3 02 D8 59 86 37 E9 0C 
8630 D3 02 8B 32 B5 15 C3 D8 59 86 09 7B D3 8F 32 B7 
8640 25 B7 14 36 E9 26 D3 02 B7 25 B7 15 B7 01 B7 19 
8650 64 00 00 00 B7 02 B7 27 CF 08 D0 28 06 72 26 07 
8660 D0 27 0B D0 2B 0B 59 C6 D7 25 86 40 CF 

Function $85F2 (F2 FF)
Args:
<0C> Cargo type

85F7 A5 67 70    / $7067 (Current port)
85FA 55
85FB B5
85FC 8C 0A B5    / $B50A
85FF BB
8600 B3
8601 E9 0C D3 02 / Call $D30C (get byte from page FA)
8605 8B 58
8607 B5
8608 8C 64 B8    / $B864
860B BB
860C 2A          / Market

860D 0A
860E 79
860F 28

8610 0A
8611 27

8612 0A
8613 8F 12
8615 26

8616 A5 67 70    / $7067 (Current port)
8619 5E
861A B5
861B 8C B2 67    / $67B2
861E BB
861F 29

8620 09
8621 B0
8622 25

8623 40
8624 2B

8625 38
8626 E9 0C D3 02 / Call $D30C (get byte from page FA)
862A D8 59 86

862D 37
862E E9 0C D3 02 / Call $D30C (get byte from page FA)
8632 8B 32
8B34 B5
8B35 15
8B36 C3
8B37 D8 59 86

if (...) && (...)
{	
	8B3A 09
	8B3B 7B
	8B3C D3
	8B3D 8F 32
	8B3F B7 25
	8B41 B7 14
	8B43 36
	8B44 E9 26 D3 02 / Call $D326
	8B48 B7 25
	8B4A B7 15
	8B4C B7 01
	8B4E B7 19
	     64 00 00 00
	8B54 B7 02
	8B56 B7 27
	8B58 CF
}

8659 08
865A D0
865B 28

865C 06
865D 72
865E 26

865F 07
8660 D0
8661 27

8662 0B
8663 D0
8664 2B

8665 0B
8666 59
8667 C6
8668 D7 25 86

866B 40
866C CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8660                                        20 BF E4 
8670 F6 FF 0C 8B 18 B5 8C A4 6A BB 29 40 2B 0B D2 19 
8680 BB 76 B0 D8 A9 86 3E 09 1B BB D0 D3 B3 E9 F2 85 
8690 02 B1 D8 A9 86 3D 09 1B BB D0 D3 D4 0D D0 2D 0E 
86A0 72 2E A0 FD FF D0 A2 FD FF 0B D0 2B 0B 55 C6 D7 
86B0 7D 86 A5 67 70 55 B5 8C 0A B5 BB 28 08 D0 B3 E9 
86C0 0C D3 02 A2 FC FF 8C FF 00 C1 D8 29 87 40 2B 0B 
86D0 D2 19 BB 76 B0 D8 20 87 A0 FC FF B3 09 1B BB D0 
86E0 D3 B4 C0 D8 20 87 A5 67 70 5E B5 8C B2 67 BB 27 
86F0 3D A0 FC FF D4 0D D0 2D 3E 07 7B D3 8F 32 B7 25 
8700 B7 14 07 7C B0 B7 25 B7 15 B7 01 B7 19 64 00 00 
8710 00 B7 02 B7 27 B1 0E 72 2E A0 FD FF D0 A2 FD FF 
8720 0B D0 2B 0B 55 C6 D7 CF 86 A0 FD FF CF 

Function $866D (F6 FF)
Args:
<0C> Player Ship #
<0D> ?
<0E> ?

8672 0C
8673 8B 18
8C75 B5
8C76 8C A4 6A    / $6AA4
8C79 BB
8C7A 29

8C7B 40
8C7C 2B

8C7D 0B
8C7E D2
8C7F 19
8C80 BB
8C81 76
8C82 B0          / Amount of cargo #n
8C83 D8 A9 86

if (# > 0)
{
	8C86 3E
	8C87 09
	8C88 1B
	8C89 BB
	8C8A D0
	8C8B D3          / Type of cargo
	8C8C B3
	8C8D E9 F2 85 02 / Call $85F2
}

86A9

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8680 BB 76 B0 D8 A9 86 3E 09 1B BB D0 D3 B3 E9 F2 85 
8690 02 B1 D8 A9 86 3D 09 1B BB D0 D3 D4 0D D0 2D 0E 
86A0 72 2E A0 FD FF D0 A2 FD FF 0B D0 2B 0B 55 C6 D7 
86B0 7D 86 A5 67 70 55 B5 8C 0A B5 BB 28 08 D0 B3 E9 
86C0 0C D3 02 A2 FC FF 8C FF 00 C1 D8 29 87 40 2B 0B 
86D0 D2 19 BB 76 B0 D8 20 87 A0 FC FF B3 09 1B BB D0 
86E0 D3 B4 C0 D8 20 87 A5 67 70 5E B5 8C B2 67 BB 27 
86F0 3D A0 FC FF D4 0D D0 2D 3E 07 7B D3 8F 32 B7 25 
8700 B7 14 07 7C B0 B7 25 B7 15 B7 01 B7 19 64 00 00 
8710 00 B7 02 B7 27 B1 0E 72 2E A0 FD FF D0 A2 FD FF 
8720 0B D0 2B 0B 55 C6 D7 CF 86 A0 FD FF CF 
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8720                                        20 BF E4 
8730 FC FF 0C 8B 18 B5 8C A4 6A BB 2A 40 2B 0A 1B BB 
8740 D0 D3 1D C0 D8 4E 87 0B D2 1A BB 76 B0 CF 0B D0 
8750 2B 0B 55 C6 D7 3D 87 40 CF 

Function $872D (FC FF) -> Check how much of cargo <02> is on ship <00>
Args:
<0C> Ship #
<0D> Cargo type
Locs:
<0A> Ship cargo info
<0B> Current cargo slot

8732 0C
8733 8B 18
8735 B5
8736 8C A4 6A .. / $6AA4
8739 BB
873A 2A

873B 40
873C 2B

873D 0A
873E 1B
873F BB
8740 D0
8741 D3
8742 1D
8743 C0
8744 D8 4E 87

if ( ... )
{
	8747 0B
	8748 D2
	8749 1A
	874A BB
	874B 76
	874C B0
	874D CF
}

874E 0B
874F D0
8750 2B

8751 0B
8752 55
8753 C6
8754 D7 3D 87

8757 40
8758 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8750                            20 BF E4 FC FF 0C 8B 
8760 18 B5 8C A4 6A BB 2A 40 2B 0A 1B BB D0 D3 1D C0 
8770 D8 7E 87 0B D2 1A BB 76 B0 D8 7E 87 40 CF 0B D0 
8780 2B 0B 55 C6 D7 69 87 41 CF 

Function $8759 (FC FF)

875E 0C
875F 8B 18
8761 B5
8762 8C A4 6A
8765 BB
8766 2A

8767 40
8768 2B

8769 0A
876A 1B
876B BB
876C D0
876D D3
876E 1D
876F C0
8770 D8 7E 87

	8773 0B
	8774 D2
	8775 1A
	8776 BB
	8777 76
	8778 B0
	8779 D8 7E 87

		877C 40
		877D CF

877E 0B
877F D0
8780 2B

8781 0B
8782 55
8783 C6
8784 D7 69 87

8787 41
8788 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8780                            20 BF E4 FC FF 8D 10 
8790 8D 16 E9 70 C7 04 60 8E 33 97 E9 03 C0 04 8D 11 
87A0 8D 16 E9 70 C7 04 AA 6B 66 8E 39 97 E9 19 C7 04 
87B0 68 8D 16 E9 70 C7 04 60 8E 3D 97 E9 03 C0 04 69 
87C0 8D 16 E9 70 C7 04 3F E9 C7 85 02 B3 8E 46 97 E9 
87D0 19 C7 04 6C 8D 16 E9 70 C7 04 60 8E 50 97 E9 03 
87E0 C0 04 6D 8D 16 E9 70 C7 04 3F E9 2C 80 02 B3 0F 
87F0 57 B5 8C 96 6C BB D3 5F DA B3 E9 32 D5 02 8F 12 
8800 B3 E9 26 D3 02 B4 BC B3 8E 56 97 E9 19 C7 04 81 
8810 13 56 B5 D6 97 88 0B D2 78 B3 63 E9 70 C7 04 3F 
8820 E9 C7 85 02 55 C0 D8 3F 88 81 13 56 B5 1D BB 1B 
8830 BB D3 B3 3F E9 59 87 04 D8 3F 88 43 D6 40 88 40 
8840 2A 81 13 56 B5 1D BB 1B BB D3 D2 8C 49 BB BB B3 
8850 E9 26 D3 02 B3 E9 6B D5 02 0B D2 78 B3 6D E9 70 
8860 C7 04 81 13 56 B5 1D BB 1B BB D3 B3 3F E9 2D 87 
8870 04 B3 8E 5F 97 E9 19 C7 04 0B D2 78 B3 8D 11 E9 
8880 70 C7 04 81 13 56 B5 1B BB D2 1E BB B0 B3 8E 63 
8890 97 E9 19 C7 04 0B D0 2B 0B 1C C6 D7 16 88 CF 

Function $8789 (FC FF)
Args:
<0C>
<0D>
<0E>
<0F> Ship #

878E 8D 10
8790 8D 16
8792 E9 70 C7 04 / Call $C770 -> Text pos 22,16

8796 60
8797 8E 33 97    / $9733 "Gold:"
879A E9 03 C0 04 / Call $C003 -> Print

879E 8D 11
87A0 8D 16
87A2 E9 70 C7 04 / Call $C770 -> Text pos 22,17

87A6 AA 6B 66    / $666B (Gold)
87A9 8E 39 97    / $9739 "%5d"
87AC E9 19 C7 04 / Call $C719 -> Print

87B0 68
87B1 8D 16
87B3 E9 70 C7 04 / Call $C770 -> Text pos 22, 8

87B7 60
87B8 8E 3D 97    / $973D "Types of"
87BB E9 03 C0 04 / Call $C003 -> Print

87BF 69
87C0 8D 16
87C2 E9 70 C7 04 / Call $C770 -> Text pos 22, 9

87C6 3F
87C7 E9 C7 85 02 / Call $85C7 -> # of cargo types
87CB B3
87CC 8E 46 97    / $9746 "cargo:%2d"
87CF E9 19 C7 04 / Call $C719 -> Print

87D3 6C
87D4 8D 16
87D6 E9 70 C7 04 / Call $C770 -> Text pos 22,12

87DA 60
87DB 8E 50 97    / $9750 "Space"
87DE E9 03 C0 04 / Call $C003 -> Print

87E2 6D
87E3 8D 16
87E5 E9 70 C7 04 / Call $C770 -> Text pos 22,13

87E9 3F
87EA E9 2C 80 02 / Call $802C -> Storage space used
87EE B3
87EF 0F
87F0 57
87F1 B5
87F2 8C 96 6C
87F5 BB
87F6 D3
87F7 5F
87F8 DA
87F9 B3
87FA E9 32 D5 02 / Call $D532
87FE 8F 12
8800 B3
8801 E9 26 D3 02 / Call $D326
8805 B4
8806 BC
8807 B3
8808 8E 56 97    / $9756 "left:%3d"
880B E9 19 C7 04 / Call $C719 -> Print

880F 81 13
8811 56
8812 B5
8813 D6 97 88

Loop:
	8816 0B
	8817 D2
	8818 78
	8819 B3
	881A 63
	881B E9 70 C7 04 / Call $C770 -> Text pos
	
	881F 3F
	8820 E9 C7 85 02 / Call $85C7 -> # of cargo types
	8824 55
	8825 C0
	8826 D8 3F 88
	
	if
	{
		8829 81 13
		882B 56
		882C B5
		882D 1D
		882E BB
		882F 1B
		8830 BB
		8831 D3
		8832 B3
		8833 3F
		8834 E9 59 87 04 / Call $8759
		8838 D8 3F 88
		
		if ( )
		{
			883B 43
			883C D6 40 88
		}
	}
	
	883F 40
	
	8840 2A
	
	8841 ...
	
	
Bounds check:
	8897 2B
	8898 0B
	8899 1C
	889A C6
	889B D7 16 88
	
889E CF

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F  
8840 2A 81 13 56 B5 1D BB 1B BB D3 D2 8C 49 BB BB B3 
8850 E9 26 D3 02 B3 E9 6B D5 02 0B D2 78 B3 6D E9 70 
8860 C7 04 81 13 56 B5 1D BB 1B BB D3 B3 3F E9 2D 87 
8870 04 B3 8E 5F 97 E9 19 C7 04 0B D2 78 B3 8D 11 E9 
8880 70 C7 04 81 13 56 B5 1B BB D2 1E BB B0 B3 8E 63 
8890 97 E9 19 C7 04 0B D0 2B 0B 1C C6 D7 16 88 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8890                                              20 
88A0 BF E4 E4 FF A5 67 70 5E B5 8C B2 67 BB 22 02 7B 
88B0 D3 8F 32 26 02 B0 27 A5 67 70 55 B5 8C 0A B5 BB 
88C0 21 31 E9 0C D3 02 8B 58 B5 8C 64 B8 BB 2B 0B 28 
88D0 0B 79 29 0B 8F 12 25 40 20 85 E6 D6 35 89 39 E9 
88E0 0C D3 02 85 E4 8C FF 00 C1 D8 29 89 38 E9 0C D3 
88F0 02 24 04 8B 32 B5 17 C3 D8 29 89 0C 83 E6 BB B3 
8900 81 E4 D4 81 E6 D2 1D BB B3 06 B7 25 B7 14 35 E9 
8910 26 D3 02 B7 25 B7 15 B7 01 B7 19 64 00 00 00 B7 
8920 02 B7 27 B1 81 E6 D0 85 E6 09 D0 29 08 D0 28 05 
8930 72 25 00 D0 20 00 59 C6 D7 DE 88 01 D0 B3 E9 0C 
8940 D3 02 2A 0A 8C FF 00 C1 D8 85 89 01 72 B3 E9 0C 
8950 D3 02 8B 32 B5 17 C3 D8 85 89 0C 83 E6 BB B3 0A 
8960 D4 81 E6 D2 1D BB B3 06 B7 25 B7 14 02 7C B0 B7 
8970 25 B7 15 B7 01 B7 19 64 00 00 00 B7 02 B7 27 B1 
8980 81 E6 D0 85 E6 81 E6 CF 

Function $889F (E4 FF)

88A4 A5 67 70    / $7067 (current port)
88A7 5E
88A8 B5
88A9 8C B2 67    / $67B2
88AC BB
88AD 22          / City stats

88AE 02
88AF 7B
88B0 D3
88B1 8F 32
88B3 26          / Prices

88B4 02
88B5 B0
88B6 27          / Economic worth

88B7 A5 67 70    / $7067 (current port)
88BA 55
88BB B5
88BC 8C 0A B5    / $B50A
88BF BB
88C0 21

88C1 31
88C2 E9 0C D3 02 / Call $D30C -> Get byte from page FA (Market type)
88C6 8B 58
88C8 B5
88C9 8C 64 B8    / $B864
88CC BB
88CD 2B          / loc_0B = market

88CE 0B
88CF 28          / loc_08

88D0 0B
88D1 79
88D2 29

88D3 0B
88D4 8F 12
88D6 25

88D7 40
88D8 20
88D9 85 E6

88DB D6 35 89

Loop:
	88DE 39
	88DF E9 0C D3 02 / Call $D30C -> Get byte from Page FA

Bounds check:
	8935

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 
88D0 0B 79 29 0B 8F 12 25 40 20 85 E6 D6 35 89 39 E9 
88E0 0C D3 02 85 E4 8C FF 00 C1 D8 29 89 38 E9 0C D3 
88F0 02 24 04 8B 32 B5 17 C3 D8 29 89 0C 83 E6 BB B3 
8900 81 E4 D4 81 E6 D2 1D BB B3 06 B7 25 B7 14 35 E9 
8910 26 D3 02 B7 25 B7 15 B7 01 B7 19 64 00 00 00 B7 
8920 02 B7 27 B1 81 E6 D0 85 E6 09 D0 29 08 D0 28 05 
8930 72 25 00 D0 20 00 59 C6 D7 DE 88 01 D0 B3 E9 0C 
8940 D3 02 2A 0A 8C FF 00 C1 D8 85 89 01 72 B3 E9 0C 
8950 D3 02 8B 32 B5 17 C3 D8 85 89 0C 83 E6 BB B3 0A 
8960 D4 81 E6 D2 1D BB B3 06 B7 25 B7 14 02 7C B0 B7 
8970 25 B7 15 B7 01 B7 19 64 00 00 00 B7 02 B7 27 B1 
8980 81 E6 D0 85 E6 81 E6 CF 
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8980                         20 BF E4 F2 FF 8A E1 00 
8990 A2 F3 FF 40 A2 F4 FF 40 27 28 42 2B 48 2A 60 E9 
89A0 A9 C4 02 29 09 51 C0 D7 B0 89 09 52 C0 D8 B4 89 
89B0 40 D6 B5 89 41 D8 43 8A 0A 53 BD D1 A2 F2 FF 0B 
89C0 53 BD A2 F5 FF 61 60 DE F2 FF B3 6D E9 D4 EE 08 
89D0 6C 39 E9 4D CE 04 09 D9 04 00 10 00 EC 89 20 00 
89E0 02 8A 40 00 3B 8A 80 00 19 8A 9E 89 08 D7 F8 89 
89F0 0C 28 0C D2 78 D6 9D 89 08 D1 28 42 CD 0A BC D6 
8A00 9D 89 08 1C C0 D8 0F 8A 48 2A 40 28 D6 9E 89 42 
8A10 CD 0A BB 2A 08 D0 D6 0B 8A 07 D7 9E 89 0C D0 56 
8A20 C8 D8 9E 89 41 27 61 60 6C E9 D4 EE 06 37 3F 3E 
8A30 3D 0C D0 B3 E9 89 87 0A D6 9E 89 07 D8 9E 89 40 
8A40 D6 25 8A 61 60 6C E9 D4 EE 06 09 52 C0 D8 54 8A 
8A50 8A FF 00 CF 07 56 B5 18 BB CF 
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8A50                               20 BF E4 EF FF 3F 
8A60 E9 C7 85 02 55 C0 D8 76 8A 0D 1C BB D3 B3 3F E9 
8A70 59 87 04 D7 97 8A 3F E9 2C 80 02 B3 0F 57 B5 8C 
8A80 96 6C BB D3 5F DA B3 E9 32 D5 02 8F 12 B3 E9 26 
8A90 D3 02 B4 BC D7 A6 8A AC 89 B8 AC 3F B8 8E 67 97 
8AA0 E9 F4 A3 02 40 CF 61 66 E9 69 B8 04 AC 3F B8 0C 
8AB0 D2 1E BB B0 27 60 8E 86 97 E9 03 C0 04 0D 1C BB 
8AC0 D3 D2 8C 49 BB BB B3 E9 26 D3 02 B3 E9 6B D5 02 
8AD0 60 8E 88 97 E9 03 C0 04 8D 17 68 E9 0B C7 04 37 
8AE0 8E 96 97 E9 99 C7 04 A4 6B 66 29 AC 9F CD 26 06 
8AF0 D8 0A 8B 07 19 C8 D8 7C 8B AC 89 B8 61 E9 1B B8 
8B00 02 8E AF 97 E9 F4 A3 02 40 CF 6A E9 E1 CF 02 8F 
8B10 46 B3 A5 67 70 5E B5 8C BA 67 BB D3 B4 C9 D8 F8 
8B20 8B 61 66 E9 69 B8 04 61 E9 1B B8 02 37 39 E9 6C 
8B30 DD 04 28 61 38 61 8E CD 97 E9 12 CD 08 2B 07 52 
8B40 B6 B3 A5 74 6F D0 B4 B5 5A B8 B3 07 B4 BC B3 0B 
8B50 B4 C6 D8 67 8B 61 66 E9 69 B8 04 AC 3F B8 8E E9 
8B60 97 E9 F4 A3 02 41 CF 0B 8B FF C0 D8 7A 8B AC 3F 
8B70 B8 8E 04 98 E9 F4 A3 02 43 CF 0B 27 3F E9 2C 80 
8B80 02 B3 0F 57 B5 8C 96 6C BB D3 5F DA B3 E9 32 D5 
8B90 02 8F 12 B3 E9 26 D3 02 B4 BC 2A A4 6B 66 17 B8 
8BA0 B3 3A E9 6C DD 04 2A 61 66 E9 69 B8 04 AC 3F B8 
8BB0 60 8E 3D 98 E9 03 C0 04 0D 1C BB D3 D2 8C 49 BB 
8BC0 BB B3 E9 26 D3 02 B3 E9 6B D5 02 8D 17 68 E9 0B 
8BD0 C7 04 61 8E 48 98 E9 03 C0 04 61 3A 61 8E 5A 98 
8BE0 E9 F3 CC 08 2B 0B 8B FF C0 D8 0A 8C AC 3F B8 8E 
8BF0 5B 98 E9 F4 A3 02 43 CF 61 66 E9 69 B8 04 AC 3F 
8C00 B8 8E 1E 98 E9 F4 A3 02 40 CF 0F 8B 18 B5 8C A4 
8C10 6A BB 85 EF 40 26 40 D6 3B 8C 0D 1C BB D3 B3 A0 
8C20 F3 FF 83 EF BB D0 D3 B4 C0 D8 37 8C A0 F3 FF A2 
8C30 F2 FF 41 26 D6 46 8C A0 F3 FF D0 A2 F3 FF A0 F3 
8C40 FF 55 C6 D7 1A 8C 06 D7 74 8C 40 D6 69 8C A0 F3 
8C50 FF D2 83 EF BB 76 B0 D7 65 8C A0 F3 FF A2 F2 FF 
8C60 41 26 D6 74 8C A0 F3 FF D0 A2 F3 FF A0 F3 FF 55 
8C70 C6 D7 4E 8C A0 F2 FF 83 EF BB D0 B3 0D 1C BB D3 
8C80 D4 3B A0 F2 FF D2 83 EF BB 76 B4 B3 B0 BB B1 0B 
8C90 17 B5 CD A4 6B 66 BC A8 6B 66 0B 17 B5 8C E8 03 
8CA0 C8 D8 EA 8C 0B 17 B5 8C E8 03 B8 B3 6A E9 6C DD 
8CB0 04 A2 F1 FF A0 F1 FF B3 A5 67 70 5E B5 8C BD 67 
8CC0 BB D3 B4 BB 8B 64 C8 D8 D9 8C A5 67 70 5E B5 8C 
8CD0 BD 67 BB B3 89 64 D6 E9 8C A3 F1 FF A5 67 70 5E 
8CE0 B5 8C BD 67 BB B4 B3 D3 BB D4 40 CF 
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8CE0                                     20 BF E4 D8 
8CF0 FF 40 24 0C 57 B5 8C 96 6C BB D3 5F DA B3 E9 32 
8D00 D5 02 8F 12 B3 E9 26 D3 02 B3 3C E9 2C 80 02 B4 
8D10 C0 D7 2F 8D 3C E9 C7 85 02 55 C0 D8 40 8D DE DC 
8D20 FF B3 DE F6 FF B3 3C E9 6D 86 06 26 D7 40 8D AC 
8D30 89 B8 AC 3F B8 8E 82 98 E9 F4 A3 02 8A FF 00 CF 
8D40 AC EC B7 8E E7 00 8E 54 B2 8E 56 B0 8D 11 8D 1E 
8D50 63 61 69 E9 D4 EE 10 60 8E F9 00 61 8D 1C 66 62 
8D60 68 E9 D4 EE 0E 60 8E FA 00 6C 61 67 8D 15 68 E9 
8D70 D4 EE 0E 64 63 E9 70 C7 04 61 8E 95 98 E9 03 C0 
8D80 04 41 85 D8 40 85 DA 81 D8 D8 99 8D DE DC FF B3 
8D90 DE F6 FF B3 E9 9F 88 04 26 41 85 D8 61 66 E9 69 
8DA0 B8 04 AC 3F B8 61 8E A8 98 E9 03 C0 04 34 3C DE 
8DB0 DC FF B3 DE F6 FF B3 36 E9 89 87 0A 3C DE DC FF 
8DC0 B3 DE F6 FF B3 06 D1 B3 E9 88 89 08 25 05 8C FF 
8DD0 00 C1 D8 17 8E 3C DE DC FF B3 DE F6 FF B3 35 E9 
8DE0 5A 8A 08 85 DA 81 DA 53 C0 D8 F1 8D 40 85 DA 85 
8DF0 D8 3C E9 32 D5 02 8F 12 B3 E9 26 D3 02 B3 3C E9 
8E00 EA D9 02 B4 C0 D8 17 8E AC 89 B8 AC 3F B8 8E C7 
8E10 98 E9 F4 A3 02 41 CF 05 8C FF 00 C0 D7 24 8E 81 
8E20 DA D8 84 8D 81 DA CF 
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8E20                      20 BF E4 E8 FF 3C 40 D4 40 
8E30 20 DE F8 FF B3 60 E9 26 D0 04 A2 FF FF 41 21 40 
8E40 22 40 D6 96 8E DE F8 FF B3 A0 FE FF B4 BB D3 57 
8E50 B5 8C 96 6C BB D3 5F DA B3 E9 32 D5 02 8F 12 B3 
8E60 E9 26 D3 02 B3 DE F8 FF B3 A0 FE FF B4 BB D3 B3 
8E70 E9 2C 80 02 B4 C2 D8 92 8E DE F8 FF B3 A0 FE FF 
8E80 B4 BB D3 B3 E9 C7 85 02 55 C7 D8 92 8E 40 21 D6 
8E90 A5 8E A0 FE FF D0 A2 FE FF A0 FF FF B3 A0 FE FF 
8EA0 B4 C6 D7 45 8E 01 D8 B8 8E AC 89 B8 AC 3F B8 8E 
8EB0 DF 98 E9 F4 A3 02 40 CF A4 6B 66 D7 CD 8E AC 89 
8EC0 B8 AC 3F B8 8E FE 98 E9 F4 A3 02 40 CF 40 21 8A 
8ED0 F0 00 A9 63 70 60 8D 12 8D 1C 62 62 E9 05 A4 0A 
8EE0 61 66 E9 69 B8 04 AC 3F B8 61 8E 1E 99 E9 03 C0 
8EF0 04 00 D7 06 8F AC EC B7 DE F8 FF B3 A0 FF FF B3 
8F00 E9 94 80 04 41 20 A0 FF FF B3 62 68 66 E9 16 A2 
8F10 08 A2 FD FF A0 FD FF 8C FF 00 C1 D8 3E 8F 3C DE 
8F20 F8 FF B3 A0 FD FF B4 BB D3 B3 E9 EC 8C 04 21 01 
8F30 8C FF 00 C0 D8 3C 8F 40 21 D6 3E 8F 40 20 A0 FD 
8F40 FF 8C FF 00 C0 D7 4C 8F 01 D8 E0 8E 01 D8 80 8F 
8F50 A5 67 70 5E B5 8C BD 67 BB D3 8B 5A C6 D8 73 8F 
8F60 0C D3 B3 A5 67 70 5E B5 8C BD 67 BB B4 B3 D3 BB 
8F70 D6 7F 8F A5 67 70 5E B5 8C BD 67 BB B3 89 64 D4 
8F80 AC EC B7 60 8D 12 8D 1C 62 62 E9 9B A4 0A 40 CF 
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8F90 20 BF E4 FE FF 40 2B A0 0D 00 B3 3C E9 0C D3 02 
8FA0 B4 C0 D8 A7 8F 0B CF 0C D0 2C 0B D0 2B 0B 59 C6 
8FB0 D7 97 8F 8A FF 00 CF 

Function $8F90 (FE FF)
Args:
<0C> Pointer to byte from Page FA
+0D  ?

8F95 40
8F96 2B

8F97 A0 0D 00
8F9A B3
8F9B 3C
8F9C E9 0C D3 02 / Call $D30C (get byte from Page FA)
8FA0 B4
8FA1 C0
8FA2 D8 A7 8F

if
	8FA5 0B
	8FA6 CF          

8FA7 0C
8FA8 D0
8FA9 2C

8FAA 0B
8FAB D0
8FAC 2B

8FAD 0B
8FAE 59
8FAF C6
8FB0 D7 97 8F

8FB3 8A FF 00
8FB6 CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
8FB0                      20 BF E4 E0 FF A5 67 70 55 
8FC0 B5 8C 0A B5 BB 2A 0A D0 B3 E9 0C D3 02 24 0A 72 
8FD0 B3 E9 0C D3 02 23 3A E9 0C D3 02 8B 58 B5 8C 64 
8FE0 B8 BB 2B 0B 28 0B 79 27 0B 8F 12 22 0B 8F 24 21 
8FF0 A5 67 70 5E B5 8C B2 67 BB 29 09 B0 85 E4 09 7C 
9000 B0 85 E2 09 7B D3 8F 32 20 0D D8 4B 90 AC EC B7 
9010 8E E7 00 8E E0 AE 8E 6A AD 8D 11 8D 16 63 65 69 
9020 E9 D4 EE 10 64 66 E9 70 C7 04 60 8E 8E 99 E9 03 
9030 C0 04 65 66 E9 70 C7 04 60 8E A3 99 E9 03 C0 04 
9040 60 8E F9 00 61 8D 14 66 D6 51 90 60 60 6C 8D 14 
9050 67 66 68 E9 D4 EE 0E 40 D6 95 91 06 D2 78 B3 66 
9060 E9 70 C7 04 0C 8C 4B 99 BB D3 16 BB D2 8C 49 BB 
9070 BB B3 E9 26 D3 02 B3 E9 6B D5 02 0C 8C 4B 99 BB 
9080 D3 16 BB B3 37 E9 90 8F 04 25 06 D2 78 B3 8D 10 
9090 E9 70 C7 04 08 15 BB B3 E9 0C D3 02 85 E0 05 8C 
90A0 FF 00 C1 D8 DA 90 81 E0 8B 32 B5 83 E4 C3 D8 DA 
90B0 90 00 B7 25 B7 14 05 D2 12 BB B3 E9 26 D3 02 B7 
90C0 25 B7 15 B7 01 B7 19 64 00 00 00 B7 02 B7 27 B3 
90D0 8E B8 99 E9 19 C7 04 D6 26 91 04 8C FF 00 C1 D8 
90E0 1E 91 0C 8C 4B 99 BB D3 16 BB 14 C0 D8 1E 91 03 
90F0 8B 32 B5 83 E4 C3 D8 17 91 00 B7 25 B7 14 81 E2 
9100 B7 25 B7 15 B7 01 B7 19 64 00 00 00 B7 02 B7 27 
9110 B3 8E BC 99 D6 D3 90 60 8E C0 99 D6 22 91 60 8E 
9120 C5 99 E9 03 C0 04 06 D2 78 B3 8D 16 E9 70 C7 04 
9130 00 B7 25 B7 14 0C 8C 4B 99 BB D3 16 BB D2 11 BB 
9140 B3 E9 26 D3 02 B7 25 B7 15 B7 01 B7 19 64 00 00 
9150 00 B7 02 B7 27 85 E6 0C 8C 4B 99 BB D3 16 BB 14 
9160 C0 D8 8A 91 03 8B 32 B5 83 E4 C7 D8 8A 91 00 B7 
9170 25 B7 14 81 E2 B7 25 B7 15 B7 01 B7 19 64 00 00 
9180 00 B7 02 B7 27 52 B6 D0 85 E6 87 E6 8E CA 99 E9 
9190 19 C7 04 06 D0 26 0C 8C 51 99 BB D3 B3 06 B4 C6 
91A0 D7 5B 90 8D 11 6C E9 70 C7 04 0C D2 8C 3F 99 BB 
91B0 B0 B3 8E CE 99 E9 99 C7 04 0C 55 C6 D8 C6 91 8E 
91C0 D1 99 E9 99 C7 02 CF 

Function $8FB7 (E0 FF)
Args:
<0C>
<0D>

8FBC A5 67 70    / $7067 (Current port)
8FBF 55
8FC0 B5
8FC1 8C 0A B5    / $B50A
8FC4 BB
8FC5 2A          /                                    / curMarket = portMarkets[curPort]

8FC6 0A
8FC7 D0
8FC8 B3
8FC9 E9 0C D3 02 / Call $D30C (get byte from page FA)
8FCD 24          / loc_24 = curMarket[1]              / loc_24 = curMarket[1]

8FCE 0A
8FCF 72
8FD0 B3
8FD1 E9 0C D3 02 / Call $D30C (get byte from page FA)
8FD5 23                                               / loc_23 = curMarket[2]

8FD6 3A
8FD7 E9 0C D3 02 / Call $D30C (get byte from page FA)
8FDB 8B 58
8FDD B5
8FDE 8C 64 B8    / $B864
8FE1 BB
8FE2 2B                                               / loc_2B = someArray[curMarket[0]]

8FE3 0B
8FE4 28                                               / loc_28 = loc_2B

8FE5 0B
8FE6 79
8FE7 27                                               / loc_27 = loc_2B[9]

8FE8 0B
8FE9 8F 12
8FEB 22                                               / loc_22 = loc_2B[18]

8FEC 0B
8FED 8F 24                                           
8FEF 21                                               / loc_21 = loc_2B[36]

8FF0 A5 67 70    / $7067 (Current port)
8FF3 5E
8FF4 B5
8FF5 8C B2 67    / $67B2
8FF8 BB
8FF9 29                                               / curEconomy = portEconomies[curPort]

8FFA 09
8FFB B0          / Economic worth
8FFC 85 E4                                            / curEconWorth = curEconomy.econWorth

8FFE 09
8FFF 7C
9000 B0
9001 85 E2       /                                    / loc_E2 = curEconomy.unk_0C

9003 09
9004 7B
9005 D3
9006 8F 32
9008 20          / Prices                             / curPrices = curEconomy.prices

9009 0D
900A D8 4B 90

if (arg_0D != 0)

	900D AC EC B7    / Call $B7EC
	
	9010 8E E7 00
	9013 8E E0 AE
	9016 8E 6A AD
	9019 8D 11
	901B 8D 16
	901D 63
	901E 65
	901F 69
	9020 E9 D4 EE 10 / Call $EED4 -> Sysop 0x09 (Print graphic)
	
	9024 64
	9025 66
	9026 E9 70 C7 04 / Call $C770 -> Text pos 6, 4
	
	902A 60
	902B 8E 8E 99    / $998E "          Sell   Buy"
	902E E9 03 C0 04 / Call $C003 -> Print
	
	9032 65
	9033 66
	9034 E9 70 C7 04 / Call $C770 -> Text pos 6, 5
	
	9038 60
	9039 8E A3 99    / $99A3 "Variety    for   for"
	903C E9 03 C0 04 / Call $C003 -> Print
	
	9040 60
	9041 8E F9 00
	9044 61
	9045 8D 14
	9047 66
	9048 D6 51 90
else
	904B 60
	904C 60
	904D 6C
	904E 8D 14
	9050 67
 	
9051 66
9052 68
9053 E9 D4 EE 0E / Call $EED4 -> Sysop 0x08

9057 40
9058 D6 95 91

Loop:
	905B 06
	905C D2
	905D 78
	905E B3
	905F 66
	9060 E9 70 C7 04 / Call $C770 -> Text pos 6,2n+8
	9064 0C
	9065 8C 4B 99
	9068 BB
	9069 D3
	906A 16
	906B BB
	906C D2
	906D 8C 49 BB
	9070 BB
	9071 B3
	9072 E9 26 D3 02 / Call $D326
	9076 B3
	9077 E9 6B D5 02 / Call $D56B -> Print
	907B 0C
	907C 8C 4B 99
	907F BB
	9080 D3
	9081 16
	9082 BB
	9083 B3
	9084 37
	9085 E9 90 8F 04 / Call $8F90
	9089 25
	
	908A 06
	908B D2
	908C 78
	908D B3
	908E 8D 10
	9090 E9 70 C7 04 / Call $C770 -> Text pos 16, 2n+8
	9094 08
	9095 15
	9096 BB
	9097 B3
	9098 E9 0C D3 02 / Call $D30C (get byte from page FA)
	909C 85 E0
	
	909E 05
	909F 8C FF 00
	90A2 C1
	90A3 D8 DA 90
	
	if
		90A6 81 E0
		90A8 8B 32
		90AA B5
		90AB 83 E4
		90AD C3
		90AE D8 DA 90
		
		if
			90B1 00
			90B2 B7 25
			90B4 B7 14
			90B6 05
			90B7 D2
			90B8 12
			90B9 BB
			90BA B3
			90BB E9 26 D3 02 / Call $D326
			90BF B7 25
			90C1 B7 15
			90C3 B7 01
			90C5 B7 19
				 64 00 00 00
			90CB B7 02
			90CD B7 27
			90CF B3
			90D0 8E B8 99    / $99B8 "%4d"
			90D3 E9 19 C7 04 / Call $C719 -> Print
			90D7 D6 26 91
	else
		90DA 04
		90DB 8C FF 00
		90DE C1
		90DF D8 1E 91
		
		if
			90E2 0C
			90E3 8C 4B 99
			90E6 BB
			90E7 D3
			90E8 16
			90E9 BB
			90EA 14
			90EB C0
			90EC D8 1E 91
			
			if
				90EF 03
				90F0 8B 32
				90F2 B5
				90F3 83 E4
				90F5 C3
				90F6 D8 17 91
				
				if
					90F9 00
					90FA B7 25
					90FC B7 14
					90FE 81 E2
					9100 B7 25
					9102 B7 15
					9104 B7 01
					9106 B7 19
					     64 00 00 00
					910C B7 02
					910E B7 27
					9110 B3
					9111 8E BC 99    / $99BC "%4d"
					9114 D6 90 60
				else
					9117 60
					9118 8E C0 99    / $99C0 "----"
					911B D6 22 91
		
		911E 60
		911F 8E C5 99 .. / $99C5 "----"
		
		9122 E9 03 C0 04 / Call $C003 -> Print
	
	9126 06
	9127 D2
	9128 78
	9129 B3
	912A 8D 16
	912C E9 70 C7 04 / Call $C770 -> Text pos 22, 2n+8
	9130 
	
	...
	
	
Bounds check:
	9195
	
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9130 00 B7 25 B7 14 0C 8C 4B 99 BB D3 16 BB D2 11 BB 
9140 B3 E9 26 D3 02 B7 25 B7 15 B7 01 B7 19 64 00 00 
9150 00 B7 02 B7 27 85 E6 0C 8C 4B 99 BB D3 16 BB 14 
9160 C0 D8 8A 91 03 8B 32 B5 83 E4 C7 D8 8A 91 00 B7 
9170 25 B7 14 81 E2 B7 25 B7 15 B7 01 B7 19 64 00 00 
9180 00 B7 02 B7 27 52 B6 D0 85 E6 87 E6 8E CA 99 E9 
9190 19 C7 04 06 D0 26 0C 8C 51 99 BB D3 B3 06 B4 C6 
91A0 D7 5B 90 8D 11 6C E9 70 C7 04 0C D2 8C 3F 99 BB 
91B0 B0 B3 8E CE 99 E9 99 C7 04 0C 55 C6 D8 C6 91 8E 
91C0 D1 99 E9 99 C7 02 CF 
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
91C0                      20 BF E4 FA FF 41 2A 2B 61 
91D0 66 E9 69 B8 04 61 E9 1B B8 02 61 8E 09 9A E9 03 
91E0 C0 04 62 66 8E D9 99 62 67 8D 17 68 E9 56 A1 0E 
91F0 29 09 8C FF 00 C1 D8 18 92 8A F0 00 A9 63 70 0B 
9200 D8 10 92 60 8D 12 8D 1C 62 62 E9 05 A4 0A 40 2B 
9210 3A 39 E9 B7 8F 04 40 2A 09 8C FF 00 C1 D7 CF 91 
9220 0B D7 2F 92 60 8D 12 8D 1C 62 62 E9 9B A4 0A 40 
9230 CF 

Function $91C7 (FA FF)

91CC 41
91CD 2A
91CE 2B

91CF 61
91D0 66
91D1 E9 69 B8 04 / Call $B869

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
91C0                      20 BF E4 FA FF 41 2A 2B 61 
91D0 66 E9 69 B8 04 61 E9 1B B8 02 61 8E 09 9A E9 03 
91E0 C0 04 62 66 8E D9 99 62 67 8D 17 68 E9 56 A1 0E 
91F0 29 09 8C FF 00 C1 D8 18 92 8A F0 00 A9 63 70 0B 
9200 D8 10 92 60 8D 12 8D 1C 62 62 E9 05 A4 0A 40 2B 
9210 3A 39 E9 B7 8F 04 40 2A 09 8C FF 00 C1 D7 CF 91 
9220 0B D7 2F 92 60 8D 12 8D 1C 62 62 E9 9B A4 0A 40 
9230 CF 
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9230    20 BF E4 FC FF A4 72 6F 8C 50 C3 C6 D8 6D 92 
9240 A5 67 70 5E B5 8C B2 67 BB 2B 0B B0 B3 0B 74 B0 
9250 B4 BB 51 BE B3 8D 64 E9 E1 CF 02 B4 BB A6 72 6F 
9260 BB 2A 8E 50 C3 3A E9 6C DD 04 A8 72 6F CF 

Function $9231 (FC FF)

9236 A4 72 6F    / $6F72 (Fame)
9239 8C 50 C3    / 50000
923C C6
923D D8 6D 92

If fame is less than 50000

	9240 A5 67 70    / $7067 (Current port)
	9243 5E
	9244 B5
	9245 8C B2 67    / $67B2
	9248 BB
	9249 2B          / City Stats
	
	924A 0B
	924B B0
	924C B3          / Economic Worth
	
	924D 0B
	924E 74
	924F B0          
	9250 B4
	9251 BB          / Economic Worth + Industrial Worth
	9252 51
	9253 BE
	9254 B3          / (Economic Worth 
	9255 8D 64       / 100
	9257 E9 E1 CF 02 / Call $CFE1 (RNG 00-99)
	925B B4          / (Economic Worth + Industrial Worth)/2 + RNG(00-99)
	925C BB
	925D A6 72 6F    / $6F72
	9260 BB
	9261 2A
	
	9262 8E 50 C3
	9265 3A
	9266 E9 6C DD 04 / Call $DD6C (get smaller of two)
	926A A8 72 6F

926D CF
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9260                                           20 BF 
9270 E4 FC FF A5 67 70 5E B5 8C B2 67 BB 2B 0C D2 D2 
9280 8C BE 6F BB D3 2A 0B B0 B3 0B 74 B0 B4 BB 8B 41 
9290 B8 B3 63 E9 E1 CF 02 B4 BB 1A BB 75 2A 0C D2 D2 
92A0 8C BE 6F BB B3 8D 64 3A E9 6C DD 04 D4 CF 

Function $926E (FC FF)
Args:
<0C>

9273 A5 67 70 .. / $7067 (Current port)
9276 5E
9277 B5
9278 8C B2 67    / $67B2 (City stats)
927B BB
927C 2B

927D 0C
927E D2
927F D2
9280 8C BE 6F    / $6FBE
9283 BB
9384 D3
9285 2A

9286 0B
9287 B0          / Economic Worth
9288 B3
9289 0B
928A 74
928B B0          / Industrial Worth
928C B4
928D BB          / Economic Worth + Industrial Worth
928E 8B 41
9290 B8          / (Economic Worth + Industrial Worth)/65
9291 B3
9292 63
9293 E9 E1 CF 02 / Call $CFE1 -> RNG (00-02)
9297 B4
9298 BB          / (Economic Worth + Industrial Worth)/65 + RNG(00-02)
9299 1A
929A BB
929B 75
929C 2A

929D 0C
929E D2
929F D2
92A0 8C BE 6F
92A3 BB
92A4 B3
92A5 8D 64
92A7 3A
92A8 E9 6C DD 04 / Call $DD6C
92AD CF          / Return

     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9290 B8 B3 63 E9 E1 CF 02 B4 BB 1A BB 75 2A 0C D2 D2 
92A0 8C BE 6F BB B3 8D 64 3A E9 6C DD 04 D4 CF 
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
92A0                                           20 BF 
92B0 E4 F4 FF A4 6B 66 D7 C8 92 AC 89 B8 AC 3F B8 8E 
92C0 14 9A E9 F4 A3 02 40 CF A5 67 70 53 C6 D8 F4 92 
92D0 61 66 E9 69 B8 04 AC 3F B8 A5 67 70 52 C0 D8 E7 
92E0 92 8A 60 9A D6 EA 92 8A 67 9A B3 8E 27 9A E9 99 
92F0 C7 04 40 CF A5 67 70 5E B5 8C B4 67 BB B0 8C 60 
9300 EA C0 D8 17 93 61 66 E9 69 B8 04 AC 3F B8 8E 6C 
9310 9A E9 F4 A3 02 40 CF 61 66 E9 69 B8 04 61 E9 1B 
9320 B8 02 8E 8C 9A E9 F4 A3 02 A5 67 70 5E B5 8C B4 
9330 67 BB B0 B3 8A 60 EA B4 BC 2B A4 6B 66 1B C6 D8 
9340 46 93 A4 6B 66 2B AC 89 B8 AC 3F B8 61 3B 61 8E 
9350 AC 9A E9 F3 CC 08 2A 0A 8B FF C0 D8 70 93 61 66 
9360 E9 69 B8 04 AC 3F B8 8E C5 9A E9 F4 A3 02 40 CF 
9370 3A A5 67 70 5E B5 8C B4 67 BB B0 B3 8A 60 EA B4 
9380 BC B3 E9 6C DD 04 B3 A5 67 70 5E B5 8C B4 67 BB 
9390 B4 B3 B0 BB B1 0A CD A4 6B 66 BC A8 6B 66 61 66 
93A0 E9 69 B8 04 AC 3F B8 0A 8C E8 03 C6 D8 BC 93 0A 
93B0 D0 8B 14 B8 29 61 8E EF 9A D6 DF 93 0A 8C 0F 27 
93C0 C8 D8 D4 93 0A 8C E8 03 B8 90 96 00 29 61 8E 00 
93D0 9B D6 DF 93 0A 8B 64 B8 8F 32 29 61 8E 25 9B E9 
93E0 03 C0 04 61 E9 9B CE 02 A5 67 70 5E B5 8C BA 67 
93F0 BB D3 8B 31 C8 D8 0B 94 62 E9 E1 CF 02 B3 A5 67 
9400 70 5E B5 8C BA 67 BB D3 D6 20 94 62 E9 E1 CF 02 
9410 B3 A5 67 70 5E B5 8C BA 67 BB D3 B3 89 64 B4 BC 
9420 57 B8 B3 09 D0 B4 B8 B4 BB 28 A5 67 70 8C 76 6F 
9430 BB D3 53 DA 27 38 60 A5 67 70 B3 E9 D8 D7 06 A5 
9440 67 70 8C 76 6F BB D3 53 DA 26 07 16 C1 D8 79 94 
9450 06 D7 6A 94 07 52 C0 D7 60 94 07 53 C0 D8 6A 94 
9460 07 D1 B3 E9 6E 92 02 D6 79 94 07 51 C1 D8 79 94 
9470 06 51 C0 D8 79 94 AC 31 92 41 CF 

Function $92AE (F4 FF)

92B3 A4 6B 66    / $666B (Total gold)
92B6 D7 C8 92

if no gold
	92B9 AC 89 B8    / Call $B889
	92BC AC 3F B8    / Call $B83F
	92BF 8E 14 9A    / $9A14 "We're out of gold!"
	92C2 E9 F4 A3 02 / Call $A3F4 -> Print
	92C6 40
	92C7 CF          / Return 0

92C8 A5 67 70    / $7067 (Current port)
92CB 53
92CC C6
92CD D8 F4 92

if port is Lisbon/Seville/Istanbul
	92D0 61
	92D1 66
	92D2 E9 69 B8 04 / Call $B869
	92D6 AC 3F B8    / Call $B83F
	92D9 A5 67 70    / $7067 (Current port)
	92DC 52
	92DD C0
	92DE D8 E7 92
	
	if Istanbul
		92E1 8A 60 9A .. / $9A60 "Sultan"
		92E4 D6 EA 92
	else (Lisbon/Seville)
		92E7 8A 67 9A    / $9A67 "King"
		
	92EA B3
	92EB 8E 27 9A    / $9A27 "Ye can't invest in\nthis port without the\n%s's approval" + wait for input
	92EE E9 99 C7 04 / Call $C799 -> Print
	92F2 40
	92F3 CF          / Return 0

92F4 A5 67 70
92F7 5E
92F8 B5
92F9 8C B4 67    / $67B4 (City stats)
92FC BB
92FD B0          / Economic investment
92FE 8C 60 EA    / 60000 (max)
9301 C0
9302 D8 17 93

if max investment
	9305 61
	9306 66
	9307 E9 69 B8 04 / Call $B869
	930B AC 3F B8    / Call $B83F
	930E 8E 6C 9A    / $9A6C "I can't accept any\nmore from ye"
	9311 E9 F4 A3 02 / Call $A3F4 -> Print
	9315 40
	9316 CF          / Return 0
	
9317 61
9318 66
9319 E9 69 B8 04 / Call $B869
931D 61
931E E9 1B B8 02 / Call $B81B
9322 8E 8C 9A    / $9A8C "What! Yer going to\ninvest here?"
9325 E9 F4 A3 02 / Call $A3F4 -> Print

9329 A5 67 70    / $7067 (Current port)
932C 5E
932D B5
932E 8C B4 67    / $67B4 (City stats)
9332 B0          / Economic investment
9333 B3
9334 8A 60 EA    / 60000
9337 B4
9338 BC          / 
9339 2B          / canInvest = (60000 - current investment)

933A A4 6B 66    / $666B (Total gold)
933D 1B
933E C6
933F D8 46 93

if total gold is less than canInvest
	9342 A4 6B 66  
	9345 2B          / canInvest = total gold

9346 AC 89 B8    / Call $B889
9349 AC 3F B8    / Call $B83F

934C 61
934D 3B
934E 61
934F 8E AC 9A    / $9AAC "How much shall we\ninvest"
9352 E9 F3 CC 08 / Call $CCF3 -> Wait for player input
9356 2A

9357 0A
9358 8B FF
935A C0
935B D8 70 93

if player cancelled
	935E 61
	935F 66
	9360 E9 69 B8 04 / Call $B869
	9364 AC 3F B8    / Call $B83F
	9367 8E C5 9A    / $9AC5 "Oh well. Be sure to\ninvest here next time"
	936A E9 F4 A3 02 / Call $A3F4 -> Print
	936E 40
	936F CF          / Return 0
	
9370 3A
9371 A5 67 70
9374 5E
9375 B5
9376 8C B4 67       / $67B4 (City stats)
9379 BB
937A B0             / Economic investment
937B B3
937C 8A 60 EA       / 60000
937F B4
9380 BC             / 60000-Economic Investment
9381 B3
9382 E9 6C DD 04    / Call $DD6C(6000-EconomicInvestment,AmountInvested) (get smaller of two)
9386 B3
9387 A5 67 70
938A 5E
938B B5
938C 8C B4 67
938F BB
9390 B4
9391 B3
9392 B0
9393 BB
9394 B1             / Increase Investment

9395 0A
9396 CD
9397 A4 6B 66
939A BC
939B A8 6B 66       / Subtract from Total Gold

939E 61
939F 66
93A0 E9 69 B8 04 / Call $B869

93A4 AC 3F B8    / Call $B83F

93A7 0A
93A8 8C E8 03    / 1000
93AB C6
93AC D8 BC 93

if less than 1000 gold invested
	93AF 0A
	93B0 D0
	93B1 8B 14
	93B3 B8
	93B4 29
	93B5 61
	93B6 8E EF 9A .. / $9AEF "Thank you kindly"
	93B9 D6 DF 93
else
	93BC 0A
	93BD 8C 0F 27    / 9999
	93C0 C8
	93C1 D8 D4 93
	
	if more than 9999 gold invested
		93C4 0A
		93C5 8C E8 03    / 1000
		93C8 B8
		93C9 90 96 00 .. / 150
		93CC 29
		92CD 61
		92CE 8E 00 9B    / $9B00 "Your charity will\nnever be forgotten"
		92D1 D6 DF 93
	
	else (1000-9999 gold invested)
		93D4 0A
		93D5 8B 64
		93D7 B8
		93D8 8F 32
		93DA 29
		93DB 61
		93DC 8E 25 9B    / $9B25 "Thank you very much"
	
93DF E9 03 C0 04 / Call $C003 -> Print

93E3 61
93E4 E9 9B CE 02 / Call $CE9B

93E8 A5 67 70    / $7067 (current port)
93EB 5E
93EC B5
93ED 8C BA 67    / $67BA (Portugal support)
93F0 BB
93F1 D3
93F2 8B 31       / 49
93F4 C8
93F5 D8 0B 94

if Portugal Support > 49
	93F8 62
	93F9 E9 E1 CF 02 / Call $CFE1 -> RNG (00-01)
	93FD B3
	93FE A5 67 70
	9401 5E
	9402 B5
	9403 8C BA 67    / $67BA (Portugal support)
	9406 BB
	9407 D3
	9408 D6 20 94
else
	940B 62
	940C E9 E1 CF 02 / Call $CFE1 -> RNG (00-01)
	9410 B3
	9411 A5 67 70
	9414 5E
	9415 B5
	9416 8C BA 67    / $67BA (Portugal support)
	9419 BB
	941A D3
	941B B3
	941C 89 64
	941E B4
	941F BC

9420 57
9421 B8
9422 B3
9423 09
9424 D0
9425 B4
9426 B8
9427 B4
9428 BB
9429 28

942A A5 67 70
942D 8C 76 6F    / $6F76
9430 BB
9431 D3
9432 53
9433 DA
9434 27

9435 38
9436 60
9437 A5 67 70
943A B3
943B E9 D8 D7 06 / Call $D7D8 (Increase port's support for Portugal by 8)

943F A5 67 70
9442 8C 76 6F
9445 BB
9446 D3
9447 53
9448 DA
9449 26

944A 07
944B 16
944C C1
944D D8 79 94

if
	9450 06
	9451 D7 6A 94
	
	if
		9454 07
		9455 52
		9456 C0
		9457 D7 60 94
		
		if
			945A 07
			945B 53
			945C C0
			945D D8 6A 94
		
		9460 07
		9461 D1
		9462 B3
		9463 E9 6E 92 02 / Call $926E		
		9467 D6 79 94
	
	946A 07
	946B 51
	946C C1
	946D D8 79 94
	
	if
		9470 06
		9471 51
		9472 C0
		9473 D8 79 94
		
		if
			9476 AC 31 92    / Call $9231 -> Increase fame

9479 41
947A CF          / Return 1
----------------------------------------------------
     00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
9470                                  20 BF E4 FC FF 
9480 40 2A 61 66 E9 69 B8 04 AC 3F B8 61 8E 65 9B E9 
9490 03 C0 04 62 64 8E 39 9B 62 67 8D 17 68 E9 56 A1 
94A0 0E A2 FF FF A0 FF FF 8C FF 00 C1 D8 BE 94 DE FE 
94B0 FF B3 A0 FF FF D2 8C 41 9B BB B0 EA 02 2A A0 FF
94C0 FF 8C FF 00 C1 D7 82 94 0A CF

Function $947B

9480 40
9481 2A

9482 61
9483 66
9484 E9 69 B8 04 / Call $B869

9488 AC 3F B8    / Call $B83F

948B 61
948C 8E 65 9B .. / $9B65 "How can I help ye?"
948F E9 03 C0 04 / Call $C003 -> Print

9493 62
9494 64
9495 8E 39 9B .. / $9B39 "Sell"/"Buy"/"View Market"/"Invest"
9498 62
9499 67
949A 8D 17
949C 68
949D E9 56 A1 0E / Call $A156 -> Get menu selection
94A1 A2 FF FF

94A4 A0 FF FF
94A7 8C FF 00
94AA C1
94AB D8 BE 94

94AE DE FE FF
94B1 B3
94B2 A0 FF FF
94B5 D2
94B6 8C 41 9B .. / $9B41
94B9 BB
94BA B0
94BB EA 02
94BD 2A

94BE A0 FF FF
94C1 8C FF 00
94C4 C1
94C5 D7 82 94

94C8 0A
94C9 CF
----------------------------------------------------
STRINGS
-------
94CA "%3d/%3d"
94D2 "Total gold: %5d"
94E2 "Ship      Load/Max"

94F5: String pointer table
00: 29 95 "Pepper"
01: 30 95 "Cinnamon"
02: 39 95 "Nutmeg"
03: 40 95 "Pimento"
04: 48 95 "Cloves"
05: 4F 95 "Olive Oil"
06: 59 95 "Grapes"
07: 60 95 "Sugar"
08: 66 95 "Cheese"
09: 6D 95 "Grain"
0A: 73 95 "Gold"
0B: 78 95 "Silver"
0C: 7F 95 "Quartz"
0D: 86 95 "Coral"
0E: 8C 95 "Ivory"
0F: 92 95 "Pearl"
10: 98 95 "Cotton"
11: 9F 95 "Raw Silk"
12: A8 95 "Wool"
13: AD 95 "Cloth"
14: B3 95 "Silk"
15: B8 95 "Firearms"
16: C1 95 "Wood"
17: C6 95 "Porcelain"
18: D0 95 "Artwork"
19: D8 95 "Carpet"

95DF "%s"
95E2 "%3d"
95E6 "%4d"
95EA "No goods on that\nvessel, Cap'n"
9609 "We have more than\nenough gold already,\nCaptain"
9638 "Variety    Amt Rate"
964C "Total gold: %5d"
965C "What can ye sell me?"
9671 "How much %s\nwill ye sell\n"
968B ""
968C "Total gold: %5d"
969C "We've got a wealth\nof gold now!"
96BC "No more goods on that\nship"
96D7 "We 'aven't any goods\nto sell"
96F4 "We've got enough gold\nalready!"
9713 "Which ship's cargo is\nfor sale?"
9733 "Gold:"
9739 "%5d"
973D "Types of"
9746 "cargo:%2d"
9750 "Space"
9756 "left:%3d"
975F "%3d"
9763 "%4d"
9767 "There isn't enough\nroom for it"
9786 "\n"
9788 "  will cost ye"
9796 "%d gold here.\nInterested"
97AF "We can't buy at those\nprices!"
97CD "Well then, what's yer\nrange"
97E9 "I can't sell at that\nprice"
9804 "Hmph. Yer wasting my\ntime"
981E "Any other goods\ncatch yer eye?"
983D "\nHow much "
9848 "will ye purchase\n"
985A ""
985B "Don't waste my time\nwith yer browsing!"
9882 "That ship is full!"
9895 "Variety   Amt Cost"
98A8 "What are ye looking\nfor today?"
98C7 "The ship is at\ncapacity"
98DF "No more goods will fitin store"
98FE "We 'aven't a penny to\nour name!"
991E "Which ship will carry\nthe goods?"

993F: String pointer table
00: 57 99 "  Spice"
01: 5F 99 "   Food"
02: 67 99 "  Metal"
03: 6F 99 "    Gem"
04: 77 99 "Textile"
05: 7F 99 " Miscellaneous"

994C
05 0A 0C 10 15 05 05 02 04 05 05

998E "          Sell   Buy"
99A3 "Variety    for   for"
99B8 "%4d"
99BC "%4d"
99C0 "----"
99C5 "----"
99CA "%4d"
99CE "%s"
99D1 " market"

99D9: String pointer table
00: E5 99 "Spice
01: EB 99 "Food
02: F0 99 "Metal
03: F6 99 "Gems
04: FB 99 "Textile
05: 03 9A "Other"

9A09 "Which one?"
9A14 "We're out of gold!"
9A27 "Ye can't invest in\nthis port without the\n%s's approval" + wait for input
9A60 "Sultan"
9A67 "King"
9A6C "I can't accept any\nmore from ye"
9A8C "What! Yer going to\ninvest here?"
9AAC "How much shall we\ninvest"
9AC5 "Oh well. Be sure to\ninvest here next time"
9AEF "Thank you kindly"
9B00 "Your charity will\nnever be forgotten"
9B25 "Thank you very much"

9B39: String pointer table
00: 49 9B "Sell"
01: 4E 9B "Buy"
02: 52 9B "View market"
03: 5E 9B "Invest"

9B41 (function pointers for selections)
00: $8485
01: $8E27
02: $91C7
03: $92AE

9B65 "How can I help ye?"